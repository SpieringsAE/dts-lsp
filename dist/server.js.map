{
  "version": 3,
  "sources": ["../server/node_modules/vscode-languageserver/lib/common/utils/is.js", "../server/node_modules/vscode-jsonrpc/lib/common/is.js", "../server/node_modules/vscode-jsonrpc/lib/common/messages.js", "../server/node_modules/vscode-jsonrpc/lib/common/linkedMap.js", "../server/node_modules/vscode-jsonrpc/lib/common/disposable.js", "../server/node_modules/vscode-jsonrpc/lib/common/ral.js", "../server/node_modules/vscode-jsonrpc/lib/common/events.js", "../server/node_modules/vscode-jsonrpc/lib/common/cancellation.js", "../server/node_modules/vscode-jsonrpc/lib/common/sharedArrayCancellation.js", "../server/node_modules/vscode-jsonrpc/lib/common/semaphore.js", "../server/node_modules/vscode-jsonrpc/lib/common/messageReader.js", "../server/node_modules/vscode-jsonrpc/lib/common/messageWriter.js", "../server/node_modules/vscode-jsonrpc/lib/common/messageBuffer.js", "../server/node_modules/vscode-jsonrpc/lib/common/connection.js", "../server/node_modules/vscode-jsonrpc/lib/common/api.js", "../server/node_modules/vscode-jsonrpc/lib/node/ril.js", "../server/node_modules/vscode-jsonrpc/lib/node/main.js", "../server/node_modules/vscode-jsonrpc/node.js", "../server/node_modules/vscode-languageserver-types/lib/umd/main.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/messages.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/utils/is.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.implementation.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.typeDefinition.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.workspaceFolder.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.configuration.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.colorProvider.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.foldingRange.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.declaration.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.selectionRange.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.progress.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.callHierarchy.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.semanticTokens.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.showDocument.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.linkedEditingRange.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.fileOperations.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.moniker.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.typeHierarchy.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.inlineValue.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.inlayHint.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.diagnostic.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.notebook.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.inlineCompletion.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/protocol.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/connection.js", "../server/node_modules/vscode-languageserver-protocol/lib/common/api.js", "../server/node_modules/vscode-languageserver-protocol/lib/node/main.js", "../server/node_modules/vscode-languageserver/lib/common/utils/uuid.js", "../server/node_modules/vscode-languageserver/lib/common/progress.js", "../server/node_modules/vscode-languageserver/lib/common/configuration.js", "../server/node_modules/vscode-languageserver/lib/common/workspaceFolder.js", "../server/node_modules/vscode-languageserver/lib/common/callHierarchy.js", "../server/node_modules/vscode-languageserver/lib/common/semanticTokens.js", "../server/node_modules/vscode-languageserver/lib/common/showDocument.js", "../server/node_modules/vscode-languageserver/lib/common/fileOperations.js", "../server/node_modules/vscode-languageserver/lib/common/linkedEditingRange.js", "../server/node_modules/vscode-languageserver/lib/common/typeHierarchy.js", "../server/node_modules/vscode-languageserver/lib/common/inlineValue.js", "../server/node_modules/vscode-languageserver/lib/common/foldingRange.js", "../server/node_modules/vscode-languageserver/lib/common/inlayHint.js", "../server/node_modules/vscode-languageserver/lib/common/diagnostic.js", "../server/node_modules/vscode-languageserver/lib/common/textDocuments.js", "../server/node_modules/vscode-languageserver/lib/common/notebook.js", "../server/node_modules/vscode-languageserver/lib/common/moniker.js", "../server/node_modules/vscode-languageserver/lib/common/server.js", "../server/node_modules/vscode-languageserver/lib/node/files.js", "../server/node_modules/vscode-languageserver-protocol/node.js", "../server/node_modules/vscode-languageserver/lib/common/inlineCompletion.proposed.js", "../server/node_modules/vscode-languageserver/lib/common/api.js", "../server/node_modules/vscode-languageserver/lib/node/main.js", "../server/node_modules/vscode-languageserver/node.js", "../server/node_modules/yaml/dist/nodes/identity.js", "../server/node_modules/yaml/dist/visit.js", "../server/node_modules/yaml/dist/doc/directives.js", "../server/node_modules/yaml/dist/doc/anchors.js", "../server/node_modules/yaml/dist/doc/applyReviver.js", "../server/node_modules/yaml/dist/nodes/toJS.js", "../server/node_modules/yaml/dist/nodes/Node.js", "../server/node_modules/yaml/dist/nodes/Alias.js", "../server/node_modules/yaml/dist/nodes/Scalar.js", "../server/node_modules/yaml/dist/doc/createNode.js", "../server/node_modules/yaml/dist/nodes/Collection.js", "../server/node_modules/yaml/dist/stringify/stringifyComment.js", "../server/node_modules/yaml/dist/stringify/foldFlowLines.js", "../server/node_modules/yaml/dist/stringify/stringifyString.js", "../server/node_modules/yaml/dist/stringify/stringify.js", "../server/node_modules/yaml/dist/stringify/stringifyPair.js", "../server/node_modules/yaml/dist/log.js", "../server/node_modules/yaml/dist/schema/yaml-1.1/merge.js", "../server/node_modules/yaml/dist/nodes/addPairToJSMap.js", "../server/node_modules/yaml/dist/nodes/Pair.js", "../server/node_modules/yaml/dist/stringify/stringifyCollection.js", "../server/node_modules/yaml/dist/nodes/YAMLMap.js", "../server/node_modules/yaml/dist/schema/common/map.js", "../server/node_modules/yaml/dist/nodes/YAMLSeq.js", "../server/node_modules/yaml/dist/schema/common/seq.js", "../server/node_modules/yaml/dist/schema/common/string.js", "../server/node_modules/yaml/dist/schema/common/null.js", "../server/node_modules/yaml/dist/schema/core/bool.js", "../server/node_modules/yaml/dist/stringify/stringifyNumber.js", "../server/node_modules/yaml/dist/schema/core/float.js", "../server/node_modules/yaml/dist/schema/core/int.js", "../server/node_modules/yaml/dist/schema/core/schema.js", "../server/node_modules/yaml/dist/schema/json/schema.js", "../server/node_modules/yaml/dist/schema/yaml-1.1/binary.js", "../server/node_modules/yaml/dist/schema/yaml-1.1/pairs.js", "../server/node_modules/yaml/dist/schema/yaml-1.1/omap.js", "../server/node_modules/yaml/dist/schema/yaml-1.1/bool.js", "../server/node_modules/yaml/dist/schema/yaml-1.1/float.js", "../server/node_modules/yaml/dist/schema/yaml-1.1/int.js", "../server/node_modules/yaml/dist/schema/yaml-1.1/set.js", "../server/node_modules/yaml/dist/schema/yaml-1.1/timestamp.js", "../server/node_modules/yaml/dist/schema/yaml-1.1/schema.js", "../server/node_modules/yaml/dist/schema/tags.js", "../server/node_modules/yaml/dist/schema/Schema.js", "../server/node_modules/yaml/dist/stringify/stringifyDocument.js", "../server/node_modules/yaml/dist/doc/Document.js", "../server/node_modules/yaml/dist/errors.js", "../server/node_modules/yaml/dist/compose/resolve-props.js", "../server/node_modules/yaml/dist/compose/util-contains-newline.js", "../server/node_modules/yaml/dist/compose/util-flow-indent-check.js", "../server/node_modules/yaml/dist/compose/util-map-includes.js", "../server/node_modules/yaml/dist/compose/resolve-block-map.js", "../server/node_modules/yaml/dist/compose/resolve-block-seq.js", "../server/node_modules/yaml/dist/compose/resolve-end.js", "../server/node_modules/yaml/dist/compose/resolve-flow-collection.js", "../server/node_modules/yaml/dist/compose/compose-collection.js", "../server/node_modules/yaml/dist/compose/resolve-block-scalar.js", "../server/node_modules/yaml/dist/compose/resolve-flow-scalar.js", "../server/node_modules/yaml/dist/compose/compose-scalar.js", "../server/node_modules/yaml/dist/compose/util-empty-scalar-position.js", "../server/node_modules/yaml/dist/compose/compose-node.js", "../server/node_modules/yaml/dist/compose/compose-doc.js", "../server/node_modules/yaml/dist/compose/composer.js", "../server/node_modules/yaml/dist/parse/cst-scalar.js", "../server/node_modules/yaml/dist/parse/cst-stringify.js", "../server/node_modules/yaml/dist/parse/cst-visit.js", "../server/node_modules/yaml/dist/parse/cst.js", "../server/node_modules/yaml/dist/parse/lexer.js", "../server/node_modules/yaml/dist/parse/line-counter.js", "../server/node_modules/yaml/dist/parse/parser.js", "../server/node_modules/yaml/dist/public-api.js", "../server/node_modules/yaml/dist/index.js", "../server/node_modules/balanced-match/index.js", "../server/node_modules/glob/node_modules/brace-expansion/index.js", "../server/src/server.ts", "../server/node_modules/vscode-languageserver-textdocument/lib/esm/main.js", "../server/src/types.ts", "../server/src/helpers.ts", "../server/src/ast/base.ts", "../server/src/ast/dtc/node.ts", "../server/src/ast/dtc/property.ts", "../server/src/ast/dtc/values/string.ts", "../server/src/ast/dtc/values/arrayValue.ts", "../server/src/ast/dtc/values/number.ts", "../server/src/ast/cPreprocessors/expression.ts", "../server/src/ast/dtc/values/byteString.ts", "../server/src/ast/dtc/delete.ts", "../server/src/ast/dtc/deleteNode.ts", "../server/src/ast/dtc/deleteProperty.ts", "../server/src/ast/dtc/labelRef.ts", "../server/src/context/node.ts", "../server/src/ast/helpers.ts", "../server/src/dtsTypes/types.ts", "../server/src/ast/dtc/values/nodePath.ts", "../server/src/ast/dtc/values/value.ts", "../server/src/dtsTypes/standardTypes/helpers.ts", "../server/src/dtsTypes/standardTypes/compatible.ts", "../server/src/dtsTypes/standardTypes/deviceType.ts", "../server/src/dtsTypes/standardTypes/interruptCells.ts", "../server/src/dtsTypes/standardTypes/interruptController.ts", "../server/src/dtsTypes/standardTypes/interruptParent.ts", "../server/src/dtsTypes/standardTypes/interrupts.ts", "../server/src/dtsTypes/standardTypes/interruptsExtended.ts", "../server/src/dtsTypes/standardTypes/dmaNoncoherent.ts", "../server/src/dtsTypes/standardTypes/dmaCoherent.ts", "../server/src/dtsTypes/standardTypes/dmaRanges.ts", "../server/src/dtsTypes/standardTypes/ranges.ts", "../server/src/dtsTypes/standardTypes/virtualReg.ts", "../server/src/dtsTypes/standardTypes/reg.ts", "../server/src/dtsTypes/standardTypes/sizeCells.ts", "../server/src/dtsTypes/standardTypes/addressCells.ts", "../server/src/dtsTypes/standardTypes/status.ts", "../server/src/dtsTypes/standardTypes/phandle.ts", "../server/src/dtsTypes/standardTypes/model.ts", "../server/src/dtsTypes/standardTypes/name.ts", "../server/src/dtsTypes/standardTypes/interruptMap.ts", "../server/src/dtsTypes/standardTypes/interruptMapMask.ts", "../server/src/dtsTypes/standardTypes/nexusSpecifierMap.ts", "../server/src/dtsTypes/standardTypes/nexusSpecifierMapMask.ts", "../server/src/dtsTypes/standardTypes/nexusSpecifierMapPassThru.ts", "../server/src/dtsTypes/standardTypes/nexusSpecifierCells.ts", "../server/src/dtsTypes/standardTypes.ts", "../server/src/context/property.ts", "../server/src/ast/dtc/label.ts", "../server/src/context/runtime.ts", "../server/src/providers/tokenizedDocument.ts", "../server/src/lexer.ts", "../server/src/ast/keyword.ts", "../server/src/ast/dtc/values/values.ts", "../server/src/ast/dtc/dtsDocVersion.ts", "../server/src/ast/dtc/values/labeledValue.ts", "../server/src/ast/cPreprocessors/functionCall.ts", "../server/src/ast/cPreprocessors/cIdentifier.ts", "../server/src/ast/cPreprocessors/operator.ts", "../server/src/baseParser.ts", "../server/src/ast/dtc/comment.ts", "../server/src/commentsParser.ts", "../server/src/ast/cPreprocessors/macro.ts", "../server/src/ast/cPreprocessors/functionDefinition.ts", "../server/src/ast/cPreprocessors/ifDefine.ts", "../server/src/cPreprocessorParser.ts", "../server/src/ast/cPreprocessors/include.ts", "../server/src/parser.ts", "../server/src/runtimeEvaluator.ts", "../server/src/getCompletions.ts", "../server/src/findReferences.ts", "../server/src/getRenameRequest.ts", "../server/src/findDefinitions.ts", "../server/src/findDeclarations.ts", "../server/src/getCodeActions.ts", "../server/src/getDocumentFormatting.ts", "../server/src/getTypeCompletions.ts", "../server/src/getHover.ts", "../server/src/dtsTypes/bindings/zephyr/loader.ts", "../server/node_modules/glob/node_modules/minimatch/src/index.ts", "../server/node_modules/glob/node_modules/minimatch/src/assert-valid-pattern.ts", "../server/node_modules/glob/node_modules/minimatch/src/brace-expressions.ts", "../server/node_modules/glob/node_modules/minimatch/src/unescape.ts", "../server/node_modules/glob/node_modules/minimatch/src/ast.ts", "../server/node_modules/glob/node_modules/minimatch/src/escape.ts", "../server/node_modules/glob/src/glob.ts", "../server/node_modules/path-scurry/node_modules/lru-cache/src/index.ts", "../server/node_modules/path-scurry/src/index.ts", "../server/node_modules/minipass/src/index.ts", "../server/node_modules/glob/src/pattern.ts", "../server/node_modules/glob/src/ignore.ts", "../server/node_modules/glob/src/processor.ts", "../server/node_modules/glob/src/walker.ts", "../server/node_modules/glob/src/has-magic.ts", "../server/node_modules/glob/src/index.ts", "../server/src/dtsTypes/bindings/bindingLoader.ts"],
  "sourcesContent": ["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.thenable = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\nfunction typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n}\nexports.typedArray = typedArray;\nfunction thenable(value) {\n    return value && func(value.then);\n}\nexports.thenable = thenable;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Message = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType = exports.RequestType0 = exports.AbstractMessageSignature = exports.ParameterStructures = exports.ResponseError = exports.ErrorCodes = void 0;\nconst is = require(\"./is\");\n/**\n * Predefined error codes.\n */\nvar ErrorCodes;\n(function (ErrorCodes) {\n    // Defined by JSON RPC\n    ErrorCodes.ParseError = -32700;\n    ErrorCodes.InvalidRequest = -32600;\n    ErrorCodes.MethodNotFound = -32601;\n    ErrorCodes.InvalidParams = -32602;\n    ErrorCodes.InternalError = -32603;\n    /**\n     * This is the start range of JSON RPC reserved error codes.\n     * It doesn't denote a real error code. No application error codes should\n     * be defined between the start and end range. For backwards\n     * compatibility the `ServerNotInitialized` and the `UnknownErrorCode`\n     * are left in the range.\n     *\n     * @since 3.16.0\n    */\n    ErrorCodes.jsonrpcReservedErrorRangeStart = -32099;\n    /** @deprecated use  jsonrpcReservedErrorRangeStart */\n    ErrorCodes.serverErrorStart = -32099;\n    /**\n     * An error occurred when write a message to the transport layer.\n     */\n    ErrorCodes.MessageWriteError = -32099;\n    /**\n     * An error occurred when reading a message from the transport layer.\n     */\n    ErrorCodes.MessageReadError = -32098;\n    /**\n     * The connection got disposed or lost and all pending responses got\n     * rejected.\n     */\n    ErrorCodes.PendingResponseRejected = -32097;\n    /**\n     * The connection is inactive and a use of it failed.\n     */\n    ErrorCodes.ConnectionInactive = -32096;\n    /**\n     * Error code indicating that a server received a notification or\n     * request before the server has received the `initialize` request.\n     */\n    ErrorCodes.ServerNotInitialized = -32002;\n    ErrorCodes.UnknownErrorCode = -32001;\n    /**\n     * This is the end range of JSON RPC reserved error codes.\n     * It doesn't denote a real error code.\n     *\n     * @since 3.16.0\n    */\n    ErrorCodes.jsonrpcReservedErrorRangeEnd = -32000;\n    /** @deprecated use  jsonrpcReservedErrorRangeEnd */\n    ErrorCodes.serverErrorEnd = -32000;\n})(ErrorCodes || (exports.ErrorCodes = ErrorCodes = {}));\n/**\n * An error object return in a response in case a request\n * has failed.\n */\nclass ResponseError extends Error {\n    constructor(code, message, data) {\n        super(message);\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\n        this.data = data;\n        Object.setPrototypeOf(this, ResponseError.prototype);\n    }\n    toJson() {\n        const result = {\n            code: this.code,\n            message: this.message\n        };\n        if (this.data !== undefined) {\n            result.data = this.data;\n        }\n        return result;\n    }\n}\nexports.ResponseError = ResponseError;\nclass ParameterStructures {\n    constructor(kind) {\n        this.kind = kind;\n    }\n    static is(value) {\n        return value === ParameterStructures.auto || value === ParameterStructures.byName || value === ParameterStructures.byPosition;\n    }\n    toString() {\n        return this.kind;\n    }\n}\nexports.ParameterStructures = ParameterStructures;\n/**\n * The parameter structure is automatically inferred on the number of parameters\n * and the parameter type in case of a single param.\n */\nParameterStructures.auto = new ParameterStructures('auto');\n/**\n * Forces `byPosition` parameter structure. This is useful if you have a single\n * parameter which has a literal type.\n */\nParameterStructures.byPosition = new ParameterStructures('byPosition');\n/**\n * Forces `byName` parameter structure. This is only useful when having a single\n * parameter. The library will report errors if used with a different number of\n * parameters.\n */\nParameterStructures.byName = new ParameterStructures('byName');\n/**\n * An abstract implementation of a MessageType.\n */\nclass AbstractMessageSignature {\n    constructor(method, numberOfParams) {\n        this.method = method;\n        this.numberOfParams = numberOfParams;\n    }\n    get parameterStructures() {\n        return ParameterStructures.auto;\n    }\n}\nexports.AbstractMessageSignature = AbstractMessageSignature;\n/**\n * Classes to type request response pairs\n */\nclass RequestType0 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 0);\n    }\n}\nexports.RequestType0 = RequestType0;\nclass RequestType extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.RequestType = RequestType;\nclass RequestType1 extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.RequestType1 = RequestType1;\nclass RequestType2 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 2);\n    }\n}\nexports.RequestType2 = RequestType2;\nclass RequestType3 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 3);\n    }\n}\nexports.RequestType3 = RequestType3;\nclass RequestType4 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 4);\n    }\n}\nexports.RequestType4 = RequestType4;\nclass RequestType5 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 5);\n    }\n}\nexports.RequestType5 = RequestType5;\nclass RequestType6 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 6);\n    }\n}\nexports.RequestType6 = RequestType6;\nclass RequestType7 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 7);\n    }\n}\nexports.RequestType7 = RequestType7;\nclass RequestType8 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 8);\n    }\n}\nexports.RequestType8 = RequestType8;\nclass RequestType9 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 9);\n    }\n}\nexports.RequestType9 = RequestType9;\nclass NotificationType extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.NotificationType = NotificationType;\nclass NotificationType0 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 0);\n    }\n}\nexports.NotificationType0 = NotificationType0;\nclass NotificationType1 extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.NotificationType1 = NotificationType1;\nclass NotificationType2 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 2);\n    }\n}\nexports.NotificationType2 = NotificationType2;\nclass NotificationType3 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 3);\n    }\n}\nexports.NotificationType3 = NotificationType3;\nclass NotificationType4 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 4);\n    }\n}\nexports.NotificationType4 = NotificationType4;\nclass NotificationType5 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 5);\n    }\n}\nexports.NotificationType5 = NotificationType5;\nclass NotificationType6 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 6);\n    }\n}\nexports.NotificationType6 = NotificationType6;\nclass NotificationType7 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 7);\n    }\n}\nexports.NotificationType7 = NotificationType7;\nclass NotificationType8 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 8);\n    }\n}\nexports.NotificationType8 = NotificationType8;\nclass NotificationType9 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 9);\n    }\n}\nexports.NotificationType9 = NotificationType9;\nvar Message;\n(function (Message) {\n    /**\n     * Tests if the given message is a request message\n     */\n    function isRequest(message) {\n        const candidate = message;\n        return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\n    }\n    Message.isRequest = isRequest;\n    /**\n     * Tests if the given message is a notification message\n     */\n    function isNotification(message) {\n        const candidate = message;\n        return candidate && is.string(candidate.method) && message.id === void 0;\n    }\n    Message.isNotification = isNotification;\n    /**\n     * Tests if the given message is a response message\n     */\n    function isResponse(message) {\n        const candidate = message;\n        return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\n    }\n    Message.isResponse = isResponse;\n})(Message || (exports.Message = Message = {}));\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LRUCache = exports.LinkedMap = exports.Touch = void 0;\nvar Touch;\n(function (Touch) {\n    Touch.None = 0;\n    Touch.First = 1;\n    Touch.AsOld = Touch.First;\n    Touch.Last = 2;\n    Touch.AsNew = Touch.Last;\n})(Touch || (exports.Touch = Touch = {}));\nclass LinkedMap {\n    constructor() {\n        this[_a] = 'LinkedMap';\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        return this._head?.value;\n    }\n    get last() {\n        return this._tail?.value;\n    }\n    has(key) {\n        return this._map.has(key);\n    }\n    get(key, touch = Touch.None) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== Touch.None) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = Touch.None) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== Touch.None) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case Touch.None:\n                    this.addItemLast(item);\n                    break;\n                case Touch.First:\n                    this.addItemFirst(item);\n                    break;\n                case Touch.Last:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw new Error(`LinkedMap got modified during iteration.`);\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]: () => {\n                return iterator;\n            },\n            next: () => {\n                if (this._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]: () => {\n                return iterator;\n            },\n            next: () => {\n                if (this._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]: () => {\n                return iterator;\n            },\n            next: () => {\n                if (this._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            // This can only happened if size === 1 which is handle\n            // by the case above.\n            if (!item.next) {\n                throw new Error('Invalid list');\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            // This can only happened if size === 1 which is handle\n            // by the case above.\n            if (!item.previous) {\n                throw new Error('Invalid list');\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\n            return;\n        }\n        if (touch === Touch.First) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === Touch.Last) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nexports.LinkedMap = LinkedMap;\nclass LRUCache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get ratio() {\n        return this._ratio;\n    }\n    set ratio(ratio) {\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n        this.checkTrim();\n    }\n    get(key, touch = Touch.AsNew) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, Touch.None);\n    }\n    set(key, value) {\n        super.set(key, value, Touch.Last);\n        this.checkTrim();\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trimOld(Math.round(this._limit * this._ratio));\n        }\n    }\n}\nexports.LRUCache = LRUCache;\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Disposable = void 0;\nvar Disposable;\n(function (Disposable) {\n    function create(func) {\n        return {\n            dispose: func\n        };\n    }\n    Disposable.create = create;\n})(Disposable || (exports.Disposable = Disposable = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event || (exports.Event = Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                (0, ral_1.default)().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken || (exports.CancellationToken = CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { handle.dispose(); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = void 0;\nconst cancellation_1 = require(\"./cancellation\");\nvar CancellationState;\n(function (CancellationState) {\n    CancellationState.Continue = 0;\n    CancellationState.Cancelled = 1;\n})(CancellationState || (CancellationState = {}));\nclass SharedArraySenderStrategy {\n    constructor() {\n        this.buffers = new Map();\n    }\n    enableCancellation(request) {\n        if (request.id === null) {\n            return;\n        }\n        const buffer = new SharedArrayBuffer(4);\n        const data = new Int32Array(buffer, 0, 1);\n        data[0] = CancellationState.Continue;\n        this.buffers.set(request.id, buffer);\n        request.$cancellationData = buffer;\n    }\n    async sendCancellation(_conn, id) {\n        const buffer = this.buffers.get(id);\n        if (buffer === undefined) {\n            return;\n        }\n        const data = new Int32Array(buffer, 0, 1);\n        Atomics.store(data, 0, CancellationState.Cancelled);\n    }\n    cleanup(id) {\n        this.buffers.delete(id);\n    }\n    dispose() {\n        this.buffers.clear();\n    }\n}\nexports.SharedArraySenderStrategy = SharedArraySenderStrategy;\nclass SharedArrayBufferCancellationToken {\n    constructor(buffer) {\n        this.data = new Int32Array(buffer, 0, 1);\n    }\n    get isCancellationRequested() {\n        return Atomics.load(this.data, 0) === CancellationState.Cancelled;\n    }\n    get onCancellationRequested() {\n        throw new Error(`Cancellation over SharedArrayBuffer doesn't support cancellation events`);\n    }\n}\nclass SharedArrayBufferCancellationTokenSource {\n    constructor(buffer) {\n        this.token = new SharedArrayBufferCancellationToken(buffer);\n    }\n    cancel() {\n    }\n    dispose() {\n    }\n}\nclass SharedArrayReceiverStrategy {\n    constructor() {\n        this.kind = 'request';\n    }\n    createCancellationTokenSource(request) {\n        const buffer = request.$cancellationData;\n        if (buffer === undefined) {\n            return new cancellation_1.CancellationTokenSource();\n        }\n        return new SharedArrayBufferCancellationTokenSource(buffer);\n    }\n}\nexports.SharedArrayReceiverStrategy = SharedArrayReceiverStrategy;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Semaphore = void 0;\nconst ral_1 = require(\"./ral\");\nclass Semaphore {\n    constructor(capacity = 1) {\n        if (capacity <= 0) {\n            throw new Error('Capacity must be greater than 0');\n        }\n        this._capacity = capacity;\n        this._active = 0;\n        this._waiting = [];\n    }\n    lock(thunk) {\n        return new Promise((resolve, reject) => {\n            this._waiting.push({ thunk, resolve, reject });\n            this.runNext();\n        });\n    }\n    get active() {\n        return this._active;\n    }\n    runNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        (0, ral_1.default)().timer.setImmediate(() => this.doRunNext());\n    }\n    doRunNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        const next = this._waiting.shift();\n        this._active++;\n        if (this._active > this._capacity) {\n            throw new Error(`To many thunks active`);\n        }\n        try {\n            const result = next.thunk();\n            if (result instanceof Promise) {\n                result.then((value) => {\n                    this._active--;\n                    next.resolve(value);\n                    this.runNext();\n                }, (err) => {\n                    this._active--;\n                    next.reject(err);\n                    this.runNext();\n                });\n            }\n            else {\n                this._active--;\n                next.resolve(result);\n                this.runNext();\n            }\n        }\n        catch (err) {\n            this._active--;\n            next.reject(err);\n            this.runNext();\n        }\n    }\n}\nexports.Semaphore = Semaphore;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nconst semaphore_1 = require(\"./semaphore\");\nvar MessageReader;\n(function (MessageReader) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\n    }\n    MessageReader.is = is;\n})(MessageReader || (exports.MessageReader = MessageReader = {}));\nclass AbstractMessageReader {\n    constructor() {\n        this.errorEmitter = new events_1.Emitter();\n        this.closeEmitter = new events_1.Emitter();\n        this.partialMessageEmitter = new events_1.Emitter();\n    }\n    dispose() {\n        this.errorEmitter.dispose();\n        this.closeEmitter.dispose();\n    }\n    get onError() {\n        return this.errorEmitter.event;\n    }\n    fireError(error) {\n        this.errorEmitter.fire(this.asError(error));\n    }\n    get onClose() {\n        return this.closeEmitter.event;\n    }\n    fireClose() {\n        this.closeEmitter.fire(undefined);\n    }\n    get onPartialMessage() {\n        return this.partialMessageEmitter.event;\n    }\n    firePartialMessage(info) {\n        this.partialMessageEmitter.fire(info);\n    }\n    asError(error) {\n        if (error instanceof Error) {\n            return error;\n        }\n        else {\n            return new Error(`Reader received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n        }\n    }\n}\nexports.AbstractMessageReader = AbstractMessageReader;\nvar ResolvedMessageReaderOptions;\n(function (ResolvedMessageReaderOptions) {\n    function fromOptions(options) {\n        let charset;\n        let result;\n        let contentDecoder;\n        const contentDecoders = new Map();\n        let contentTypeDecoder;\n        const contentTypeDecoders = new Map();\n        if (options === undefined || typeof options === 'string') {\n            charset = options ?? 'utf-8';\n        }\n        else {\n            charset = options.charset ?? 'utf-8';\n            if (options.contentDecoder !== undefined) {\n                contentDecoder = options.contentDecoder;\n                contentDecoders.set(contentDecoder.name, contentDecoder);\n            }\n            if (options.contentDecoders !== undefined) {\n                for (const decoder of options.contentDecoders) {\n                    contentDecoders.set(decoder.name, decoder);\n                }\n            }\n            if (options.contentTypeDecoder !== undefined) {\n                contentTypeDecoder = options.contentTypeDecoder;\n                contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);\n            }\n            if (options.contentTypeDecoders !== undefined) {\n                for (const decoder of options.contentTypeDecoders) {\n                    contentTypeDecoders.set(decoder.name, decoder);\n                }\n            }\n        }\n        if (contentTypeDecoder === undefined) {\n            contentTypeDecoder = (0, ral_1.default)().applicationJson.decoder;\n            contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);\n        }\n        return { charset, contentDecoder, contentDecoders, contentTypeDecoder, contentTypeDecoders };\n    }\n    ResolvedMessageReaderOptions.fromOptions = fromOptions;\n})(ResolvedMessageReaderOptions || (ResolvedMessageReaderOptions = {}));\nclass ReadableStreamMessageReader extends AbstractMessageReader {\n    constructor(readable, options) {\n        super();\n        this.readable = readable;\n        this.options = ResolvedMessageReaderOptions.fromOptions(options);\n        this.buffer = (0, ral_1.default)().messageBuffer.create(this.options.charset);\n        this._partialMessageTimeout = 10000;\n        this.nextMessageLength = -1;\n        this.messageToken = 0;\n        this.readSemaphore = new semaphore_1.Semaphore(1);\n    }\n    set partialMessageTimeout(timeout) {\n        this._partialMessageTimeout = timeout;\n    }\n    get partialMessageTimeout() {\n        return this._partialMessageTimeout;\n    }\n    listen(callback) {\n        this.nextMessageLength = -1;\n        this.messageToken = 0;\n        this.partialMessageTimer = undefined;\n        this.callback = callback;\n        const result = this.readable.onData((data) => {\n            this.onData(data);\n        });\n        this.readable.onError((error) => this.fireError(error));\n        this.readable.onClose(() => this.fireClose());\n        return result;\n    }\n    onData(data) {\n        try {\n            this.buffer.append(data);\n            while (true) {\n                if (this.nextMessageLength === -1) {\n                    const headers = this.buffer.tryReadHeaders(true);\n                    if (!headers) {\n                        return;\n                    }\n                    const contentLength = headers.get('content-length');\n                    if (!contentLength) {\n                        this.fireError(new Error(`Header must provide a Content-Length property.\\n${JSON.stringify(Object.fromEntries(headers))}`));\n                        return;\n                    }\n                    const length = parseInt(contentLength);\n                    if (isNaN(length)) {\n                        this.fireError(new Error(`Content-Length value must be a number. Got ${contentLength}`));\n                        return;\n                    }\n                    this.nextMessageLength = length;\n                }\n                const body = this.buffer.tryReadBody(this.nextMessageLength);\n                if (body === undefined) {\n                    /** We haven't received the full message yet. */\n                    this.setPartialMessageTimer();\n                    return;\n                }\n                this.clearPartialMessageTimer();\n                this.nextMessageLength = -1;\n                // Make sure that we convert one received message after the\n                // other. Otherwise it could happen that a decoding of a second\n                // smaller message finished before the decoding of a first larger\n                // message and then we would deliver the second message first.\n                this.readSemaphore.lock(async () => {\n                    const bytes = this.options.contentDecoder !== undefined\n                        ? await this.options.contentDecoder.decode(body)\n                        : body;\n                    const message = await this.options.contentTypeDecoder.decode(bytes, this.options);\n                    this.callback(message);\n                }).catch((error) => {\n                    this.fireError(error);\n                });\n            }\n        }\n        catch (error) {\n            this.fireError(error);\n        }\n    }\n    clearPartialMessageTimer() {\n        if (this.partialMessageTimer) {\n            this.partialMessageTimer.dispose();\n            this.partialMessageTimer = undefined;\n        }\n    }\n    setPartialMessageTimer() {\n        this.clearPartialMessageTimer();\n        if (this._partialMessageTimeout <= 0) {\n            return;\n        }\n        this.partialMessageTimer = (0, ral_1.default)().timer.setTimeout((token, timeout) => {\n            this.partialMessageTimer = undefined;\n            if (token === this.messageToken) {\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\n                this.setPartialMessageTimer();\n            }\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\n    }\n}\nexports.ReadableStreamMessageReader = ReadableStreamMessageReader;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst semaphore_1 = require(\"./semaphore\");\nconst events_1 = require(\"./events\");\nconst ContentLength = 'Content-Length: ';\nconst CRLF = '\\r\\n';\nvar MessageWriter;\n(function (MessageWriter) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\n            Is.func(candidate.onError) && Is.func(candidate.write);\n    }\n    MessageWriter.is = is;\n})(MessageWriter || (exports.MessageWriter = MessageWriter = {}));\nclass AbstractMessageWriter {\n    constructor() {\n        this.errorEmitter = new events_1.Emitter();\n        this.closeEmitter = new events_1.Emitter();\n    }\n    dispose() {\n        this.errorEmitter.dispose();\n        this.closeEmitter.dispose();\n    }\n    get onError() {\n        return this.errorEmitter.event;\n    }\n    fireError(error, message, count) {\n        this.errorEmitter.fire([this.asError(error), message, count]);\n    }\n    get onClose() {\n        return this.closeEmitter.event;\n    }\n    fireClose() {\n        this.closeEmitter.fire(undefined);\n    }\n    asError(error) {\n        if (error instanceof Error) {\n            return error;\n        }\n        else {\n            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n        }\n    }\n}\nexports.AbstractMessageWriter = AbstractMessageWriter;\nvar ResolvedMessageWriterOptions;\n(function (ResolvedMessageWriterOptions) {\n    function fromOptions(options) {\n        if (options === undefined || typeof options === 'string') {\n            return { charset: options ?? 'utf-8', contentTypeEncoder: (0, ral_1.default)().applicationJson.encoder };\n        }\n        else {\n            return { charset: options.charset ?? 'utf-8', contentEncoder: options.contentEncoder, contentTypeEncoder: options.contentTypeEncoder ?? (0, ral_1.default)().applicationJson.encoder };\n        }\n    }\n    ResolvedMessageWriterOptions.fromOptions = fromOptions;\n})(ResolvedMessageWriterOptions || (ResolvedMessageWriterOptions = {}));\nclass WriteableStreamMessageWriter extends AbstractMessageWriter {\n    constructor(writable, options) {\n        super();\n        this.writable = writable;\n        this.options = ResolvedMessageWriterOptions.fromOptions(options);\n        this.errorCount = 0;\n        this.writeSemaphore = new semaphore_1.Semaphore(1);\n        this.writable.onError((error) => this.fireError(error));\n        this.writable.onClose(() => this.fireClose());\n    }\n    async write(msg) {\n        return this.writeSemaphore.lock(async () => {\n            const payload = this.options.contentTypeEncoder.encode(msg, this.options).then((buffer) => {\n                if (this.options.contentEncoder !== undefined) {\n                    return this.options.contentEncoder.encode(buffer);\n                }\n                else {\n                    return buffer;\n                }\n            });\n            return payload.then((buffer) => {\n                const headers = [];\n                headers.push(ContentLength, buffer.byteLength.toString(), CRLF);\n                headers.push(CRLF);\n                return this.doWrite(msg, headers, buffer);\n            }, (error) => {\n                this.fireError(error);\n                throw error;\n            });\n        });\n    }\n    async doWrite(msg, headers, data) {\n        try {\n            await this.writable.write(headers.join(''), 'ascii');\n            return this.writable.write(data);\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n        this.writable.end();\n    }\n}\nexports.WriteableStreamMessageWriter = WriteableStreamMessageWriter;\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractMessageBuffer = void 0;\nconst CR = 13;\nconst LF = 10;\nconst CRLF = '\\r\\n';\nclass AbstractMessageBuffer {\n    constructor(encoding = 'utf-8') {\n        this._encoding = encoding;\n        this._chunks = [];\n        this._totalLength = 0;\n    }\n    get encoding() {\n        return this._encoding;\n    }\n    append(chunk) {\n        const toAppend = typeof chunk === 'string' ? this.fromString(chunk, this._encoding) : chunk;\n        this._chunks.push(toAppend);\n        this._totalLength += toAppend.byteLength;\n    }\n    tryReadHeaders(lowerCaseKeys = false) {\n        if (this._chunks.length === 0) {\n            return undefined;\n        }\n        let state = 0;\n        let chunkIndex = 0;\n        let offset = 0;\n        let chunkBytesRead = 0;\n        row: while (chunkIndex < this._chunks.length) {\n            const chunk = this._chunks[chunkIndex];\n            offset = 0;\n            column: while (offset < chunk.length) {\n                const value = chunk[offset];\n                switch (value) {\n                    case CR:\n                        switch (state) {\n                            case 0:\n                                state = 1;\n                                break;\n                            case 2:\n                                state = 3;\n                                break;\n                            default:\n                                state = 0;\n                        }\n                        break;\n                    case LF:\n                        switch (state) {\n                            case 1:\n                                state = 2;\n                                break;\n                            case 3:\n                                state = 4;\n                                offset++;\n                                break row;\n                            default:\n                                state = 0;\n                        }\n                        break;\n                    default:\n                        state = 0;\n                }\n                offset++;\n            }\n            chunkBytesRead += chunk.byteLength;\n            chunkIndex++;\n        }\n        if (state !== 4) {\n            return undefined;\n        }\n        // The buffer contains the two CRLF at the end. So we will\n        // have two empty lines after the split at the end as well.\n        const buffer = this._read(chunkBytesRead + offset);\n        const result = new Map();\n        const headers = this.toString(buffer, 'ascii').split(CRLF);\n        if (headers.length < 2) {\n            return result;\n        }\n        for (let i = 0; i < headers.length - 2; i++) {\n            const header = headers[i];\n            const index = header.indexOf(':');\n            if (index === -1) {\n                throw new Error(`Message header must separate key and value using ':'\\n${header}`);\n            }\n            const key = header.substr(0, index);\n            const value = header.substr(index + 1).trim();\n            result.set(lowerCaseKeys ? key.toLowerCase() : key, value);\n        }\n        return result;\n    }\n    tryReadBody(length) {\n        if (this._totalLength < length) {\n            return undefined;\n        }\n        return this._read(length);\n    }\n    get numberOfBytes() {\n        return this._totalLength;\n    }\n    _read(byteCount) {\n        if (byteCount === 0) {\n            return this.emptyBuffer();\n        }\n        if (byteCount > this._totalLength) {\n            throw new Error(`Cannot read so many bytes!`);\n        }\n        if (this._chunks[0].byteLength === byteCount) {\n            // super fast path, precisely first chunk must be returned\n            const chunk = this._chunks[0];\n            this._chunks.shift();\n            this._totalLength -= byteCount;\n            return this.asNative(chunk);\n        }\n        if (this._chunks[0].byteLength > byteCount) {\n            // fast path, the reading is entirely within the first chunk\n            const chunk = this._chunks[0];\n            const result = this.asNative(chunk, byteCount);\n            this._chunks[0] = chunk.slice(byteCount);\n            this._totalLength -= byteCount;\n            return result;\n        }\n        const result = this.allocNative(byteCount);\n        let resultOffset = 0;\n        let chunkIndex = 0;\n        while (byteCount > 0) {\n            const chunk = this._chunks[chunkIndex];\n            if (chunk.byteLength > byteCount) {\n                // this chunk will survive\n                const chunkPart = chunk.slice(0, byteCount);\n                result.set(chunkPart, resultOffset);\n                resultOffset += byteCount;\n                this._chunks[chunkIndex] = chunk.slice(byteCount);\n                this._totalLength -= byteCount;\n                byteCount -= byteCount;\n            }\n            else {\n                // this chunk will be entirely read\n                result.set(chunk, resultOffset);\n                resultOffset += chunk.byteLength;\n                this._chunks.shift();\n                this._totalLength -= chunk.byteLength;\n                byteCount -= chunk.byteLength;\n            }\n        }\n        return result;\n    }\n}\nexports.AbstractMessageBuffer = AbstractMessageBuffer;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMessageConnection = exports.ConnectionOptions = exports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.RequestCancellationReceiverStrategy = exports.IdCancellationReceiverStrategy = exports.ConnectionStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.Trace = exports.NullLogger = exports.ProgressType = exports.ProgressToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst messages_1 = require(\"./messages\");\nconst linkedMap_1 = require(\"./linkedMap\");\nconst events_1 = require(\"./events\");\nconst cancellation_1 = require(\"./cancellation\");\nvar CancelNotification;\n(function (CancelNotification) {\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\n})(CancelNotification || (CancelNotification = {}));\nvar ProgressToken;\n(function (ProgressToken) {\n    function is(value) {\n        return typeof value === 'string' || typeof value === 'number';\n    }\n    ProgressToken.is = is;\n})(ProgressToken || (exports.ProgressToken = ProgressToken = {}));\nvar ProgressNotification;\n(function (ProgressNotification) {\n    ProgressNotification.type = new messages_1.NotificationType('$/progress');\n})(ProgressNotification || (ProgressNotification = {}));\nclass ProgressType {\n    constructor() {\n    }\n}\nexports.ProgressType = ProgressType;\nvar StarRequestHandler;\n(function (StarRequestHandler) {\n    function is(value) {\n        return Is.func(value);\n    }\n    StarRequestHandler.is = is;\n})(StarRequestHandler || (StarRequestHandler = {}));\nexports.NullLogger = Object.freeze({\n    error: () => { },\n    warn: () => { },\n    info: () => { },\n    log: () => { }\n});\nvar Trace;\n(function (Trace) {\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\n    Trace[Trace[\"Compact\"] = 2] = \"Compact\";\n    Trace[Trace[\"Verbose\"] = 3] = \"Verbose\";\n})(Trace || (exports.Trace = Trace = {}));\nvar TraceValues;\n(function (TraceValues) {\n    /**\n     * Turn tracing off.\n     */\n    TraceValues.Off = 'off';\n    /**\n     * Trace messages only.\n     */\n    TraceValues.Messages = 'messages';\n    /**\n     * Compact message tracing.\n     */\n    TraceValues.Compact = 'compact';\n    /**\n     * Verbose message tracing.\n     */\n    TraceValues.Verbose = 'verbose';\n})(TraceValues || (exports.TraceValues = TraceValues = {}));\n(function (Trace) {\n    function fromString(value) {\n        if (!Is.string(value)) {\n            return Trace.Off;\n        }\n        value = value.toLowerCase();\n        switch (value) {\n            case 'off':\n                return Trace.Off;\n            case 'messages':\n                return Trace.Messages;\n            case 'compact':\n                return Trace.Compact;\n            case 'verbose':\n                return Trace.Verbose;\n            default:\n                return Trace.Off;\n        }\n    }\n    Trace.fromString = fromString;\n    function toString(value) {\n        switch (value) {\n            case Trace.Off:\n                return 'off';\n            case Trace.Messages:\n                return 'messages';\n            case Trace.Compact:\n                return 'compact';\n            case Trace.Verbose:\n                return 'verbose';\n            default:\n                return 'off';\n        }\n    }\n    Trace.toString = toString;\n})(Trace || (exports.Trace = Trace = {}));\nvar TraceFormat;\n(function (TraceFormat) {\n    TraceFormat[\"Text\"] = \"text\";\n    TraceFormat[\"JSON\"] = \"json\";\n})(TraceFormat || (exports.TraceFormat = TraceFormat = {}));\n(function (TraceFormat) {\n    function fromString(value) {\n        if (!Is.string(value)) {\n            return TraceFormat.Text;\n        }\n        value = value.toLowerCase();\n        if (value === 'json') {\n            return TraceFormat.JSON;\n        }\n        else {\n            return TraceFormat.Text;\n        }\n    }\n    TraceFormat.fromString = fromString;\n})(TraceFormat || (exports.TraceFormat = TraceFormat = {}));\nvar SetTraceNotification;\n(function (SetTraceNotification) {\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTrace');\n})(SetTraceNotification || (exports.SetTraceNotification = SetTraceNotification = {}));\nvar LogTraceNotification;\n(function (LogTraceNotification) {\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTrace');\n})(LogTraceNotification || (exports.LogTraceNotification = LogTraceNotification = {}));\nvar ConnectionErrors;\n(function (ConnectionErrors) {\n    /**\n     * The connection is closed.\n     */\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\n    /**\n     * The connection got disposed.\n     */\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\n    /**\n     * The connection is already in listening mode.\n     */\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\n})(ConnectionErrors || (exports.ConnectionErrors = ConnectionErrors = {}));\nclass ConnectionError extends Error {\n    constructor(code, message) {\n        super(message);\n        this.code = code;\n        Object.setPrototypeOf(this, ConnectionError.prototype);\n    }\n}\nexports.ConnectionError = ConnectionError;\nvar ConnectionStrategy;\n(function (ConnectionStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.cancelUndispatched);\n    }\n    ConnectionStrategy.is = is;\n})(ConnectionStrategy || (exports.ConnectionStrategy = ConnectionStrategy = {}));\nvar IdCancellationReceiverStrategy;\n(function (IdCancellationReceiverStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate.kind === undefined || candidate.kind === 'id') && Is.func(candidate.createCancellationTokenSource) && (candidate.dispose === undefined || Is.func(candidate.dispose));\n    }\n    IdCancellationReceiverStrategy.is = is;\n})(IdCancellationReceiverStrategy || (exports.IdCancellationReceiverStrategy = IdCancellationReceiverStrategy = {}));\nvar RequestCancellationReceiverStrategy;\n(function (RequestCancellationReceiverStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && candidate.kind === 'request' && Is.func(candidate.createCancellationTokenSource) && (candidate.dispose === undefined || Is.func(candidate.dispose));\n    }\n    RequestCancellationReceiverStrategy.is = is;\n})(RequestCancellationReceiverStrategy || (exports.RequestCancellationReceiverStrategy = RequestCancellationReceiverStrategy = {}));\nvar CancellationReceiverStrategy;\n(function (CancellationReceiverStrategy) {\n    CancellationReceiverStrategy.Message = Object.freeze({\n        createCancellationTokenSource(_) {\n            return new cancellation_1.CancellationTokenSource();\n        }\n    });\n    function is(value) {\n        return IdCancellationReceiverStrategy.is(value) || RequestCancellationReceiverStrategy.is(value);\n    }\n    CancellationReceiverStrategy.is = is;\n})(CancellationReceiverStrategy || (exports.CancellationReceiverStrategy = CancellationReceiverStrategy = {}));\nvar CancellationSenderStrategy;\n(function (CancellationSenderStrategy) {\n    CancellationSenderStrategy.Message = Object.freeze({\n        sendCancellation(conn, id) {\n            return conn.sendNotification(CancelNotification.type, { id });\n        },\n        cleanup(_) { }\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.sendCancellation) && Is.func(candidate.cleanup);\n    }\n    CancellationSenderStrategy.is = is;\n})(CancellationSenderStrategy || (exports.CancellationSenderStrategy = CancellationSenderStrategy = {}));\nvar CancellationStrategy;\n(function (CancellationStrategy) {\n    CancellationStrategy.Message = Object.freeze({\n        receiver: CancellationReceiverStrategy.Message,\n        sender: CancellationSenderStrategy.Message\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && CancellationReceiverStrategy.is(candidate.receiver) && CancellationSenderStrategy.is(candidate.sender);\n    }\n    CancellationStrategy.is = is;\n})(CancellationStrategy || (exports.CancellationStrategy = CancellationStrategy = {}));\nvar MessageStrategy;\n(function (MessageStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.handleMessage);\n    }\n    MessageStrategy.is = is;\n})(MessageStrategy || (exports.MessageStrategy = MessageStrategy = {}));\nvar ConnectionOptions;\n(function (ConnectionOptions) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (CancellationStrategy.is(candidate.cancellationStrategy) || ConnectionStrategy.is(candidate.connectionStrategy) || MessageStrategy.is(candidate.messageStrategy));\n    }\n    ConnectionOptions.is = is;\n})(ConnectionOptions || (exports.ConnectionOptions = ConnectionOptions = {}));\nvar ConnectionState;\n(function (ConnectionState) {\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\n})(ConnectionState || (ConnectionState = {}));\nfunction createMessageConnection(messageReader, messageWriter, _logger, options) {\n    const logger = _logger !== undefined ? _logger : exports.NullLogger;\n    let sequenceNumber = 0;\n    let notificationSequenceNumber = 0;\n    let unknownResponseSequenceNumber = 0;\n    const version = '2.0';\n    let starRequestHandler = undefined;\n    const requestHandlers = new Map();\n    let starNotificationHandler = undefined;\n    const notificationHandlers = new Map();\n    const progressHandlers = new Map();\n    let timer;\n    let messageQueue = new linkedMap_1.LinkedMap();\n    let responsePromises = new Map();\n    let knownCanceledRequests = new Set();\n    let requestTokens = new Map();\n    let trace = Trace.Off;\n    let traceFormat = TraceFormat.Text;\n    let tracer;\n    let state = ConnectionState.New;\n    const errorEmitter = new events_1.Emitter();\n    const closeEmitter = new events_1.Emitter();\n    const unhandledNotificationEmitter = new events_1.Emitter();\n    const unhandledProgressEmitter = new events_1.Emitter();\n    const disposeEmitter = new events_1.Emitter();\n    const cancellationStrategy = (options && options.cancellationStrategy) ? options.cancellationStrategy : CancellationStrategy.Message;\n    function createRequestQueueKey(id) {\n        if (id === null) {\n            throw new Error(`Can't send requests with id null since the response can't be correlated.`);\n        }\n        return 'req-' + id.toString();\n    }\n    function createResponseQueueKey(id) {\n        if (id === null) {\n            return 'res-unknown-' + (++unknownResponseSequenceNumber).toString();\n        }\n        else {\n            return 'res-' + id.toString();\n        }\n    }\n    function createNotificationQueueKey() {\n        return 'not-' + (++notificationSequenceNumber).toString();\n    }\n    function addMessageToQueue(queue, message) {\n        if (messages_1.Message.isRequest(message)) {\n            queue.set(createRequestQueueKey(message.id), message);\n        }\n        else if (messages_1.Message.isResponse(message)) {\n            queue.set(createResponseQueueKey(message.id), message);\n        }\n        else {\n            queue.set(createNotificationQueueKey(), message);\n        }\n    }\n    function cancelUndispatched(_message) {\n        return undefined;\n    }\n    function isListening() {\n        return state === ConnectionState.Listening;\n    }\n    function isClosed() {\n        return state === ConnectionState.Closed;\n    }\n    function isDisposed() {\n        return state === ConnectionState.Disposed;\n    }\n    function closeHandler() {\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\n            state = ConnectionState.Closed;\n            closeEmitter.fire(undefined);\n        }\n        // If the connection is disposed don't sent close events.\n    }\n    function readErrorHandler(error) {\n        errorEmitter.fire([error, undefined, undefined]);\n    }\n    function writeErrorHandler(data) {\n        errorEmitter.fire(data);\n    }\n    messageReader.onClose(closeHandler);\n    messageReader.onError(readErrorHandler);\n    messageWriter.onClose(closeHandler);\n    messageWriter.onError(writeErrorHandler);\n    function triggerMessageQueue() {\n        if (timer || messageQueue.size === 0) {\n            return;\n        }\n        timer = (0, ral_1.default)().timer.setImmediate(() => {\n            timer = undefined;\n            processMessageQueue();\n        });\n    }\n    function handleMessage(message) {\n        if (messages_1.Message.isRequest(message)) {\n            handleRequest(message);\n        }\n        else if (messages_1.Message.isNotification(message)) {\n            handleNotification(message);\n        }\n        else if (messages_1.Message.isResponse(message)) {\n            handleResponse(message);\n        }\n        else {\n            handleInvalidMessage(message);\n        }\n    }\n    function processMessageQueue() {\n        if (messageQueue.size === 0) {\n            return;\n        }\n        const message = messageQueue.shift();\n        try {\n            const messageStrategy = options?.messageStrategy;\n            if (MessageStrategy.is(messageStrategy)) {\n                messageStrategy.handleMessage(message, handleMessage);\n            }\n            else {\n                handleMessage(message);\n            }\n        }\n        finally {\n            triggerMessageQueue();\n        }\n    }\n    const callback = (message) => {\n        try {\n            // We have received a cancellation message. Check if the message is still in the queue\n            // and cancel it if allowed to do so.\n            if (messages_1.Message.isNotification(message) && message.method === CancelNotification.type.method) {\n                const cancelId = message.params.id;\n                const key = createRequestQueueKey(cancelId);\n                const toCancel = messageQueue.get(key);\n                if (messages_1.Message.isRequest(toCancel)) {\n                    const strategy = options?.connectionStrategy;\n                    const response = (strategy && strategy.cancelUndispatched) ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\n                    if (response && (response.error !== undefined || response.result !== undefined)) {\n                        messageQueue.delete(key);\n                        requestTokens.delete(cancelId);\n                        response.id = toCancel.id;\n                        traceSendingResponse(response, message.method, Date.now());\n                        messageWriter.write(response).catch(() => logger.error(`Sending response for canceled message failed.`));\n                        return;\n                    }\n                }\n                const cancellationToken = requestTokens.get(cancelId);\n                // The request is already running. Cancel the token\n                if (cancellationToken !== undefined) {\n                    cancellationToken.cancel();\n                    traceReceivedNotification(message);\n                    return;\n                }\n                else {\n                    // Remember the cancel but still queue the message to\n                    // clean up state in process message.\n                    knownCanceledRequests.add(cancelId);\n                }\n            }\n            addMessageToQueue(messageQueue, message);\n        }\n        finally {\n            triggerMessageQueue();\n        }\n    };\n    function handleRequest(requestMessage) {\n        if (isDisposed()) {\n            // we return here silently since we fired an event when the\n            // connection got disposed.\n            return;\n        }\n        function reply(resultOrError, method, startTime) {\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id\n            };\n            if (resultOrError instanceof messages_1.ResponseError) {\n                message.error = resultOrError.toJson();\n            }\n            else {\n                message.result = resultOrError === undefined ? null : resultOrError;\n            }\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));\n        }\n        function replyError(error, method, startTime) {\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id,\n                error: error.toJson()\n            };\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));\n        }\n        function replySuccess(result, method, startTime) {\n            // The JSON RPC defines that a response must either have a result or an error\n            // So we can't treat undefined as a valid response result.\n            if (result === undefined) {\n                result = null;\n            }\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id,\n                result: result\n            };\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));\n        }\n        traceReceivedRequest(requestMessage);\n        const element = requestHandlers.get(requestMessage.method);\n        let type;\n        let requestHandler;\n        if (element) {\n            type = element.type;\n            requestHandler = element.handler;\n        }\n        const startTime = Date.now();\n        if (requestHandler || starRequestHandler) {\n            const tokenKey = requestMessage.id ?? String(Date.now()); //\n            const cancellationSource = IdCancellationReceiverStrategy.is(cancellationStrategy.receiver)\n                ? cancellationStrategy.receiver.createCancellationTokenSource(tokenKey)\n                : cancellationStrategy.receiver.createCancellationTokenSource(requestMessage);\n            if (requestMessage.id !== null && knownCanceledRequests.has(requestMessage.id)) {\n                cancellationSource.cancel();\n            }\n            if (requestMessage.id !== null) {\n                requestTokens.set(tokenKey, cancellationSource);\n            }\n            try {\n                let handlerResult;\n                if (requestHandler) {\n                    if (requestMessage.params === undefined) {\n                        if (type !== undefined && type.numberOfParams !== 0) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines ${type.numberOfParams} params but received none.`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(cancellationSource.token);\n                    }\n                    else if (Array.isArray(requestMessage.params)) {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byName) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by name but received parameters by position`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(...requestMessage.params, cancellationSource.token);\n                    }\n                    else {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by position but received parameters by name`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(requestMessage.params, cancellationSource.token);\n                    }\n                }\n                else if (starRequestHandler) {\n                    handlerResult = starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\n                }\n                const promise = handlerResult;\n                if (!handlerResult) {\n                    requestTokens.delete(tokenKey);\n                    replySuccess(handlerResult, requestMessage.method, startTime);\n                }\n                else if (promise.then) {\n                    promise.then((resultOrError) => {\n                        requestTokens.delete(tokenKey);\n                        reply(resultOrError, requestMessage.method, startTime);\n                    }, error => {\n                        requestTokens.delete(tokenKey);\n                        if (error instanceof messages_1.ResponseError) {\n                            replyError(error, requestMessage.method, startTime);\n                        }\n                        else if (error && Is.string(error.message)) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\n                        }\n                        else {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\n                        }\n                    });\n                }\n                else {\n                    requestTokens.delete(tokenKey);\n                    reply(handlerResult, requestMessage.method, startTime);\n                }\n            }\n            catch (error) {\n                requestTokens.delete(tokenKey);\n                if (error instanceof messages_1.ResponseError) {\n                    reply(error, requestMessage.method, startTime);\n                }\n                else if (error && Is.string(error.message)) {\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\n                }\n                else {\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\n                }\n            }\n        }\n        else {\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\n        }\n    }\n    function handleResponse(responseMessage) {\n        if (isDisposed()) {\n            // See handle request.\n            return;\n        }\n        if (responseMessage.id === null) {\n            if (responseMessage.error) {\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\n            }\n            else {\n                logger.error(`Received response message without id. No further error information provided.`);\n            }\n        }\n        else {\n            const key = responseMessage.id;\n            const responsePromise = responsePromises.get(key);\n            traceReceivedResponse(responseMessage, responsePromise);\n            if (responsePromise !== undefined) {\n                responsePromises.delete(key);\n                try {\n                    if (responseMessage.error) {\n                        const error = responseMessage.error;\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\n                    }\n                    else if (responseMessage.result !== undefined) {\n                        responsePromise.resolve(responseMessage.result);\n                    }\n                    else {\n                        throw new Error('Should never happen.');\n                    }\n                }\n                catch (error) {\n                    if (error.message) {\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\n                    }\n                    else {\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\n                    }\n                }\n            }\n        }\n    }\n    function handleNotification(message) {\n        if (isDisposed()) {\n            // See handle request.\n            return;\n        }\n        let type = undefined;\n        let notificationHandler;\n        if (message.method === CancelNotification.type.method) {\n            const cancelId = message.params.id;\n            knownCanceledRequests.delete(cancelId);\n            traceReceivedNotification(message);\n            return;\n        }\n        else {\n            const element = notificationHandlers.get(message.method);\n            if (element) {\n                notificationHandler = element.handler;\n                type = element.type;\n            }\n        }\n        if (notificationHandler || starNotificationHandler) {\n            try {\n                traceReceivedNotification(message);\n                if (notificationHandler) {\n                    if (message.params === undefined) {\n                        if (type !== undefined) {\n                            if (type.numberOfParams !== 0 && type.parameterStructures !== messages_1.ParameterStructures.byName) {\n                                logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received none.`);\n                            }\n                        }\n                        notificationHandler();\n                    }\n                    else if (Array.isArray(message.params)) {\n                        // There are JSON-RPC libraries that send progress message as positional params although\n                        // specified as named. So convert them if this is the case.\n                        const params = message.params;\n                        if (message.method === ProgressNotification.type.method && params.length === 2 && ProgressToken.is(params[0])) {\n                            notificationHandler({ token: params[0], value: params[1] });\n                        }\n                        else {\n                            if (type !== undefined) {\n                                if (type.parameterStructures === messages_1.ParameterStructures.byName) {\n                                    logger.error(`Notification ${message.method} defines parameters by name but received parameters by position`);\n                                }\n                                if (type.numberOfParams !== message.params.length) {\n                                    logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received ${params.length} arguments`);\n                                }\n                            }\n                            notificationHandler(...params);\n                        }\n                    }\n                    else {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {\n                            logger.error(`Notification ${message.method} defines parameters by position but received parameters by name`);\n                        }\n                        notificationHandler(message.params);\n                    }\n                }\n                else if (starNotificationHandler) {\n                    starNotificationHandler(message.method, message.params);\n                }\n            }\n            catch (error) {\n                if (error.message) {\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\n                }\n                else {\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\n                }\n            }\n        }\n        else {\n            unhandledNotificationEmitter.fire(message);\n        }\n    }\n    function handleInvalidMessage(message) {\n        if (!message) {\n            logger.error('Received empty message.');\n            return;\n        }\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\n        // Test whether we find an id to reject the promise\n        const responseMessage = message;\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\n            const key = responseMessage.id;\n            const responseHandler = responsePromises.get(key);\n            if (responseHandler) {\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\n            }\n        }\n    }\n    function stringifyTrace(params) {\n        if (params === undefined || params === null) {\n            return undefined;\n        }\n        switch (trace) {\n            case Trace.Verbose:\n                return JSON.stringify(params, null, 4);\n            case Trace.Compact:\n                return JSON.stringify(params);\n            default:\n                return undefined;\n        }\n    }\n    function traceSendingRequest(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if ((trace === Trace.Verbose || trace === Trace.Compact) && message.params) {\n                data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n            }\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\n        }\n        else {\n            logLSPMessage('send-request', message);\n        }\n    }\n    function traceSendingNotification(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.params) {\n                    data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n                }\n                else {\n                    data = 'No parameters provided.\\n\\n';\n                }\n            }\n            tracer.log(`Sending notification '${message.method}'.`, data);\n        }\n        else {\n            logLSPMessage('send-notification', message);\n        }\n    }\n    function traceSendingResponse(message, method, startTime) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.error && message.error.data) {\n                    data = `Error data: ${stringifyTrace(message.error.data)}\\n\\n`;\n                }\n                else {\n                    if (message.result) {\n                        data = `Result: ${stringifyTrace(message.result)}\\n\\n`;\n                    }\n                    else if (message.error === undefined) {\n                        data = 'No result returned.\\n\\n';\n                    }\n                }\n            }\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\n        }\n        else {\n            logLSPMessage('send-response', message);\n        }\n    }\n    function traceReceivedRequest(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if ((trace === Trace.Verbose || trace === Trace.Compact) && message.params) {\n                data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n            }\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\n        }\n        else {\n            logLSPMessage('receive-request', message);\n        }\n    }\n    function traceReceivedNotification(message) {\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.params) {\n                    data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n                }\n                else {\n                    data = 'No parameters provided.\\n\\n';\n                }\n            }\n            tracer.log(`Received notification '${message.method}'.`, data);\n        }\n        else {\n            logLSPMessage('receive-notification', message);\n        }\n    }\n    function traceReceivedResponse(message, responsePromise) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.error && message.error.data) {\n                    data = `Error data: ${stringifyTrace(message.error.data)}\\n\\n`;\n                }\n                else {\n                    if (message.result) {\n                        data = `Result: ${stringifyTrace(message.result)}\\n\\n`;\n                    }\n                    else if (message.error === undefined) {\n                        data = 'No result returned.\\n\\n';\n                    }\n                }\n            }\n            if (responsePromise) {\n                const error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\n            }\n            else {\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\n            }\n        }\n        else {\n            logLSPMessage('receive-response', message);\n        }\n    }\n    function logLSPMessage(type, message) {\n        if (!tracer || trace === Trace.Off) {\n            return;\n        }\n        const lspMessage = {\n            isLSPMessage: true,\n            type,\n            message,\n            timestamp: Date.now()\n        };\n        tracer.log(lspMessage);\n    }\n    function throwIfClosedOrDisposed() {\n        if (isClosed()) {\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\n        }\n        if (isDisposed()) {\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\n        }\n    }\n    function throwIfListening() {\n        if (isListening()) {\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\n        }\n    }\n    function throwIfNotListening() {\n        if (!isListening()) {\n            throw new Error('Call listen() first.');\n        }\n    }\n    function undefinedToNull(param) {\n        if (param === undefined) {\n            return null;\n        }\n        else {\n            return param;\n        }\n    }\n    function nullToUndefined(param) {\n        if (param === null) {\n            return undefined;\n        }\n        else {\n            return param;\n        }\n    }\n    function isNamedParam(param) {\n        return param !== undefined && param !== null && !Array.isArray(param) && typeof param === 'object';\n    }\n    function computeSingleParam(parameterStructures, param) {\n        switch (parameterStructures) {\n            case messages_1.ParameterStructures.auto:\n                if (isNamedParam(param)) {\n                    return nullToUndefined(param);\n                }\n                else {\n                    return [undefinedToNull(param)];\n                }\n            case messages_1.ParameterStructures.byName:\n                if (!isNamedParam(param)) {\n                    throw new Error(`Received parameters by name but param is not an object literal.`);\n                }\n                return nullToUndefined(param);\n            case messages_1.ParameterStructures.byPosition:\n                return [undefinedToNull(param)];\n            default:\n                throw new Error(`Unknown parameter structure ${parameterStructures.toString()}`);\n        }\n    }\n    function computeMessageParams(type, params) {\n        let result;\n        const numberOfParams = type.numberOfParams;\n        switch (numberOfParams) {\n            case 0:\n                result = undefined;\n                break;\n            case 1:\n                result = computeSingleParam(type.parameterStructures, params[0]);\n                break;\n            default:\n                result = [];\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\n                    result.push(undefinedToNull(params[i]));\n                }\n                if (params.length < numberOfParams) {\n                    for (let i = params.length; i < numberOfParams; i++) {\n                        result.push(null);\n                    }\n                }\n                break;\n        }\n        return result;\n    }\n    const connection = {\n        sendNotification: (type, ...args) => {\n            throwIfClosedOrDisposed();\n            let method;\n            let messageParams;\n            if (Is.string(type)) {\n                method = type;\n                const first = args[0];\n                let paramStart = 0;\n                let parameterStructures = messages_1.ParameterStructures.auto;\n                if (messages_1.ParameterStructures.is(first)) {\n                    paramStart = 1;\n                    parameterStructures = first;\n                }\n                let paramEnd = args.length;\n                const numberOfParams = paramEnd - paramStart;\n                switch (numberOfParams) {\n                    case 0:\n                        messageParams = undefined;\n                        break;\n                    case 1:\n                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);\n                        break;\n                    default:\n                        if (parameterStructures === messages_1.ParameterStructures.byName) {\n                            throw new Error(`Received ${numberOfParams} parameters for 'by Name' notification parameter structure.`);\n                        }\n                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));\n                        break;\n                }\n            }\n            else {\n                const params = args;\n                method = type.method;\n                messageParams = computeMessageParams(type, params);\n            }\n            const notificationMessage = {\n                jsonrpc: version,\n                method: method,\n                params: messageParams\n            };\n            traceSendingNotification(notificationMessage);\n            return messageWriter.write(notificationMessage).catch((error) => {\n                logger.error(`Sending notification failed.`);\n                throw error;\n            });\n        },\n        onNotification: (type, handler) => {\n            throwIfClosedOrDisposed();\n            let method;\n            if (Is.func(type)) {\n                starNotificationHandler = type;\n            }\n            else if (handler) {\n                if (Is.string(type)) {\n                    method = type;\n                    notificationHandlers.set(type, { type: undefined, handler });\n                }\n                else {\n                    method = type.method;\n                    notificationHandlers.set(type.method, { type, handler });\n                }\n            }\n            return {\n                dispose: () => {\n                    if (method !== undefined) {\n                        notificationHandlers.delete(method);\n                    }\n                    else {\n                        starNotificationHandler = undefined;\n                    }\n                }\n            };\n        },\n        onProgress: (_type, token, handler) => {\n            if (progressHandlers.has(token)) {\n                throw new Error(`Progress handler for token ${token} already registered`);\n            }\n            progressHandlers.set(token, handler);\n            return {\n                dispose: () => {\n                    progressHandlers.delete(token);\n                }\n            };\n        },\n        sendProgress: (_type, token, value) => {\n            // This should not await but simple return to ensure that we don't have another\n            // async scheduling. Otherwise one send could overtake another send.\n            return connection.sendNotification(ProgressNotification.type, { token, value });\n        },\n        onUnhandledProgress: unhandledProgressEmitter.event,\n        sendRequest: (type, ...args) => {\n            throwIfClosedOrDisposed();\n            throwIfNotListening();\n            let method;\n            let messageParams;\n            let token = undefined;\n            if (Is.string(type)) {\n                method = type;\n                const first = args[0];\n                const last = args[args.length - 1];\n                let paramStart = 0;\n                let parameterStructures = messages_1.ParameterStructures.auto;\n                if (messages_1.ParameterStructures.is(first)) {\n                    paramStart = 1;\n                    parameterStructures = first;\n                }\n                let paramEnd = args.length;\n                if (cancellation_1.CancellationToken.is(last)) {\n                    paramEnd = paramEnd - 1;\n                    token = last;\n                }\n                const numberOfParams = paramEnd - paramStart;\n                switch (numberOfParams) {\n                    case 0:\n                        messageParams = undefined;\n                        break;\n                    case 1:\n                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);\n                        break;\n                    default:\n                        if (parameterStructures === messages_1.ParameterStructures.byName) {\n                            throw new Error(`Received ${numberOfParams} parameters for 'by Name' request parameter structure.`);\n                        }\n                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));\n                        break;\n                }\n            }\n            else {\n                const params = args;\n                method = type.method;\n                messageParams = computeMessageParams(type, params);\n                const numberOfParams = type.numberOfParams;\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\n            }\n            const id = sequenceNumber++;\n            let disposable;\n            if (token) {\n                disposable = token.onCancellationRequested(() => {\n                    const p = cancellationStrategy.sender.sendCancellation(connection, id);\n                    if (p === undefined) {\n                        logger.log(`Received no promise from cancellation strategy when cancelling id ${id}`);\n                        return Promise.resolve();\n                    }\n                    else {\n                        return p.catch(() => {\n                            logger.log(`Sending cancellation messages for id ${id} failed`);\n                        });\n                    }\n                });\n            }\n            const requestMessage = {\n                jsonrpc: version,\n                id: id,\n                method: method,\n                params: messageParams\n            };\n            traceSendingRequest(requestMessage);\n            if (typeof cancellationStrategy.sender.enableCancellation === 'function') {\n                cancellationStrategy.sender.enableCancellation(requestMessage);\n            }\n            return new Promise(async (resolve, reject) => {\n                const resolveWithCleanup = (r) => {\n                    resolve(r);\n                    cancellationStrategy.sender.cleanup(id);\n                    disposable?.dispose();\n                };\n                const rejectWithCleanup = (r) => {\n                    reject(r);\n                    cancellationStrategy.sender.cleanup(id);\n                    disposable?.dispose();\n                };\n                const responsePromise = { method: method, timerStart: Date.now(), resolve: resolveWithCleanup, reject: rejectWithCleanup };\n                try {\n                    await messageWriter.write(requestMessage);\n                    responsePromises.set(id, responsePromise);\n                }\n                catch (error) {\n                    logger.error(`Sending request failed.`);\n                    // Writing the message failed. So we need to reject the promise.\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, error.message ? error.message : 'Unknown reason'));\n                    throw error;\n                }\n            });\n        },\n        onRequest: (type, handler) => {\n            throwIfClosedOrDisposed();\n            let method = null;\n            if (StarRequestHandler.is(type)) {\n                method = undefined;\n                starRequestHandler = type;\n            }\n            else if (Is.string(type)) {\n                method = null;\n                if (handler !== undefined) {\n                    method = type;\n                    requestHandlers.set(type, { handler: handler, type: undefined });\n                }\n            }\n            else {\n                if (handler !== undefined) {\n                    method = type.method;\n                    requestHandlers.set(type.method, { type, handler });\n                }\n            }\n            return {\n                dispose: () => {\n                    if (method === null) {\n                        return;\n                    }\n                    if (method !== undefined) {\n                        requestHandlers.delete(method);\n                    }\n                    else {\n                        starRequestHandler = undefined;\n                    }\n                }\n            };\n        },\n        hasPendingResponse: () => {\n            return responsePromises.size > 0;\n        },\n        trace: async (_value, _tracer, sendNotificationOrTraceOptions) => {\n            let _sendNotification = false;\n            let _traceFormat = TraceFormat.Text;\n            if (sendNotificationOrTraceOptions !== undefined) {\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\n                    _sendNotification = sendNotificationOrTraceOptions;\n                }\n                else {\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\n                }\n            }\n            trace = _value;\n            traceFormat = _traceFormat;\n            if (trace === Trace.Off) {\n                tracer = undefined;\n            }\n            else {\n                tracer = _tracer;\n            }\n            if (_sendNotification && !isClosed() && !isDisposed()) {\n                await connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\n            }\n        },\n        onError: errorEmitter.event,\n        onClose: closeEmitter.event,\n        onUnhandledNotification: unhandledNotificationEmitter.event,\n        onDispose: disposeEmitter.event,\n        end: () => {\n            messageWriter.end();\n        },\n        dispose: () => {\n            if (isDisposed()) {\n                return;\n            }\n            state = ConnectionState.Disposed;\n            disposeEmitter.fire(undefined);\n            const error = new messages_1.ResponseError(messages_1.ErrorCodes.PendingResponseRejected, 'Pending response rejected since connection got disposed');\n            for (const promise of responsePromises.values()) {\n                promise.reject(error);\n            }\n            responsePromises = new Map();\n            requestTokens = new Map();\n            knownCanceledRequests = new Set();\n            messageQueue = new linkedMap_1.LinkedMap();\n            // Test for backwards compatibility\n            if (Is.func(messageWriter.dispose)) {\n                messageWriter.dispose();\n            }\n            if (Is.func(messageReader.dispose)) {\n                messageReader.dispose();\n            }\n        },\n        listen: () => {\n            throwIfClosedOrDisposed();\n            throwIfListening();\n            state = ConnectionState.Listening;\n            messageReader.listen(callback);\n        },\n        inspect: () => {\n            // eslint-disable-next-line no-console\n            (0, ral_1.default)().console.log('inspect');\n        }\n    };\n    connection.onNotification(LogTraceNotification.type, (params) => {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        const verbose = trace === Trace.Verbose || trace === Trace.Compact;\n        tracer.log(params.message, verbose ? params.verbose : undefined);\n    });\n    connection.onNotification(ProgressNotification.type, (params) => {\n        const handler = progressHandlers.get(params.token);\n        if (handler) {\n            handler(params.value);\n        }\n        else {\n            unhandledProgressEmitter.fire(params);\n        }\n    });\n    return connection;\n}\nexports.createMessageConnection = createMessageConnection;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n/// <reference path=\"../../typings/thenable.d.ts\" />\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProgressType = exports.ProgressToken = exports.createMessageConnection = exports.NullLogger = exports.ConnectionOptions = exports.ConnectionStrategy = exports.AbstractMessageBuffer = exports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = exports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = exports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = exports.CancellationToken = exports.CancellationTokenSource = exports.Emitter = exports.Event = exports.Disposable = exports.LRUCache = exports.Touch = exports.LinkedMap = exports.ParameterStructures = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.ErrorCodes = exports.ResponseError = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType0 = exports.RequestType = exports.Message = exports.RAL = void 0;\nexports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.Trace = void 0;\nconst messages_1 = require(\"./messages\");\nObject.defineProperty(exports, \"Message\", { enumerable: true, get: function () { return messages_1.Message; } });\nObject.defineProperty(exports, \"RequestType\", { enumerable: true, get: function () { return messages_1.RequestType; } });\nObject.defineProperty(exports, \"RequestType0\", { enumerable: true, get: function () { return messages_1.RequestType0; } });\nObject.defineProperty(exports, \"RequestType1\", { enumerable: true, get: function () { return messages_1.RequestType1; } });\nObject.defineProperty(exports, \"RequestType2\", { enumerable: true, get: function () { return messages_1.RequestType2; } });\nObject.defineProperty(exports, \"RequestType3\", { enumerable: true, get: function () { return messages_1.RequestType3; } });\nObject.defineProperty(exports, \"RequestType4\", { enumerable: true, get: function () { return messages_1.RequestType4; } });\nObject.defineProperty(exports, \"RequestType5\", { enumerable: true, get: function () { return messages_1.RequestType5; } });\nObject.defineProperty(exports, \"RequestType6\", { enumerable: true, get: function () { return messages_1.RequestType6; } });\nObject.defineProperty(exports, \"RequestType7\", { enumerable: true, get: function () { return messages_1.RequestType7; } });\nObject.defineProperty(exports, \"RequestType8\", { enumerable: true, get: function () { return messages_1.RequestType8; } });\nObject.defineProperty(exports, \"RequestType9\", { enumerable: true, get: function () { return messages_1.RequestType9; } });\nObject.defineProperty(exports, \"ResponseError\", { enumerable: true, get: function () { return messages_1.ResponseError; } });\nObject.defineProperty(exports, \"ErrorCodes\", { enumerable: true, get: function () { return messages_1.ErrorCodes; } });\nObject.defineProperty(exports, \"NotificationType\", { enumerable: true, get: function () { return messages_1.NotificationType; } });\nObject.defineProperty(exports, \"NotificationType0\", { enumerable: true, get: function () { return messages_1.NotificationType0; } });\nObject.defineProperty(exports, \"NotificationType1\", { enumerable: true, get: function () { return messages_1.NotificationType1; } });\nObject.defineProperty(exports, \"NotificationType2\", { enumerable: true, get: function () { return messages_1.NotificationType2; } });\nObject.defineProperty(exports, \"NotificationType3\", { enumerable: true, get: function () { return messages_1.NotificationType3; } });\nObject.defineProperty(exports, \"NotificationType4\", { enumerable: true, get: function () { return messages_1.NotificationType4; } });\nObject.defineProperty(exports, \"NotificationType5\", { enumerable: true, get: function () { return messages_1.NotificationType5; } });\nObject.defineProperty(exports, \"NotificationType6\", { enumerable: true, get: function () { return messages_1.NotificationType6; } });\nObject.defineProperty(exports, \"NotificationType7\", { enumerable: true, get: function () { return messages_1.NotificationType7; } });\nObject.defineProperty(exports, \"NotificationType8\", { enumerable: true, get: function () { return messages_1.NotificationType8; } });\nObject.defineProperty(exports, \"NotificationType9\", { enumerable: true, get: function () { return messages_1.NotificationType9; } });\nObject.defineProperty(exports, \"ParameterStructures\", { enumerable: true, get: function () { return messages_1.ParameterStructures; } });\nconst linkedMap_1 = require(\"./linkedMap\");\nObject.defineProperty(exports, \"LinkedMap\", { enumerable: true, get: function () { return linkedMap_1.LinkedMap; } });\nObject.defineProperty(exports, \"LRUCache\", { enumerable: true, get: function () { return linkedMap_1.LRUCache; } });\nObject.defineProperty(exports, \"Touch\", { enumerable: true, get: function () { return linkedMap_1.Touch; } });\nconst disposable_1 = require(\"./disposable\");\nObject.defineProperty(exports, \"Disposable\", { enumerable: true, get: function () { return disposable_1.Disposable; } });\nconst events_1 = require(\"./events\");\nObject.defineProperty(exports, \"Event\", { enumerable: true, get: function () { return events_1.Event; } });\nObject.defineProperty(exports, \"Emitter\", { enumerable: true, get: function () { return events_1.Emitter; } });\nconst cancellation_1 = require(\"./cancellation\");\nObject.defineProperty(exports, \"CancellationTokenSource\", { enumerable: true, get: function () { return cancellation_1.CancellationTokenSource; } });\nObject.defineProperty(exports, \"CancellationToken\", { enumerable: true, get: function () { return cancellation_1.CancellationToken; } });\nconst sharedArrayCancellation_1 = require(\"./sharedArrayCancellation\");\nObject.defineProperty(exports, \"SharedArraySenderStrategy\", { enumerable: true, get: function () { return sharedArrayCancellation_1.SharedArraySenderStrategy; } });\nObject.defineProperty(exports, \"SharedArrayReceiverStrategy\", { enumerable: true, get: function () { return sharedArrayCancellation_1.SharedArrayReceiverStrategy; } });\nconst messageReader_1 = require(\"./messageReader\");\nObject.defineProperty(exports, \"MessageReader\", { enumerable: true, get: function () { return messageReader_1.MessageReader; } });\nObject.defineProperty(exports, \"AbstractMessageReader\", { enumerable: true, get: function () { return messageReader_1.AbstractMessageReader; } });\nObject.defineProperty(exports, \"ReadableStreamMessageReader\", { enumerable: true, get: function () { return messageReader_1.ReadableStreamMessageReader; } });\nconst messageWriter_1 = require(\"./messageWriter\");\nObject.defineProperty(exports, \"MessageWriter\", { enumerable: true, get: function () { return messageWriter_1.MessageWriter; } });\nObject.defineProperty(exports, \"AbstractMessageWriter\", { enumerable: true, get: function () { return messageWriter_1.AbstractMessageWriter; } });\nObject.defineProperty(exports, \"WriteableStreamMessageWriter\", { enumerable: true, get: function () { return messageWriter_1.WriteableStreamMessageWriter; } });\nconst messageBuffer_1 = require(\"./messageBuffer\");\nObject.defineProperty(exports, \"AbstractMessageBuffer\", { enumerable: true, get: function () { return messageBuffer_1.AbstractMessageBuffer; } });\nconst connection_1 = require(\"./connection\");\nObject.defineProperty(exports, \"ConnectionStrategy\", { enumerable: true, get: function () { return connection_1.ConnectionStrategy; } });\nObject.defineProperty(exports, \"ConnectionOptions\", { enumerable: true, get: function () { return connection_1.ConnectionOptions; } });\nObject.defineProperty(exports, \"NullLogger\", { enumerable: true, get: function () { return connection_1.NullLogger; } });\nObject.defineProperty(exports, \"createMessageConnection\", { enumerable: true, get: function () { return connection_1.createMessageConnection; } });\nObject.defineProperty(exports, \"ProgressToken\", { enumerable: true, get: function () { return connection_1.ProgressToken; } });\nObject.defineProperty(exports, \"ProgressType\", { enumerable: true, get: function () { return connection_1.ProgressType; } });\nObject.defineProperty(exports, \"Trace\", { enumerable: true, get: function () { return connection_1.Trace; } });\nObject.defineProperty(exports, \"TraceValues\", { enumerable: true, get: function () { return connection_1.TraceValues; } });\nObject.defineProperty(exports, \"TraceFormat\", { enumerable: true, get: function () { return connection_1.TraceFormat; } });\nObject.defineProperty(exports, \"SetTraceNotification\", { enumerable: true, get: function () { return connection_1.SetTraceNotification; } });\nObject.defineProperty(exports, \"LogTraceNotification\", { enumerable: true, get: function () { return connection_1.LogTraceNotification; } });\nObject.defineProperty(exports, \"ConnectionErrors\", { enumerable: true, get: function () { return connection_1.ConnectionErrors; } });\nObject.defineProperty(exports, \"ConnectionError\", { enumerable: true, get: function () { return connection_1.ConnectionError; } });\nObject.defineProperty(exports, \"CancellationReceiverStrategy\", { enumerable: true, get: function () { return connection_1.CancellationReceiverStrategy; } });\nObject.defineProperty(exports, \"CancellationSenderStrategy\", { enumerable: true, get: function () { return connection_1.CancellationSenderStrategy; } });\nObject.defineProperty(exports, \"CancellationStrategy\", { enumerable: true, get: function () { return connection_1.CancellationStrategy; } });\nObject.defineProperty(exports, \"MessageStrategy\", { enumerable: true, get: function () { return connection_1.MessageStrategy; } });\nconst ral_1 = require(\"./ral\");\nexports.RAL = ral_1.default;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"util\");\nconst api_1 = require(\"../common/api\");\nclass MessageBuffer extends api_1.AbstractMessageBuffer {\n    constructor(encoding = 'utf-8') {\n        super(encoding);\n    }\n    emptyBuffer() {\n        return MessageBuffer.emptyBuffer;\n    }\n    fromString(value, encoding) {\n        return Buffer.from(value, encoding);\n    }\n    toString(value, encoding) {\n        if (value instanceof Buffer) {\n            return value.toString(encoding);\n        }\n        else {\n            return new util_1.TextDecoder(encoding).decode(value);\n        }\n    }\n    asNative(buffer, length) {\n        if (length === undefined) {\n            return buffer instanceof Buffer ? buffer : Buffer.from(buffer);\n        }\n        else {\n            return buffer instanceof Buffer ? buffer.slice(0, length) : Buffer.from(buffer, 0, length);\n        }\n    }\n    allocNative(length) {\n        return Buffer.allocUnsafe(length);\n    }\n}\nMessageBuffer.emptyBuffer = Buffer.allocUnsafe(0);\nclass ReadableStreamWrapper {\n    constructor(stream) {\n        this.stream = stream;\n    }\n    onClose(listener) {\n        this.stream.on('close', listener);\n        return api_1.Disposable.create(() => this.stream.off('close', listener));\n    }\n    onError(listener) {\n        this.stream.on('error', listener);\n        return api_1.Disposable.create(() => this.stream.off('error', listener));\n    }\n    onEnd(listener) {\n        this.stream.on('end', listener);\n        return api_1.Disposable.create(() => this.stream.off('end', listener));\n    }\n    onData(listener) {\n        this.stream.on('data', listener);\n        return api_1.Disposable.create(() => this.stream.off('data', listener));\n    }\n}\nclass WritableStreamWrapper {\n    constructor(stream) {\n        this.stream = stream;\n    }\n    onClose(listener) {\n        this.stream.on('close', listener);\n        return api_1.Disposable.create(() => this.stream.off('close', listener));\n    }\n    onError(listener) {\n        this.stream.on('error', listener);\n        return api_1.Disposable.create(() => this.stream.off('error', listener));\n    }\n    onEnd(listener) {\n        this.stream.on('end', listener);\n        return api_1.Disposable.create(() => this.stream.off('end', listener));\n    }\n    write(data, encoding) {\n        return new Promise((resolve, reject) => {\n            const callback = (error) => {\n                if (error === undefined || error === null) {\n                    resolve();\n                }\n                else {\n                    reject(error);\n                }\n            };\n            if (typeof data === 'string') {\n                this.stream.write(data, encoding, callback);\n            }\n            else {\n                this.stream.write(data, callback);\n            }\n        });\n    }\n    end() {\n        this.stream.end();\n    }\n}\nconst _ril = Object.freeze({\n    messageBuffer: Object.freeze({\n        create: (encoding) => new MessageBuffer(encoding)\n    }),\n    applicationJson: Object.freeze({\n        encoder: Object.freeze({\n            name: 'application/json',\n            encode: (msg, options) => {\n                try {\n                    return Promise.resolve(Buffer.from(JSON.stringify(msg, undefined, 0), options.charset));\n                }\n                catch (err) {\n                    return Promise.reject(err);\n                }\n            }\n        }),\n        decoder: Object.freeze({\n            name: 'application/json',\n            decode: (buffer, options) => {\n                try {\n                    if (buffer instanceof Buffer) {\n                        return Promise.resolve(JSON.parse(buffer.toString(options.charset)));\n                    }\n                    else {\n                        return Promise.resolve(JSON.parse(new util_1.TextDecoder(options.charset).decode(buffer)));\n                    }\n                }\n                catch (err) {\n                    return Promise.reject(err);\n                }\n            }\n        })\n    }),\n    stream: Object.freeze({\n        asReadableStream: (stream) => new ReadableStreamWrapper(stream),\n        asWritableStream: (stream) => new WritableStreamWrapper(stream)\n    }),\n    console: console,\n    timer: Object.freeze({\n        setTimeout(callback, ms, ...args) {\n            const handle = setTimeout(callback, ms, ...args);\n            return { dispose: () => clearTimeout(handle) };\n        },\n        setImmediate(callback, ...args) {\n            const handle = setImmediate(callback, ...args);\n            return { dispose: () => clearImmediate(handle) };\n        },\n        setInterval(callback, ms, ...args) {\n            const handle = setInterval(callback, ms, ...args);\n            return { dispose: () => clearInterval(handle) };\n        }\n    })\n});\nfunction RIL() {\n    return _ril;\n}\n(function (RIL) {\n    function install() {\n        api_1.RAL.install(_ril);\n    }\n    RIL.install = install;\n})(RIL || (RIL = {}));\nexports.default = RIL;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMessageConnection = exports.createServerSocketTransport = exports.createClientSocketTransport = exports.createServerPipeTransport = exports.createClientPipeTransport = exports.generateRandomPipeName = exports.StreamMessageWriter = exports.StreamMessageReader = exports.SocketMessageWriter = exports.SocketMessageReader = exports.PortMessageWriter = exports.PortMessageReader = exports.IPCMessageWriter = exports.IPCMessageReader = void 0;\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\nconst ril_1 = require(\"./ril\");\n// Install the node runtime abstract.\nril_1.default.install();\nconst path = require(\"path\");\nconst os = require(\"os\");\nconst crypto_1 = require(\"crypto\");\nconst net_1 = require(\"net\");\nconst api_1 = require(\"../common/api\");\n__exportStar(require(\"../common/api\"), exports);\nclass IPCMessageReader extends api_1.AbstractMessageReader {\n    constructor(process) {\n        super();\n        this.process = process;\n        let eventEmitter = this.process;\n        eventEmitter.on('error', (error) => this.fireError(error));\n        eventEmitter.on('close', () => this.fireClose());\n    }\n    listen(callback) {\n        this.process.on('message', callback);\n        return api_1.Disposable.create(() => this.process.off('message', callback));\n    }\n}\nexports.IPCMessageReader = IPCMessageReader;\nclass IPCMessageWriter extends api_1.AbstractMessageWriter {\n    constructor(process) {\n        super();\n        this.process = process;\n        this.errorCount = 0;\n        const eventEmitter = this.process;\n        eventEmitter.on('error', (error) => this.fireError(error));\n        eventEmitter.on('close', () => this.fireClose);\n    }\n    write(msg) {\n        try {\n            if (typeof this.process.send === 'function') {\n                this.process.send(msg, undefined, undefined, (error) => {\n                    if (error) {\n                        this.errorCount++;\n                        this.handleError(error, msg);\n                    }\n                    else {\n                        this.errorCount = 0;\n                    }\n                });\n            }\n            return Promise.resolve();\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n    }\n}\nexports.IPCMessageWriter = IPCMessageWriter;\nclass PortMessageReader extends api_1.AbstractMessageReader {\n    constructor(port) {\n        super();\n        this.onData = new api_1.Emitter;\n        port.on('close', () => this.fireClose);\n        port.on('error', (error) => this.fireError(error));\n        port.on('message', (message) => {\n            this.onData.fire(message);\n        });\n    }\n    listen(callback) {\n        return this.onData.event(callback);\n    }\n}\nexports.PortMessageReader = PortMessageReader;\nclass PortMessageWriter extends api_1.AbstractMessageWriter {\n    constructor(port) {\n        super();\n        this.port = port;\n        this.errorCount = 0;\n        port.on('close', () => this.fireClose());\n        port.on('error', (error) => this.fireError(error));\n    }\n    write(msg) {\n        try {\n            this.port.postMessage(msg);\n            return Promise.resolve();\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n    }\n}\nexports.PortMessageWriter = PortMessageWriter;\nclass SocketMessageReader extends api_1.ReadableStreamMessageReader {\n    constructor(socket, encoding = 'utf-8') {\n        super((0, ril_1.default)().stream.asReadableStream(socket), encoding);\n    }\n}\nexports.SocketMessageReader = SocketMessageReader;\nclass SocketMessageWriter extends api_1.WriteableStreamMessageWriter {\n    constructor(socket, options) {\n        super((0, ril_1.default)().stream.asWritableStream(socket), options);\n        this.socket = socket;\n    }\n    dispose() {\n        super.dispose();\n        this.socket.destroy();\n    }\n}\nexports.SocketMessageWriter = SocketMessageWriter;\nclass StreamMessageReader extends api_1.ReadableStreamMessageReader {\n    constructor(readable, encoding) {\n        super((0, ril_1.default)().stream.asReadableStream(readable), encoding);\n    }\n}\nexports.StreamMessageReader = StreamMessageReader;\nclass StreamMessageWriter extends api_1.WriteableStreamMessageWriter {\n    constructor(writable, options) {\n        super((0, ril_1.default)().stream.asWritableStream(writable), options);\n    }\n}\nexports.StreamMessageWriter = StreamMessageWriter;\nconst XDG_RUNTIME_DIR = process.env['XDG_RUNTIME_DIR'];\nconst safeIpcPathLengths = new Map([\n    ['linux', 107],\n    ['darwin', 103]\n]);\nfunction generateRandomPipeName() {\n    const randomSuffix = (0, crypto_1.randomBytes)(21).toString('hex');\n    if (process.platform === 'win32') {\n        return `\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-${randomSuffix}-sock`;\n    }\n    let result;\n    if (XDG_RUNTIME_DIR) {\n        result = path.join(XDG_RUNTIME_DIR, `vscode-ipc-${randomSuffix}.sock`);\n    }\n    else {\n        result = path.join(os.tmpdir(), `vscode-${randomSuffix}.sock`);\n    }\n    const limit = safeIpcPathLengths.get(process.platform);\n    if (limit !== undefined && result.length > limit) {\n        (0, ril_1.default)().console.warn(`WARNING: IPC handle \"${result}\" is longer than ${limit} characters.`);\n    }\n    return result;\n}\nexports.generateRandomPipeName = generateRandomPipeName;\nfunction createClientPipeTransport(pipeName, encoding = 'utf-8') {\n    let connectResolve;\n    const connected = new Promise((resolve, _reject) => {\n        connectResolve = resolve;\n    });\n    return new Promise((resolve, reject) => {\n        let server = (0, net_1.createServer)((socket) => {\n            server.close();\n            connectResolve([\n                new SocketMessageReader(socket, encoding),\n                new SocketMessageWriter(socket, encoding)\n            ]);\n        });\n        server.on('error', reject);\n        server.listen(pipeName, () => {\n            server.removeListener('error', reject);\n            resolve({\n                onConnected: () => { return connected; }\n            });\n        });\n    });\n}\nexports.createClientPipeTransport = createClientPipeTransport;\nfunction createServerPipeTransport(pipeName, encoding = 'utf-8') {\n    const socket = (0, net_1.createConnection)(pipeName);\n    return [\n        new SocketMessageReader(socket, encoding),\n        new SocketMessageWriter(socket, encoding)\n    ];\n}\nexports.createServerPipeTransport = createServerPipeTransport;\nfunction createClientSocketTransport(port, encoding = 'utf-8') {\n    let connectResolve;\n    const connected = new Promise((resolve, _reject) => {\n        connectResolve = resolve;\n    });\n    return new Promise((resolve, reject) => {\n        const server = (0, net_1.createServer)((socket) => {\n            server.close();\n            connectResolve([\n                new SocketMessageReader(socket, encoding),\n                new SocketMessageWriter(socket, encoding)\n            ]);\n        });\n        server.on('error', reject);\n        server.listen(port, '127.0.0.1', () => {\n            server.removeListener('error', reject);\n            resolve({\n                onConnected: () => { return connected; }\n            });\n        });\n    });\n}\nexports.createClientSocketTransport = createClientSocketTransport;\nfunction createServerSocketTransport(port, encoding = 'utf-8') {\n    const socket = (0, net_1.createConnection)(port, '127.0.0.1');\n    return [\n        new SocketMessageReader(socket, encoding),\n        new SocketMessageWriter(socket, encoding)\n    ];\n}\nexports.createServerSocketTransport = createServerSocketTransport;\nfunction isReadableStream(value) {\n    const candidate = value;\n    return candidate.read !== undefined && candidate.addListener !== undefined;\n}\nfunction isWritableStream(value) {\n    const candidate = value;\n    return candidate.write !== undefined && candidate.addListener !== undefined;\n}\nfunction createMessageConnection(input, output, logger, options) {\n    if (!logger) {\n        logger = api_1.NullLogger;\n    }\n    const reader = isReadableStream(input) ? new StreamMessageReader(input) : input;\n    const writer = isWritableStream(output) ? new StreamMessageWriter(output) : output;\n    if (api_1.ConnectionStrategy.is(options)) {\n        options = { connectionStrategy: options };\n    }\n    return (0, api_1.createMessageConnection)(reader, writer, logger, options);\n}\nexports.createMessageConnection = createMessageConnection;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\n'use strict';\n\nmodule.exports = require('./lib/node/main');", "(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\"], factory);\n    }\n})(function (require, exports) {\n    /* --------------------------------------------------------------------------------------------\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for license information.\n     * ------------------------------------------------------------------------------------------ */\n    'use strict';\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.TextDocument = exports.EOL = exports.WorkspaceFolder = exports.InlineCompletionContext = exports.SelectedCompletionInfo = exports.InlineCompletionTriggerKind = exports.InlineCompletionList = exports.InlineCompletionItem = exports.StringValue = exports.InlayHint = exports.InlayHintLabelPart = exports.InlayHintKind = exports.InlineValueContext = exports.InlineValueEvaluatableExpression = exports.InlineValueVariableLookup = exports.InlineValueText = exports.SemanticTokens = exports.SemanticTokenModifiers = exports.SemanticTokenTypes = exports.SelectionRange = exports.DocumentLink = exports.FormattingOptions = exports.CodeLens = exports.CodeAction = exports.CodeActionContext = exports.CodeActionTriggerKind = exports.CodeActionKind = exports.DocumentSymbol = exports.WorkspaceSymbol = exports.SymbolInformation = exports.SymbolTag = exports.SymbolKind = exports.DocumentHighlight = exports.DocumentHighlightKind = exports.SignatureInformation = exports.ParameterInformation = exports.Hover = exports.MarkedString = exports.CompletionList = exports.CompletionItem = exports.CompletionItemLabelDetails = exports.InsertTextMode = exports.InsertReplaceEdit = exports.CompletionItemTag = exports.InsertTextFormat = exports.CompletionItemKind = exports.MarkupContent = exports.MarkupKind = exports.TextDocumentItem = exports.OptionalVersionedTextDocumentIdentifier = exports.VersionedTextDocumentIdentifier = exports.TextDocumentIdentifier = exports.WorkspaceChange = exports.WorkspaceEdit = exports.DeleteFile = exports.RenameFile = exports.CreateFile = exports.TextDocumentEdit = exports.AnnotatedTextEdit = exports.ChangeAnnotationIdentifier = exports.ChangeAnnotation = exports.TextEdit = exports.Command = exports.Diagnostic = exports.CodeDescription = exports.DiagnosticTag = exports.DiagnosticSeverity = exports.DiagnosticRelatedInformation = exports.FoldingRange = exports.FoldingRangeKind = exports.ColorPresentation = exports.ColorInformation = exports.Color = exports.LocationLink = exports.Location = exports.Range = exports.Position = exports.uinteger = exports.integer = exports.URI = exports.DocumentUri = void 0;\n    var DocumentUri;\n    (function (DocumentUri) {\n        function is(value) {\n            return typeof value === 'string';\n        }\n        DocumentUri.is = is;\n    })(DocumentUri || (exports.DocumentUri = DocumentUri = {}));\n    var URI;\n    (function (URI) {\n        function is(value) {\n            return typeof value === 'string';\n        }\n        URI.is = is;\n    })(URI || (exports.URI = URI = {}));\n    var integer;\n    (function (integer) {\n        integer.MIN_VALUE = -2147483648;\n        integer.MAX_VALUE = 2147483647;\n        function is(value) {\n            return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n        }\n        integer.is = is;\n    })(integer || (exports.integer = integer = {}));\n    var uinteger;\n    (function (uinteger) {\n        uinteger.MIN_VALUE = 0;\n        uinteger.MAX_VALUE = 2147483647;\n        function is(value) {\n            return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n        }\n        uinteger.is = is;\n    })(uinteger || (exports.uinteger = uinteger = {}));\n    /**\n     * The Position namespace provides helper functions to work with\n     * {@link Position} literals.\n     */\n    var Position;\n    (function (Position) {\n        /**\n         * Creates a new Position literal from the given line and character.\n         * @param line The position's line.\n         * @param character The position's character.\n         */\n        function create(line, character) {\n            if (line === Number.MAX_VALUE) {\n                line = uinteger.MAX_VALUE;\n            }\n            if (character === Number.MAX_VALUE) {\n                character = uinteger.MAX_VALUE;\n            }\n            return { line: line, character: character };\n        }\n        Position.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link Position} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n        }\n        Position.is = is;\n    })(Position || (exports.Position = Position = {}));\n    /**\n     * The Range namespace provides helper functions to work with\n     * {@link Range} literals.\n     */\n    var Range;\n    (function (Range) {\n        function create(one, two, three, four) {\n            if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n                return { start: Position.create(one, two), end: Position.create(three, four) };\n            }\n            else if (Position.is(one) && Position.is(two)) {\n                return { start: one, end: two };\n            }\n            else {\n                throw new Error(\"Range#create called with invalid arguments[\".concat(one, \", \").concat(two, \", \").concat(three, \", \").concat(four, \"]\"));\n            }\n        }\n        Range.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link Range} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n        }\n        Range.is = is;\n    })(Range || (exports.Range = Range = {}));\n    /**\n     * The Location namespace provides helper functions to work with\n     * {@link Location} literals.\n     */\n    var Location;\n    (function (Location) {\n        /**\n         * Creates a Location literal.\n         * @param uri The location's uri.\n         * @param range The location's range.\n         */\n        function create(uri, range) {\n            return { uri: uri, range: range };\n        }\n        Location.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link Location} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n        }\n        Location.is = is;\n    })(Location || (exports.Location = Location = {}));\n    /**\n     * The LocationLink namespace provides helper functions to work with\n     * {@link LocationLink} literals.\n     */\n    var LocationLink;\n    (function (LocationLink) {\n        /**\n         * Creates a LocationLink literal.\n         * @param targetUri The definition's uri.\n         * @param targetRange The full range of the definition.\n         * @param targetSelectionRange The span of the symbol definition at the target.\n         * @param originSelectionRange The span of the symbol being defined in the originating source file.\n         */\n        function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n            return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\n        }\n        LocationLink.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link LocationLink} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n                && Range.is(candidate.targetSelectionRange)\n                && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n        }\n        LocationLink.is = is;\n    })(LocationLink || (exports.LocationLink = LocationLink = {}));\n    /**\n     * The Color namespace provides helper functions to work with\n     * {@link Color} literals.\n     */\n    var Color;\n    (function (Color) {\n        /**\n         * Creates a new Color literal.\n         */\n        function create(red, green, blue, alpha) {\n            return {\n                red: red,\n                green: green,\n                blue: blue,\n                alpha: alpha,\n            };\n        }\n        Color.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link Color} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n                && Is.numberRange(candidate.green, 0, 1)\n                && Is.numberRange(candidate.blue, 0, 1)\n                && Is.numberRange(candidate.alpha, 0, 1);\n        }\n        Color.is = is;\n    })(Color || (exports.Color = Color = {}));\n    /**\n     * The ColorInformation namespace provides helper functions to work with\n     * {@link ColorInformation} literals.\n     */\n    var ColorInformation;\n    (function (ColorInformation) {\n        /**\n         * Creates a new ColorInformation literal.\n         */\n        function create(range, color) {\n            return {\n                range: range,\n                color: color,\n            };\n        }\n        ColorInformation.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n        }\n        ColorInformation.is = is;\n    })(ColorInformation || (exports.ColorInformation = ColorInformation = {}));\n    /**\n     * The Color namespace provides helper functions to work with\n     * {@link ColorPresentation} literals.\n     */\n    var ColorPresentation;\n    (function (ColorPresentation) {\n        /**\n         * Creates a new ColorInformation literal.\n         */\n        function create(label, textEdit, additionalTextEdits) {\n            return {\n                label: label,\n                textEdit: textEdit,\n                additionalTextEdits: additionalTextEdits,\n            };\n        }\n        ColorPresentation.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Is.string(candidate.label)\n                && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n                && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n        }\n        ColorPresentation.is = is;\n    })(ColorPresentation || (exports.ColorPresentation = ColorPresentation = {}));\n    /**\n     * A set of predefined range kinds.\n     */\n    var FoldingRangeKind;\n    (function (FoldingRangeKind) {\n        /**\n         * Folding range for a comment\n         */\n        FoldingRangeKind.Comment = 'comment';\n        /**\n         * Folding range for an import or include\n         */\n        FoldingRangeKind.Imports = 'imports';\n        /**\n         * Folding range for a region (e.g. `#region`)\n         */\n        FoldingRangeKind.Region = 'region';\n    })(FoldingRangeKind || (exports.FoldingRangeKind = FoldingRangeKind = {}));\n    /**\n     * The folding range namespace provides helper functions to work with\n     * {@link FoldingRange} literals.\n     */\n    var FoldingRange;\n    (function (FoldingRange) {\n        /**\n         * Creates a new FoldingRange literal.\n         */\n        function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n            var result = {\n                startLine: startLine,\n                endLine: endLine\n            };\n            if (Is.defined(startCharacter)) {\n                result.startCharacter = startCharacter;\n            }\n            if (Is.defined(endCharacter)) {\n                result.endCharacter = endCharacter;\n            }\n            if (Is.defined(kind)) {\n                result.kind = kind;\n            }\n            if (Is.defined(collapsedText)) {\n                result.collapsedText = collapsedText;\n            }\n            return result;\n        }\n        FoldingRange.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n                && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n                && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n                && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n        }\n        FoldingRange.is = is;\n    })(FoldingRange || (exports.FoldingRange = FoldingRange = {}));\n    /**\n     * The DiagnosticRelatedInformation namespace provides helper functions to work with\n     * {@link DiagnosticRelatedInformation} literals.\n     */\n    var DiagnosticRelatedInformation;\n    (function (DiagnosticRelatedInformation) {\n        /**\n         * Creates a new DiagnosticRelatedInformation literal.\n         */\n        function create(location, message) {\n            return {\n                location: location,\n                message: message\n            };\n        }\n        DiagnosticRelatedInformation.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n        }\n        DiagnosticRelatedInformation.is = is;\n    })(DiagnosticRelatedInformation || (exports.DiagnosticRelatedInformation = DiagnosticRelatedInformation = {}));\n    /**\n     * The diagnostic's severity.\n     */\n    var DiagnosticSeverity;\n    (function (DiagnosticSeverity) {\n        /**\n         * Reports an error.\n         */\n        DiagnosticSeverity.Error = 1;\n        /**\n         * Reports a warning.\n         */\n        DiagnosticSeverity.Warning = 2;\n        /**\n         * Reports an information.\n         */\n        DiagnosticSeverity.Information = 3;\n        /**\n         * Reports a hint.\n         */\n        DiagnosticSeverity.Hint = 4;\n    })(DiagnosticSeverity || (exports.DiagnosticSeverity = DiagnosticSeverity = {}));\n    /**\n     * The diagnostic tags.\n     *\n     * @since 3.15.0\n     */\n    var DiagnosticTag;\n    (function (DiagnosticTag) {\n        /**\n         * Unused or unnecessary code.\n         *\n         * Clients are allowed to render diagnostics with this tag faded out instead of having\n         * an error squiggle.\n         */\n        DiagnosticTag.Unnecessary = 1;\n        /**\n         * Deprecated or obsolete code.\n         *\n         * Clients are allowed to rendered diagnostics with this tag strike through.\n         */\n        DiagnosticTag.Deprecated = 2;\n    })(DiagnosticTag || (exports.DiagnosticTag = DiagnosticTag = {}));\n    /**\n     * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n     *\n     * @since 3.16.0\n     */\n    var CodeDescription;\n    (function (CodeDescription) {\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Is.string(candidate.href);\n        }\n        CodeDescription.is = is;\n    })(CodeDescription || (exports.CodeDescription = CodeDescription = {}));\n    /**\n     * The Diagnostic namespace provides helper functions to work with\n     * {@link Diagnostic} literals.\n     */\n    var Diagnostic;\n    (function (Diagnostic) {\n        /**\n         * Creates a new Diagnostic literal.\n         */\n        function create(range, message, severity, code, source, relatedInformation) {\n            var result = { range: range, message: message };\n            if (Is.defined(severity)) {\n                result.severity = severity;\n            }\n            if (Is.defined(code)) {\n                result.code = code;\n            }\n            if (Is.defined(source)) {\n                result.source = source;\n            }\n            if (Is.defined(relatedInformation)) {\n                result.relatedInformation = relatedInformation;\n            }\n            return result;\n        }\n        Diagnostic.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n         */\n        function is(value) {\n            var _a;\n            var candidate = value;\n            return Is.defined(candidate)\n                && Range.is(candidate.range)\n                && Is.string(candidate.message)\n                && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n                && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n                && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n                && (Is.string(candidate.source) || Is.undefined(candidate.source))\n                && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n        }\n        Diagnostic.is = is;\n    })(Diagnostic || (exports.Diagnostic = Diagnostic = {}));\n    /**\n     * The Command namespace provides helper functions to work with\n     * {@link Command} literals.\n     */\n    var Command;\n    (function (Command) {\n        /**\n         * Creates a new Command literal.\n         */\n        function create(title, command) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var result = { title: title, command: command };\n            if (Is.defined(args) && args.length > 0) {\n                result.arguments = args;\n            }\n            return result;\n        }\n        Command.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link Command} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n        }\n        Command.is = is;\n    })(Command || (exports.Command = Command = {}));\n    /**\n     * The TextEdit namespace provides helper function to create replace,\n     * insert and delete edits more easily.\n     */\n    var TextEdit;\n    (function (TextEdit) {\n        /**\n         * Creates a replace text edit.\n         * @param range The range of text to be replaced.\n         * @param newText The new text.\n         */\n        function replace(range, newText) {\n            return { range: range, newText: newText };\n        }\n        TextEdit.replace = replace;\n        /**\n         * Creates an insert text edit.\n         * @param position The position to insert the text at.\n         * @param newText The text to be inserted.\n         */\n        function insert(position, newText) {\n            return { range: { start: position, end: position }, newText: newText };\n        }\n        TextEdit.insert = insert;\n        /**\n         * Creates a delete text edit.\n         * @param range The range of text to be deleted.\n         */\n        function del(range) {\n            return { range: range, newText: '' };\n        }\n        TextEdit.del = del;\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate)\n                && Is.string(candidate.newText)\n                && Range.is(candidate.range);\n        }\n        TextEdit.is = is;\n    })(TextEdit || (exports.TextEdit = TextEdit = {}));\n    var ChangeAnnotation;\n    (function (ChangeAnnotation) {\n        function create(label, needsConfirmation, description) {\n            var result = { label: label };\n            if (needsConfirmation !== undefined) {\n                result.needsConfirmation = needsConfirmation;\n            }\n            if (description !== undefined) {\n                result.description = description;\n            }\n            return result;\n        }\n        ChangeAnnotation.create = create;\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n                (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n                (Is.string(candidate.description) || candidate.description === undefined);\n        }\n        ChangeAnnotation.is = is;\n    })(ChangeAnnotation || (exports.ChangeAnnotation = ChangeAnnotation = {}));\n    var ChangeAnnotationIdentifier;\n    (function (ChangeAnnotationIdentifier) {\n        function is(value) {\n            var candidate = value;\n            return Is.string(candidate);\n        }\n        ChangeAnnotationIdentifier.is = is;\n    })(ChangeAnnotationIdentifier || (exports.ChangeAnnotationIdentifier = ChangeAnnotationIdentifier = {}));\n    var AnnotatedTextEdit;\n    (function (AnnotatedTextEdit) {\n        /**\n         * Creates an annotated replace text edit.\n         *\n         * @param range The range of text to be replaced.\n         * @param newText The new text.\n         * @param annotation The annotation.\n         */\n        function replace(range, newText, annotation) {\n            return { range: range, newText: newText, annotationId: annotation };\n        }\n        AnnotatedTextEdit.replace = replace;\n        /**\n         * Creates an annotated insert text edit.\n         *\n         * @param position The position to insert the text at.\n         * @param newText The text to be inserted.\n         * @param annotation The annotation.\n         */\n        function insert(position, newText, annotation) {\n            return { range: { start: position, end: position }, newText: newText, annotationId: annotation };\n        }\n        AnnotatedTextEdit.insert = insert;\n        /**\n         * Creates an annotated delete text edit.\n         *\n         * @param range The range of text to be deleted.\n         * @param annotation The annotation.\n         */\n        function del(range, annotation) {\n            return { range: range, newText: '', annotationId: annotation };\n        }\n        AnnotatedTextEdit.del = del;\n        function is(value) {\n            var candidate = value;\n            return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n        }\n        AnnotatedTextEdit.is = is;\n    })(AnnotatedTextEdit || (exports.AnnotatedTextEdit = AnnotatedTextEdit = {}));\n    /**\n     * The TextDocumentEdit namespace provides helper function to create\n     * an edit that manipulates a text document.\n     */\n    var TextDocumentEdit;\n    (function (TextDocumentEdit) {\n        /**\n         * Creates a new `TextDocumentEdit`\n         */\n        function create(textDocument, edits) {\n            return { textDocument: textDocument, edits: edits };\n        }\n        TextDocumentEdit.create = create;\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate)\n                && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n                && Array.isArray(candidate.edits);\n        }\n        TextDocumentEdit.is = is;\n    })(TextDocumentEdit || (exports.TextDocumentEdit = TextDocumentEdit = {}));\n    var CreateFile;\n    (function (CreateFile) {\n        function create(uri, options, annotation) {\n            var result = {\n                kind: 'create',\n                uri: uri\n            };\n            if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n                result.options = options;\n            }\n            if (annotation !== undefined) {\n                result.annotationId = annotation;\n            }\n            return result;\n        }\n        CreateFile.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n                ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n        }\n        CreateFile.is = is;\n    })(CreateFile || (exports.CreateFile = CreateFile = {}));\n    var RenameFile;\n    (function (RenameFile) {\n        function create(oldUri, newUri, options, annotation) {\n            var result = {\n                kind: 'rename',\n                oldUri: oldUri,\n                newUri: newUri\n            };\n            if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n                result.options = options;\n            }\n            if (annotation !== undefined) {\n                result.annotationId = annotation;\n            }\n            return result;\n        }\n        RenameFile.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n                ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n        }\n        RenameFile.is = is;\n    })(RenameFile || (exports.RenameFile = RenameFile = {}));\n    var DeleteFile;\n    (function (DeleteFile) {\n        function create(uri, options, annotation) {\n            var result = {\n                kind: 'delete',\n                uri: uri\n            };\n            if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n                result.options = options;\n            }\n            if (annotation !== undefined) {\n                result.annotationId = annotation;\n            }\n            return result;\n        }\n        DeleteFile.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n                ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n        }\n        DeleteFile.is = is;\n    })(DeleteFile || (exports.DeleteFile = DeleteFile = {}));\n    var WorkspaceEdit;\n    (function (WorkspaceEdit) {\n        function is(value) {\n            var candidate = value;\n            return candidate &&\n                (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n                (candidate.documentChanges === undefined || candidate.documentChanges.every(function (change) {\n                    if (Is.string(change.kind)) {\n                        return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                    }\n                    else {\n                        return TextDocumentEdit.is(change);\n                    }\n                }));\n        }\n        WorkspaceEdit.is = is;\n    })(WorkspaceEdit || (exports.WorkspaceEdit = WorkspaceEdit = {}));\n    var TextEditChangeImpl = /** @class */ (function () {\n        function TextEditChangeImpl(edits, changeAnnotations) {\n            this.edits = edits;\n            this.changeAnnotations = changeAnnotations;\n        }\n        TextEditChangeImpl.prototype.insert = function (position, newText, annotation) {\n            var edit;\n            var id;\n            if (annotation === undefined) {\n                edit = TextEdit.insert(position, newText);\n            }\n            else if (ChangeAnnotationIdentifier.is(annotation)) {\n                id = annotation;\n                edit = AnnotatedTextEdit.insert(position, newText, annotation);\n            }\n            else {\n                this.assertChangeAnnotations(this.changeAnnotations);\n                id = this.changeAnnotations.manage(annotation);\n                edit = AnnotatedTextEdit.insert(position, newText, id);\n            }\n            this.edits.push(edit);\n            if (id !== undefined) {\n                return id;\n            }\n        };\n        TextEditChangeImpl.prototype.replace = function (range, newText, annotation) {\n            var edit;\n            var id;\n            if (annotation === undefined) {\n                edit = TextEdit.replace(range, newText);\n            }\n            else if (ChangeAnnotationIdentifier.is(annotation)) {\n                id = annotation;\n                edit = AnnotatedTextEdit.replace(range, newText, annotation);\n            }\n            else {\n                this.assertChangeAnnotations(this.changeAnnotations);\n                id = this.changeAnnotations.manage(annotation);\n                edit = AnnotatedTextEdit.replace(range, newText, id);\n            }\n            this.edits.push(edit);\n            if (id !== undefined) {\n                return id;\n            }\n        };\n        TextEditChangeImpl.prototype.delete = function (range, annotation) {\n            var edit;\n            var id;\n            if (annotation === undefined) {\n                edit = TextEdit.del(range);\n            }\n            else if (ChangeAnnotationIdentifier.is(annotation)) {\n                id = annotation;\n                edit = AnnotatedTextEdit.del(range, annotation);\n            }\n            else {\n                this.assertChangeAnnotations(this.changeAnnotations);\n                id = this.changeAnnotations.manage(annotation);\n                edit = AnnotatedTextEdit.del(range, id);\n            }\n            this.edits.push(edit);\n            if (id !== undefined) {\n                return id;\n            }\n        };\n        TextEditChangeImpl.prototype.add = function (edit) {\n            this.edits.push(edit);\n        };\n        TextEditChangeImpl.prototype.all = function () {\n            return this.edits;\n        };\n        TextEditChangeImpl.prototype.clear = function () {\n            this.edits.splice(0, this.edits.length);\n        };\n        TextEditChangeImpl.prototype.assertChangeAnnotations = function (value) {\n            if (value === undefined) {\n                throw new Error(\"Text edit change is not configured to manage change annotations.\");\n            }\n        };\n        return TextEditChangeImpl;\n    }());\n    /**\n     * A helper class\n     */\n    var ChangeAnnotations = /** @class */ (function () {\n        function ChangeAnnotations(annotations) {\n            this._annotations = annotations === undefined ? Object.create(null) : annotations;\n            this._counter = 0;\n            this._size = 0;\n        }\n        ChangeAnnotations.prototype.all = function () {\n            return this._annotations;\n        };\n        Object.defineProperty(ChangeAnnotations.prototype, \"size\", {\n            get: function () {\n                return this._size;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        ChangeAnnotations.prototype.manage = function (idOrAnnotation, annotation) {\n            var id;\n            if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n                id = idOrAnnotation;\n            }\n            else {\n                id = this.nextId();\n                annotation = idOrAnnotation;\n            }\n            if (this._annotations[id] !== undefined) {\n                throw new Error(\"Id \".concat(id, \" is already in use.\"));\n            }\n            if (annotation === undefined) {\n                throw new Error(\"No annotation provided for id \".concat(id));\n            }\n            this._annotations[id] = annotation;\n            this._size++;\n            return id;\n        };\n        ChangeAnnotations.prototype.nextId = function () {\n            this._counter++;\n            return this._counter.toString();\n        };\n        return ChangeAnnotations;\n    }());\n    /**\n     * A workspace change helps constructing changes to a workspace.\n     */\n    var WorkspaceChange = /** @class */ (function () {\n        function WorkspaceChange(workspaceEdit) {\n            var _this = this;\n            this._textEditChanges = Object.create(null);\n            if (workspaceEdit !== undefined) {\n                this._workspaceEdit = workspaceEdit;\n                if (workspaceEdit.documentChanges) {\n                    this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                    workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                    workspaceEdit.documentChanges.forEach(function (change) {\n                        if (TextDocumentEdit.is(change)) {\n                            var textEditChange = new TextEditChangeImpl(change.edits, _this._changeAnnotations);\n                            _this._textEditChanges[change.textDocument.uri] = textEditChange;\n                        }\n                    });\n                }\n                else if (workspaceEdit.changes) {\n                    Object.keys(workspaceEdit.changes).forEach(function (key) {\n                        var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                        _this._textEditChanges[key] = textEditChange;\n                    });\n                }\n            }\n            else {\n                this._workspaceEdit = {};\n            }\n        }\n        Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n            /**\n             * Returns the underlying {@link WorkspaceEdit} literal\n             * use to be returned from a workspace edit operation like rename.\n             */\n            get: function () {\n                this.initDocumentChanges();\n                if (this._changeAnnotations !== undefined) {\n                    if (this._changeAnnotations.size === 0) {\n                        this._workspaceEdit.changeAnnotations = undefined;\n                    }\n                    else {\n                        this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                    }\n                }\n                return this._workspaceEdit;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        WorkspaceChange.prototype.getTextEditChange = function (key) {\n            if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n                this.initDocumentChanges();\n                if (this._workspaceEdit.documentChanges === undefined) {\n                    throw new Error('Workspace edit is not configured for document changes.');\n                }\n                var textDocument = { uri: key.uri, version: key.version };\n                var result = this._textEditChanges[textDocument.uri];\n                if (!result) {\n                    var edits = [];\n                    var textDocumentEdit = {\n                        textDocument: textDocument,\n                        edits: edits\n                    };\n                    this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                    result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                    this._textEditChanges[textDocument.uri] = result;\n                }\n                return result;\n            }\n            else {\n                this.initChanges();\n                if (this._workspaceEdit.changes === undefined) {\n                    throw new Error('Workspace edit is not configured for normal text edit changes.');\n                }\n                var result = this._textEditChanges[key];\n                if (!result) {\n                    var edits = [];\n                    this._workspaceEdit.changes[key] = edits;\n                    result = new TextEditChangeImpl(edits);\n                    this._textEditChanges[key] = result;\n                }\n                return result;\n            }\n        };\n        WorkspaceChange.prototype.initDocumentChanges = function () {\n            if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n                this._changeAnnotations = new ChangeAnnotations();\n                this._workspaceEdit.documentChanges = [];\n                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n            }\n        };\n        WorkspaceChange.prototype.initChanges = function () {\n            if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n                this._workspaceEdit.changes = Object.create(null);\n            }\n        };\n        WorkspaceChange.prototype.createFile = function (uri, optionsOrAnnotation, options) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            var annotation;\n            if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n                annotation = optionsOrAnnotation;\n            }\n            else {\n                options = optionsOrAnnotation;\n            }\n            var operation;\n            var id;\n            if (annotation === undefined) {\n                operation = CreateFile.create(uri, options);\n            }\n            else {\n                id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n                operation = CreateFile.create(uri, options, id);\n            }\n            this._workspaceEdit.documentChanges.push(operation);\n            if (id !== undefined) {\n                return id;\n            }\n        };\n        WorkspaceChange.prototype.renameFile = function (oldUri, newUri, optionsOrAnnotation, options) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            var annotation;\n            if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n                annotation = optionsOrAnnotation;\n            }\n            else {\n                options = optionsOrAnnotation;\n            }\n            var operation;\n            var id;\n            if (annotation === undefined) {\n                operation = RenameFile.create(oldUri, newUri, options);\n            }\n            else {\n                id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n                operation = RenameFile.create(oldUri, newUri, options, id);\n            }\n            this._workspaceEdit.documentChanges.push(operation);\n            if (id !== undefined) {\n                return id;\n            }\n        };\n        WorkspaceChange.prototype.deleteFile = function (uri, optionsOrAnnotation, options) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            var annotation;\n            if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n                annotation = optionsOrAnnotation;\n            }\n            else {\n                options = optionsOrAnnotation;\n            }\n            var operation;\n            var id;\n            if (annotation === undefined) {\n                operation = DeleteFile.create(uri, options);\n            }\n            else {\n                id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n                operation = DeleteFile.create(uri, options, id);\n            }\n            this._workspaceEdit.documentChanges.push(operation);\n            if (id !== undefined) {\n                return id;\n            }\n        };\n        return WorkspaceChange;\n    }());\n    exports.WorkspaceChange = WorkspaceChange;\n    /**\n     * The TextDocumentIdentifier namespace provides helper functions to work with\n     * {@link TextDocumentIdentifier} literals.\n     */\n    var TextDocumentIdentifier;\n    (function (TextDocumentIdentifier) {\n        /**\n         * Creates a new TextDocumentIdentifier literal.\n         * @param uri The document's uri.\n         */\n        function create(uri) {\n            return { uri: uri };\n        }\n        TextDocumentIdentifier.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.string(candidate.uri);\n        }\n        TextDocumentIdentifier.is = is;\n    })(TextDocumentIdentifier || (exports.TextDocumentIdentifier = TextDocumentIdentifier = {}));\n    /**\n     * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n     * {@link VersionedTextDocumentIdentifier} literals.\n     */\n    var VersionedTextDocumentIdentifier;\n    (function (VersionedTextDocumentIdentifier) {\n        /**\n         * Creates a new VersionedTextDocumentIdentifier literal.\n         * @param uri The document's uri.\n         * @param version The document's version.\n         */\n        function create(uri, version) {\n            return { uri: uri, version: version };\n        }\n        VersionedTextDocumentIdentifier.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n        }\n        VersionedTextDocumentIdentifier.is = is;\n    })(VersionedTextDocumentIdentifier || (exports.VersionedTextDocumentIdentifier = VersionedTextDocumentIdentifier = {}));\n    /**\n     * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n     * {@link OptionalVersionedTextDocumentIdentifier} literals.\n     */\n    var OptionalVersionedTextDocumentIdentifier;\n    (function (OptionalVersionedTextDocumentIdentifier) {\n        /**\n         * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n         * @param uri The document's uri.\n         * @param version The document's version.\n         */\n        function create(uri, version) {\n            return { uri: uri, version: version };\n        }\n        OptionalVersionedTextDocumentIdentifier.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n        }\n        OptionalVersionedTextDocumentIdentifier.is = is;\n    })(OptionalVersionedTextDocumentIdentifier || (exports.OptionalVersionedTextDocumentIdentifier = OptionalVersionedTextDocumentIdentifier = {}));\n    /**\n     * The TextDocumentItem namespace provides helper functions to work with\n     * {@link TextDocumentItem} literals.\n     */\n    var TextDocumentItem;\n    (function (TextDocumentItem) {\n        /**\n         * Creates a new TextDocumentItem literal.\n         * @param uri The document's uri.\n         * @param languageId The document's language identifier.\n         * @param version The document's version number.\n         * @param text The document's text.\n         */\n        function create(uri, languageId, version, text) {\n            return { uri: uri, languageId: languageId, version: version, text: text };\n        }\n        TextDocumentItem.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n        }\n        TextDocumentItem.is = is;\n    })(TextDocumentItem || (exports.TextDocumentItem = TextDocumentItem = {}));\n    /**\n     * Describes the content type that a client supports in various\n     * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n     *\n     * Please note that `MarkupKinds` must not start with a `$`. This kinds\n     * are reserved for internal usage.\n     */\n    var MarkupKind;\n    (function (MarkupKind) {\n        /**\n         * Plain text is supported as a content format\n         */\n        MarkupKind.PlainText = 'plaintext';\n        /**\n         * Markdown is supported as a content format\n         */\n        MarkupKind.Markdown = 'markdown';\n        /**\n         * Checks whether the given value is a value of the {@link MarkupKind} type.\n         */\n        function is(value) {\n            var candidate = value;\n            return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n        }\n        MarkupKind.is = is;\n    })(MarkupKind || (exports.MarkupKind = MarkupKind = {}));\n    var MarkupContent;\n    (function (MarkupContent) {\n        /**\n         * Checks whether the given value conforms to the {@link MarkupContent} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n        }\n        MarkupContent.is = is;\n    })(MarkupContent || (exports.MarkupContent = MarkupContent = {}));\n    /**\n     * The kind of a completion entry.\n     */\n    var CompletionItemKind;\n    (function (CompletionItemKind) {\n        CompletionItemKind.Text = 1;\n        CompletionItemKind.Method = 2;\n        CompletionItemKind.Function = 3;\n        CompletionItemKind.Constructor = 4;\n        CompletionItemKind.Field = 5;\n        CompletionItemKind.Variable = 6;\n        CompletionItemKind.Class = 7;\n        CompletionItemKind.Interface = 8;\n        CompletionItemKind.Module = 9;\n        CompletionItemKind.Property = 10;\n        CompletionItemKind.Unit = 11;\n        CompletionItemKind.Value = 12;\n        CompletionItemKind.Enum = 13;\n        CompletionItemKind.Keyword = 14;\n        CompletionItemKind.Snippet = 15;\n        CompletionItemKind.Color = 16;\n        CompletionItemKind.File = 17;\n        CompletionItemKind.Reference = 18;\n        CompletionItemKind.Folder = 19;\n        CompletionItemKind.EnumMember = 20;\n        CompletionItemKind.Constant = 21;\n        CompletionItemKind.Struct = 22;\n        CompletionItemKind.Event = 23;\n        CompletionItemKind.Operator = 24;\n        CompletionItemKind.TypeParameter = 25;\n    })(CompletionItemKind || (exports.CompletionItemKind = CompletionItemKind = {}));\n    /**\n     * Defines whether the insert text in a completion item should be interpreted as\n     * plain text or a snippet.\n     */\n    var InsertTextFormat;\n    (function (InsertTextFormat) {\n        /**\n         * The primary text to be inserted is treated as a plain string.\n         */\n        InsertTextFormat.PlainText = 1;\n        /**\n         * The primary text to be inserted is treated as a snippet.\n         *\n         * A snippet can define tab stops and placeholders with `$1`, `$2`\n         * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n         * the end of the snippet. Placeholders with equal identifiers are linked,\n         * that is typing in one will update others too.\n         *\n         * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n         */\n        InsertTextFormat.Snippet = 2;\n    })(InsertTextFormat || (exports.InsertTextFormat = InsertTextFormat = {}));\n    /**\n     * Completion item tags are extra annotations that tweak the rendering of a completion\n     * item.\n     *\n     * @since 3.15.0\n     */\n    var CompletionItemTag;\n    (function (CompletionItemTag) {\n        /**\n         * Render a completion as obsolete, usually using a strike-out.\n         */\n        CompletionItemTag.Deprecated = 1;\n    })(CompletionItemTag || (exports.CompletionItemTag = CompletionItemTag = {}));\n    /**\n     * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n     *\n     * @since 3.16.0\n     */\n    var InsertReplaceEdit;\n    (function (InsertReplaceEdit) {\n        /**\n         * Creates a new insert / replace edit\n         */\n        function create(newText, insert, replace) {\n            return { newText: newText, insert: insert, replace: replace };\n        }\n        InsertReplaceEdit.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n        }\n        InsertReplaceEdit.is = is;\n    })(InsertReplaceEdit || (exports.InsertReplaceEdit = InsertReplaceEdit = {}));\n    /**\n     * How whitespace and indentation is handled during completion\n     * item insertion.\n     *\n     * @since 3.16.0\n     */\n    var InsertTextMode;\n    (function (InsertTextMode) {\n        /**\n         * The insertion or replace strings is taken as it is. If the\n         * value is multi line the lines below the cursor will be\n         * inserted using the indentation defined in the string value.\n         * The client will not apply any kind of adjustments to the\n         * string.\n         */\n        InsertTextMode.asIs = 1;\n        /**\n         * The editor adjusts leading whitespace of new lines so that\n         * they match the indentation up to the cursor of the line for\n         * which the item is accepted.\n         *\n         * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n         * multi line completion item is indented using 2 tabs and all\n         * following lines inserted will be indented using 2 tabs as well.\n         */\n        InsertTextMode.adjustIndentation = 2;\n    })(InsertTextMode || (exports.InsertTextMode = InsertTextMode = {}));\n    var CompletionItemLabelDetails;\n    (function (CompletionItemLabelDetails) {\n        function is(value) {\n            var candidate = value;\n            return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n                (Is.string(candidate.description) || candidate.description === undefined);\n        }\n        CompletionItemLabelDetails.is = is;\n    })(CompletionItemLabelDetails || (exports.CompletionItemLabelDetails = CompletionItemLabelDetails = {}));\n    /**\n     * The CompletionItem namespace provides functions to deal with\n     * completion items.\n     */\n    var CompletionItem;\n    (function (CompletionItem) {\n        /**\n         * Create a completion item and seed it with a label.\n         * @param label The completion item's label\n         */\n        function create(label) {\n            return { label: label };\n        }\n        CompletionItem.create = create;\n    })(CompletionItem || (exports.CompletionItem = CompletionItem = {}));\n    /**\n     * The CompletionList namespace provides functions to deal with\n     * completion lists.\n     */\n    var CompletionList;\n    (function (CompletionList) {\n        /**\n         * Creates a new completion list.\n         *\n         * @param items The completion items.\n         * @param isIncomplete The list is not complete.\n         */\n        function create(items, isIncomplete) {\n            return { items: items ? items : [], isIncomplete: !!isIncomplete };\n        }\n        CompletionList.create = create;\n    })(CompletionList || (exports.CompletionList = CompletionList = {}));\n    var MarkedString;\n    (function (MarkedString) {\n        /**\n         * Creates a marked string from plain text.\n         *\n         * @param plainText The plain text.\n         */\n        function fromPlainText(plainText) {\n            return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n        }\n        MarkedString.fromPlainText = fromPlainText;\n        /**\n         * Checks whether the given value conforms to the {@link MarkedString} type.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n        }\n        MarkedString.is = is;\n    })(MarkedString || (exports.MarkedString = MarkedString = {}));\n    var Hover;\n    (function (Hover) {\n        /**\n         * Checks whether the given value conforms to the {@link Hover} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n                MarkedString.is(candidate.contents) ||\n                Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n        }\n        Hover.is = is;\n    })(Hover || (exports.Hover = Hover = {}));\n    /**\n     * The ParameterInformation namespace provides helper functions to work with\n     * {@link ParameterInformation} literals.\n     */\n    var ParameterInformation;\n    (function (ParameterInformation) {\n        /**\n         * Creates a new parameter information literal.\n         *\n         * @param label A label string.\n         * @param documentation A doc string.\n         */\n        function create(label, documentation) {\n            return documentation ? { label: label, documentation: documentation } : { label: label };\n        }\n        ParameterInformation.create = create;\n    })(ParameterInformation || (exports.ParameterInformation = ParameterInformation = {}));\n    /**\n     * The SignatureInformation namespace provides helper functions to work with\n     * {@link SignatureInformation} literals.\n     */\n    var SignatureInformation;\n    (function (SignatureInformation) {\n        function create(label, documentation) {\n            var parameters = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                parameters[_i - 2] = arguments[_i];\n            }\n            var result = { label: label };\n            if (Is.defined(documentation)) {\n                result.documentation = documentation;\n            }\n            if (Is.defined(parameters)) {\n                result.parameters = parameters;\n            }\n            else {\n                result.parameters = [];\n            }\n            return result;\n        }\n        SignatureInformation.create = create;\n    })(SignatureInformation || (exports.SignatureInformation = SignatureInformation = {}));\n    /**\n     * A document highlight kind.\n     */\n    var DocumentHighlightKind;\n    (function (DocumentHighlightKind) {\n        /**\n         * A textual occurrence.\n         */\n        DocumentHighlightKind.Text = 1;\n        /**\n         * Read-access of a symbol, like reading a variable.\n         */\n        DocumentHighlightKind.Read = 2;\n        /**\n         * Write-access of a symbol, like writing to a variable.\n         */\n        DocumentHighlightKind.Write = 3;\n    })(DocumentHighlightKind || (exports.DocumentHighlightKind = DocumentHighlightKind = {}));\n    /**\n     * DocumentHighlight namespace to provide helper functions to work with\n     * {@link DocumentHighlight} literals.\n     */\n    var DocumentHighlight;\n    (function (DocumentHighlight) {\n        /**\n         * Create a DocumentHighlight object.\n         * @param range The range the highlight applies to.\n         * @param kind The highlight kind\n         */\n        function create(range, kind) {\n            var result = { range: range };\n            if (Is.number(kind)) {\n                result.kind = kind;\n            }\n            return result;\n        }\n        DocumentHighlight.create = create;\n    })(DocumentHighlight || (exports.DocumentHighlight = DocumentHighlight = {}));\n    /**\n     * A symbol kind.\n     */\n    var SymbolKind;\n    (function (SymbolKind) {\n        SymbolKind.File = 1;\n        SymbolKind.Module = 2;\n        SymbolKind.Namespace = 3;\n        SymbolKind.Package = 4;\n        SymbolKind.Class = 5;\n        SymbolKind.Method = 6;\n        SymbolKind.Property = 7;\n        SymbolKind.Field = 8;\n        SymbolKind.Constructor = 9;\n        SymbolKind.Enum = 10;\n        SymbolKind.Interface = 11;\n        SymbolKind.Function = 12;\n        SymbolKind.Variable = 13;\n        SymbolKind.Constant = 14;\n        SymbolKind.String = 15;\n        SymbolKind.Number = 16;\n        SymbolKind.Boolean = 17;\n        SymbolKind.Array = 18;\n        SymbolKind.Object = 19;\n        SymbolKind.Key = 20;\n        SymbolKind.Null = 21;\n        SymbolKind.EnumMember = 22;\n        SymbolKind.Struct = 23;\n        SymbolKind.Event = 24;\n        SymbolKind.Operator = 25;\n        SymbolKind.TypeParameter = 26;\n    })(SymbolKind || (exports.SymbolKind = SymbolKind = {}));\n    /**\n     * Symbol tags are extra annotations that tweak the rendering of a symbol.\n     *\n     * @since 3.16\n     */\n    var SymbolTag;\n    (function (SymbolTag) {\n        /**\n         * Render a symbol as obsolete, usually using a strike-out.\n         */\n        SymbolTag.Deprecated = 1;\n    })(SymbolTag || (exports.SymbolTag = SymbolTag = {}));\n    var SymbolInformation;\n    (function (SymbolInformation) {\n        /**\n         * Creates a new symbol information literal.\n         *\n         * @param name The name of the symbol.\n         * @param kind The kind of the symbol.\n         * @param range The range of the location of the symbol.\n         * @param uri The resource of the location of symbol.\n         * @param containerName The name of the symbol containing the symbol.\n         */\n        function create(name, kind, range, uri, containerName) {\n            var result = {\n                name: name,\n                kind: kind,\n                location: { uri: uri, range: range }\n            };\n            if (containerName) {\n                result.containerName = containerName;\n            }\n            return result;\n        }\n        SymbolInformation.create = create;\n    })(SymbolInformation || (exports.SymbolInformation = SymbolInformation = {}));\n    var WorkspaceSymbol;\n    (function (WorkspaceSymbol) {\n        /**\n         * Create a new workspace symbol.\n         *\n         * @param name The name of the symbol.\n         * @param kind The kind of the symbol.\n         * @param uri The resource of the location of the symbol.\n         * @param range An options range of the location.\n         * @returns A WorkspaceSymbol.\n         */\n        function create(name, kind, uri, range) {\n            return range !== undefined\n                ? { name: name, kind: kind, location: { uri: uri, range: range } }\n                : { name: name, kind: kind, location: { uri: uri } };\n        }\n        WorkspaceSymbol.create = create;\n    })(WorkspaceSymbol || (exports.WorkspaceSymbol = WorkspaceSymbol = {}));\n    var DocumentSymbol;\n    (function (DocumentSymbol) {\n        /**\n         * Creates a new symbol information literal.\n         *\n         * @param name The name of the symbol.\n         * @param detail The detail of the symbol.\n         * @param kind The kind of the symbol.\n         * @param range The range of the symbol.\n         * @param selectionRange The selectionRange of the symbol.\n         * @param children Children of the symbol.\n         */\n        function create(name, detail, kind, range, selectionRange, children) {\n            var result = {\n                name: name,\n                detail: detail,\n                kind: kind,\n                range: range,\n                selectionRange: selectionRange\n            };\n            if (children !== undefined) {\n                result.children = children;\n            }\n            return result;\n        }\n        DocumentSymbol.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return candidate &&\n                Is.string(candidate.name) && Is.number(candidate.kind) &&\n                Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n                (candidate.detail === undefined || Is.string(candidate.detail)) &&\n                (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n                (candidate.children === undefined || Array.isArray(candidate.children)) &&\n                (candidate.tags === undefined || Array.isArray(candidate.tags));\n        }\n        DocumentSymbol.is = is;\n    })(DocumentSymbol || (exports.DocumentSymbol = DocumentSymbol = {}));\n    /**\n     * A set of predefined code action kinds\n     */\n    var CodeActionKind;\n    (function (CodeActionKind) {\n        /**\n         * Empty kind.\n         */\n        CodeActionKind.Empty = '';\n        /**\n         * Base kind for quickfix actions: 'quickfix'\n         */\n        CodeActionKind.QuickFix = 'quickfix';\n        /**\n         * Base kind for refactoring actions: 'refactor'\n         */\n        CodeActionKind.Refactor = 'refactor';\n        /**\n         * Base kind for refactoring extraction actions: 'refactor.extract'\n         *\n         * Example extract actions:\n         *\n         * - Extract method\n         * - Extract function\n         * - Extract variable\n         * - Extract interface from class\n         * - ...\n         */\n        CodeActionKind.RefactorExtract = 'refactor.extract';\n        /**\n         * Base kind for refactoring inline actions: 'refactor.inline'\n         *\n         * Example inline actions:\n         *\n         * - Inline function\n         * - Inline variable\n         * - Inline constant\n         * - ...\n         */\n        CodeActionKind.RefactorInline = 'refactor.inline';\n        /**\n         * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n         *\n         * Example rewrite actions:\n         *\n         * - Convert JavaScript function to class\n         * - Add or remove parameter\n         * - Encapsulate field\n         * - Make method static\n         * - Move method to base class\n         * - ...\n         */\n        CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n        /**\n         * Base kind for source actions: `source`\n         *\n         * Source code actions apply to the entire file.\n         */\n        CodeActionKind.Source = 'source';\n        /**\n         * Base kind for an organize imports source action: `source.organizeImports`\n         */\n        CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n        /**\n         * Base kind for auto-fix source actions: `source.fixAll`.\n         *\n         * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n         * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n         *\n         * @since 3.15.0\n         */\n        CodeActionKind.SourceFixAll = 'source.fixAll';\n    })(CodeActionKind || (exports.CodeActionKind = CodeActionKind = {}));\n    /**\n     * The reason why code actions were requested.\n     *\n     * @since 3.17.0\n     */\n    var CodeActionTriggerKind;\n    (function (CodeActionTriggerKind) {\n        /**\n         * Code actions were explicitly requested by the user or by an extension.\n         */\n        CodeActionTriggerKind.Invoked = 1;\n        /**\n         * Code actions were requested automatically.\n         *\n         * This typically happens when current selection in a file changes, but can\n         * also be triggered when file content changes.\n         */\n        CodeActionTriggerKind.Automatic = 2;\n    })(CodeActionTriggerKind || (exports.CodeActionTriggerKind = CodeActionTriggerKind = {}));\n    /**\n     * The CodeActionContext namespace provides helper functions to work with\n     * {@link CodeActionContext} literals.\n     */\n    var CodeActionContext;\n    (function (CodeActionContext) {\n        /**\n         * Creates a new CodeActionContext literal.\n         */\n        function create(diagnostics, only, triggerKind) {\n            var result = { diagnostics: diagnostics };\n            if (only !== undefined && only !== null) {\n                result.only = only;\n            }\n            if (triggerKind !== undefined && triggerKind !== null) {\n                result.triggerKind = triggerKind;\n            }\n            return result;\n        }\n        CodeActionContext.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n                && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n                && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n        }\n        CodeActionContext.is = is;\n    })(CodeActionContext || (exports.CodeActionContext = CodeActionContext = {}));\n    var CodeAction;\n    (function (CodeAction) {\n        function create(title, kindOrCommandOrEdit, kind) {\n            var result = { title: title };\n            var checkKind = true;\n            if (typeof kindOrCommandOrEdit === 'string') {\n                checkKind = false;\n                result.kind = kindOrCommandOrEdit;\n            }\n            else if (Command.is(kindOrCommandOrEdit)) {\n                result.command = kindOrCommandOrEdit;\n            }\n            else {\n                result.edit = kindOrCommandOrEdit;\n            }\n            if (checkKind && kind !== undefined) {\n                result.kind = kind;\n            }\n            return result;\n        }\n        CodeAction.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate && Is.string(candidate.title) &&\n                (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n                (candidate.kind === undefined || Is.string(candidate.kind)) &&\n                (candidate.edit !== undefined || candidate.command !== undefined) &&\n                (candidate.command === undefined || Command.is(candidate.command)) &&\n                (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n                (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n        }\n        CodeAction.is = is;\n    })(CodeAction || (exports.CodeAction = CodeAction = {}));\n    /**\n     * The CodeLens namespace provides helper functions to work with\n     * {@link CodeLens} literals.\n     */\n    var CodeLens;\n    (function (CodeLens) {\n        /**\n         * Creates a new CodeLens literal.\n         */\n        function create(range, data) {\n            var result = { range: range };\n            if (Is.defined(data)) {\n                result.data = data;\n            }\n            return result;\n        }\n        CodeLens.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link CodeLens} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n        }\n        CodeLens.is = is;\n    })(CodeLens || (exports.CodeLens = CodeLens = {}));\n    /**\n     * The FormattingOptions namespace provides helper functions to work with\n     * {@link FormattingOptions} literals.\n     */\n    var FormattingOptions;\n    (function (FormattingOptions) {\n        /**\n         * Creates a new FormattingOptions literal.\n         */\n        function create(tabSize, insertSpaces) {\n            return { tabSize: tabSize, insertSpaces: insertSpaces };\n        }\n        FormattingOptions.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n        }\n        FormattingOptions.is = is;\n    })(FormattingOptions || (exports.FormattingOptions = FormattingOptions = {}));\n    /**\n     * The DocumentLink namespace provides helper functions to work with\n     * {@link DocumentLink} literals.\n     */\n    var DocumentLink;\n    (function (DocumentLink) {\n        /**\n         * Creates a new DocumentLink literal.\n         */\n        function create(range, target, data) {\n            return { range: range, target: target, data: data };\n        }\n        DocumentLink.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n        }\n        DocumentLink.is = is;\n    })(DocumentLink || (exports.DocumentLink = DocumentLink = {}));\n    /**\n     * The SelectionRange namespace provides helper function to work with\n     * SelectionRange literals.\n     */\n    var SelectionRange;\n    (function (SelectionRange) {\n        /**\n         * Creates a new SelectionRange\n         * @param range the range.\n         * @param parent an optional parent.\n         */\n        function create(range, parent) {\n            return { range: range, parent: parent };\n        }\n        SelectionRange.create = create;\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n        }\n        SelectionRange.is = is;\n    })(SelectionRange || (exports.SelectionRange = SelectionRange = {}));\n    /**\n     * A set of predefined token types. This set is not fixed\n     * an clients can specify additional token types via the\n     * corresponding client capabilities.\n     *\n     * @since 3.16.0\n     */\n    var SemanticTokenTypes;\n    (function (SemanticTokenTypes) {\n        SemanticTokenTypes[\"namespace\"] = \"namespace\";\n        /**\n         * Represents a generic type. Acts as a fallback for types which can't be mapped to\n         * a specific type like class or enum.\n         */\n        SemanticTokenTypes[\"type\"] = \"type\";\n        SemanticTokenTypes[\"class\"] = \"class\";\n        SemanticTokenTypes[\"enum\"] = \"enum\";\n        SemanticTokenTypes[\"interface\"] = \"interface\";\n        SemanticTokenTypes[\"struct\"] = \"struct\";\n        SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n        SemanticTokenTypes[\"parameter\"] = \"parameter\";\n        SemanticTokenTypes[\"variable\"] = \"variable\";\n        SemanticTokenTypes[\"property\"] = \"property\";\n        SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n        SemanticTokenTypes[\"event\"] = \"event\";\n        SemanticTokenTypes[\"function\"] = \"function\";\n        SemanticTokenTypes[\"method\"] = \"method\";\n        SemanticTokenTypes[\"macro\"] = \"macro\";\n        SemanticTokenTypes[\"keyword\"] = \"keyword\";\n        SemanticTokenTypes[\"modifier\"] = \"modifier\";\n        SemanticTokenTypes[\"comment\"] = \"comment\";\n        SemanticTokenTypes[\"string\"] = \"string\";\n        SemanticTokenTypes[\"number\"] = \"number\";\n        SemanticTokenTypes[\"regexp\"] = \"regexp\";\n        SemanticTokenTypes[\"operator\"] = \"operator\";\n        /**\n         * @since 3.17.0\n         */\n        SemanticTokenTypes[\"decorator\"] = \"decorator\";\n    })(SemanticTokenTypes || (exports.SemanticTokenTypes = SemanticTokenTypes = {}));\n    /**\n     * A set of predefined token modifiers. This set is not fixed\n     * an clients can specify additional token types via the\n     * corresponding client capabilities.\n     *\n     * @since 3.16.0\n     */\n    var SemanticTokenModifiers;\n    (function (SemanticTokenModifiers) {\n        SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n        SemanticTokenModifiers[\"definition\"] = \"definition\";\n        SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n        SemanticTokenModifiers[\"static\"] = \"static\";\n        SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n        SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n        SemanticTokenModifiers[\"async\"] = \"async\";\n        SemanticTokenModifiers[\"modification\"] = \"modification\";\n        SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n        SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n    })(SemanticTokenModifiers || (exports.SemanticTokenModifiers = SemanticTokenModifiers = {}));\n    /**\n     * @since 3.16.0\n     */\n    var SemanticTokens;\n    (function (SemanticTokens) {\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n                Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n        }\n        SemanticTokens.is = is;\n    })(SemanticTokens || (exports.SemanticTokens = SemanticTokens = {}));\n    /**\n     * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n     *\n     * @since 3.17.0\n     */\n    var InlineValueText;\n    (function (InlineValueText) {\n        /**\n         * Creates a new InlineValueText literal.\n         */\n        function create(range, text) {\n            return { range: range, text: text };\n        }\n        InlineValueText.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n        }\n        InlineValueText.is = is;\n    })(InlineValueText || (exports.InlineValueText = InlineValueText = {}));\n    /**\n     * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n     *\n     * @since 3.17.0\n     */\n    var InlineValueVariableLookup;\n    (function (InlineValueVariableLookup) {\n        /**\n         * Creates a new InlineValueText literal.\n         */\n        function create(range, variableName, caseSensitiveLookup) {\n            return { range: range, variableName: variableName, caseSensitiveLookup: caseSensitiveLookup };\n        }\n        InlineValueVariableLookup.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n                && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n        }\n        InlineValueVariableLookup.is = is;\n    })(InlineValueVariableLookup || (exports.InlineValueVariableLookup = InlineValueVariableLookup = {}));\n    /**\n     * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n     *\n     * @since 3.17.0\n     */\n    var InlineValueEvaluatableExpression;\n    (function (InlineValueEvaluatableExpression) {\n        /**\n         * Creates a new InlineValueEvaluatableExpression literal.\n         */\n        function create(range, expression) {\n            return { range: range, expression: expression };\n        }\n        InlineValueEvaluatableExpression.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n                && (Is.string(candidate.expression) || candidate.expression === undefined);\n        }\n        InlineValueEvaluatableExpression.is = is;\n    })(InlineValueEvaluatableExpression || (exports.InlineValueEvaluatableExpression = InlineValueEvaluatableExpression = {}));\n    /**\n     * The InlineValueContext namespace provides helper functions to work with\n     * {@link InlineValueContext} literals.\n     *\n     * @since 3.17.0\n     */\n    var InlineValueContext;\n    (function (InlineValueContext) {\n        /**\n         * Creates a new InlineValueContext literal.\n         */\n        function create(frameId, stoppedLocation) {\n            return { frameId: frameId, stoppedLocation: stoppedLocation };\n        }\n        InlineValueContext.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Range.is(value.stoppedLocation);\n        }\n        InlineValueContext.is = is;\n    })(InlineValueContext || (exports.InlineValueContext = InlineValueContext = {}));\n    /**\n     * Inlay hint kinds.\n     *\n     * @since 3.17.0\n     */\n    var InlayHintKind;\n    (function (InlayHintKind) {\n        /**\n         * An inlay hint that for a type annotation.\n         */\n        InlayHintKind.Type = 1;\n        /**\n         * An inlay hint that is for a parameter.\n         */\n        InlayHintKind.Parameter = 2;\n        function is(value) {\n            return value === 1 || value === 2;\n        }\n        InlayHintKind.is = is;\n    })(InlayHintKind || (exports.InlayHintKind = InlayHintKind = {}));\n    var InlayHintLabelPart;\n    (function (InlayHintLabelPart) {\n        function create(value) {\n            return { value: value };\n        }\n        InlayHintLabelPart.create = create;\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate)\n                && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n                && (candidate.location === undefined || Location.is(candidate.location))\n                && (candidate.command === undefined || Command.is(candidate.command));\n        }\n        InlayHintLabelPart.is = is;\n    })(InlayHintLabelPart || (exports.InlayHintLabelPart = InlayHintLabelPart = {}));\n    var InlayHint;\n    (function (InlayHint) {\n        function create(position, label, kind) {\n            var result = { position: position, label: label };\n            if (kind !== undefined) {\n                result.kind = kind;\n            }\n            return result;\n        }\n        InlayHint.create = create;\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Position.is(candidate.position)\n                && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n                && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n                && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n                && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n                && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n                && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n        }\n        InlayHint.is = is;\n    })(InlayHint || (exports.InlayHint = InlayHint = {}));\n    var StringValue;\n    (function (StringValue) {\n        function createSnippet(value) {\n            return { kind: 'snippet', value: value };\n        }\n        StringValue.createSnippet = createSnippet;\n    })(StringValue || (exports.StringValue = StringValue = {}));\n    var InlineCompletionItem;\n    (function (InlineCompletionItem) {\n        function create(insertText, filterText, range, command) {\n            return { insertText: insertText, filterText: filterText, range: range, command: command };\n        }\n        InlineCompletionItem.create = create;\n    })(InlineCompletionItem || (exports.InlineCompletionItem = InlineCompletionItem = {}));\n    var InlineCompletionList;\n    (function (InlineCompletionList) {\n        function create(items) {\n            return { items: items };\n        }\n        InlineCompletionList.create = create;\n    })(InlineCompletionList || (exports.InlineCompletionList = InlineCompletionList = {}));\n    /**\n     * Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n     *\n     * @since 3.18.0\n     * @proposed\n     */\n    var InlineCompletionTriggerKind;\n    (function (InlineCompletionTriggerKind) {\n        /**\n         * Completion was triggered explicitly by a user gesture.\n         */\n        InlineCompletionTriggerKind.Invoked = 0;\n        /**\n         * Completion was triggered automatically while editing.\n         */\n        InlineCompletionTriggerKind.Automatic = 1;\n    })(InlineCompletionTriggerKind || (exports.InlineCompletionTriggerKind = InlineCompletionTriggerKind = {}));\n    var SelectedCompletionInfo;\n    (function (SelectedCompletionInfo) {\n        function create(range, text) {\n            return { range: range, text: text };\n        }\n        SelectedCompletionInfo.create = create;\n    })(SelectedCompletionInfo || (exports.SelectedCompletionInfo = SelectedCompletionInfo = {}));\n    var InlineCompletionContext;\n    (function (InlineCompletionContext) {\n        function create(triggerKind, selectedCompletionInfo) {\n            return { triggerKind: triggerKind, selectedCompletionInfo: selectedCompletionInfo };\n        }\n        InlineCompletionContext.create = create;\n    })(InlineCompletionContext || (exports.InlineCompletionContext = InlineCompletionContext = {}));\n    var WorkspaceFolder;\n    (function (WorkspaceFolder) {\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n        }\n        WorkspaceFolder.is = is;\n    })(WorkspaceFolder || (exports.WorkspaceFolder = WorkspaceFolder = {}));\n    exports.EOL = ['\\n', '\\r\\n', '\\r'];\n    /**\n     * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n     */\n    var TextDocument;\n    (function (TextDocument) {\n        /**\n         * Creates a new ITextDocument literal from the given uri and content.\n         * @param uri The document's uri.\n         * @param languageId The document's language Id.\n         * @param version The document's version.\n         * @param content The document's content.\n         */\n        function create(uri, languageId, version, content) {\n            return new FullTextDocument(uri, languageId, version, content);\n        }\n        TextDocument.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n                && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n        }\n        TextDocument.is = is;\n        function applyEdits(document, edits) {\n            var text = document.getText();\n            var sortedEdits = mergeSort(edits, function (a, b) {\n                var diff = a.range.start.line - b.range.start.line;\n                if (diff === 0) {\n                    return a.range.start.character - b.range.start.character;\n                }\n                return diff;\n            });\n            var lastModifiedOffset = text.length;\n            for (var i = sortedEdits.length - 1; i >= 0; i--) {\n                var e = sortedEdits[i];\n                var startOffset = document.offsetAt(e.range.start);\n                var endOffset = document.offsetAt(e.range.end);\n                if (endOffset <= lastModifiedOffset) {\n                    text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n                }\n                else {\n                    throw new Error('Overlapping edit');\n                }\n                lastModifiedOffset = startOffset;\n            }\n            return text;\n        }\n        TextDocument.applyEdits = applyEdits;\n        function mergeSort(data, compare) {\n            if (data.length <= 1) {\n                // sorted\n                return data;\n            }\n            var p = (data.length / 2) | 0;\n            var left = data.slice(0, p);\n            var right = data.slice(p);\n            mergeSort(left, compare);\n            mergeSort(right, compare);\n            var leftIdx = 0;\n            var rightIdx = 0;\n            var i = 0;\n            while (leftIdx < left.length && rightIdx < right.length) {\n                var ret = compare(left[leftIdx], right[rightIdx]);\n                if (ret <= 0) {\n                    // smaller_equal -> take left to preserve order\n                    data[i++] = left[leftIdx++];\n                }\n                else {\n                    // greater -> take right\n                    data[i++] = right[rightIdx++];\n                }\n            }\n            while (leftIdx < left.length) {\n                data[i++] = left[leftIdx++];\n            }\n            while (rightIdx < right.length) {\n                data[i++] = right[rightIdx++];\n            }\n            return data;\n        }\n    })(TextDocument || (exports.TextDocument = TextDocument = {}));\n    /**\n     * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n     */\n    var FullTextDocument = /** @class */ (function () {\n        function FullTextDocument(uri, languageId, version, content) {\n            this._uri = uri;\n            this._languageId = languageId;\n            this._version = version;\n            this._content = content;\n            this._lineOffsets = undefined;\n        }\n        Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n            get: function () {\n                return this._uri;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n            get: function () {\n                return this._languageId;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(FullTextDocument.prototype, \"version\", {\n            get: function () {\n                return this._version;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        FullTextDocument.prototype.getText = function (range) {\n            if (range) {\n                var start = this.offsetAt(range.start);\n                var end = this.offsetAt(range.end);\n                return this._content.substring(start, end);\n            }\n            return this._content;\n        };\n        FullTextDocument.prototype.update = function (event, version) {\n            this._content = event.text;\n            this._version = version;\n            this._lineOffsets = undefined;\n        };\n        FullTextDocument.prototype.getLineOffsets = function () {\n            if (this._lineOffsets === undefined) {\n                var lineOffsets = [];\n                var text = this._content;\n                var isLineStart = true;\n                for (var i = 0; i < text.length; i++) {\n                    if (isLineStart) {\n                        lineOffsets.push(i);\n                        isLineStart = false;\n                    }\n                    var ch = text.charAt(i);\n                    isLineStart = (ch === '\\r' || ch === '\\n');\n                    if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                        i++;\n                    }\n                }\n                if (isLineStart && text.length > 0) {\n                    lineOffsets.push(text.length);\n                }\n                this._lineOffsets = lineOffsets;\n            }\n            return this._lineOffsets;\n        };\n        FullTextDocument.prototype.positionAt = function (offset) {\n            offset = Math.max(Math.min(offset, this._content.length), 0);\n            var lineOffsets = this.getLineOffsets();\n            var low = 0, high = lineOffsets.length;\n            if (high === 0) {\n                return Position.create(0, offset);\n            }\n            while (low < high) {\n                var mid = Math.floor((low + high) / 2);\n                if (lineOffsets[mid] > offset) {\n                    high = mid;\n                }\n                else {\n                    low = mid + 1;\n                }\n            }\n            // low is the least x for which the line offset is larger than the current offset\n            // or array.length if no line offset is larger than the current offset\n            var line = low - 1;\n            return Position.create(line, offset - lineOffsets[line]);\n        };\n        FullTextDocument.prototype.offsetAt = function (position) {\n            var lineOffsets = this.getLineOffsets();\n            if (position.line >= lineOffsets.length) {\n                return this._content.length;\n            }\n            else if (position.line < 0) {\n                return 0;\n            }\n            var lineOffset = lineOffsets[position.line];\n            var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n            return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n        };\n        Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n            get: function () {\n                return this.getLineOffsets().length;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return FullTextDocument;\n    }());\n    var Is;\n    (function (Is) {\n        var toString = Object.prototype.toString;\n        function defined(value) {\n            return typeof value !== 'undefined';\n        }\n        Is.defined = defined;\n        function undefined(value) {\n            return typeof value === 'undefined';\n        }\n        Is.undefined = undefined;\n        function boolean(value) {\n            return value === true || value === false;\n        }\n        Is.boolean = boolean;\n        function string(value) {\n            return toString.call(value) === '[object String]';\n        }\n        Is.string = string;\n        function number(value) {\n            return toString.call(value) === '[object Number]';\n        }\n        Is.number = number;\n        function numberRange(value, min, max) {\n            return toString.call(value) === '[object Number]' && min <= value && value <= max;\n        }\n        Is.numberRange = numberRange;\n        function integer(value) {\n            return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n        }\n        Is.integer = integer;\n        function uinteger(value) {\n            return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n        }\n        Is.uinteger = uinteger;\n        function func(value) {\n            return toString.call(value) === '[object Function]';\n        }\n        Is.func = func;\n        function objectLiteral(value) {\n            // Strictly speaking class instances pass this check as well. Since the LSP\n            // doesn't use classes we ignore this for now. If we do we need to add something\n            // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n            return value !== null && typeof value === 'object';\n        }\n        Is.objectLiteral = objectLiteral;\n        function typedArray(value, check) {\n            return Array.isArray(value) && value.every(check);\n        }\n        Is.typedArray = typedArray;\n    })(Is || (Is = {}));\n});\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProtocolNotificationType = exports.ProtocolNotificationType0 = exports.ProtocolRequestType = exports.ProtocolRequestType0 = exports.RegistrationType = exports.MessageDirection = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nvar MessageDirection;\n(function (MessageDirection) {\n    MessageDirection[\"clientToServer\"] = \"clientToServer\";\n    MessageDirection[\"serverToClient\"] = \"serverToClient\";\n    MessageDirection[\"both\"] = \"both\";\n})(MessageDirection || (exports.MessageDirection = MessageDirection = {}));\nclass RegistrationType {\n    constructor(method) {\n        this.method = method;\n    }\n}\nexports.RegistrationType = RegistrationType;\nclass ProtocolRequestType0 extends vscode_jsonrpc_1.RequestType0 {\n    constructor(method) {\n        super(method);\n    }\n}\nexports.ProtocolRequestType0 = ProtocolRequestType0;\nclass ProtocolRequestType extends vscode_jsonrpc_1.RequestType {\n    constructor(method) {\n        super(method, vscode_jsonrpc_1.ParameterStructures.byName);\n    }\n}\nexports.ProtocolRequestType = ProtocolRequestType;\nclass ProtocolNotificationType0 extends vscode_jsonrpc_1.NotificationType0 {\n    constructor(method) {\n        super(method);\n    }\n}\nexports.ProtocolNotificationType0 = ProtocolNotificationType0;\nclass ProtocolNotificationType extends vscode_jsonrpc_1.NotificationType {\n    constructor(method) {\n        super(method, vscode_jsonrpc_1.ParameterStructures.byName);\n    }\n}\nexports.ProtocolNotificationType = ProtocolNotificationType;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.objectLiteral = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\nfunction typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n}\nexports.typedArray = typedArray;\nfunction objectLiteral(value) {\n    // Strictly speaking class instances pass this check as well. Since the LSP\n    // doesn't use classes we ignore this for now. If we do we need to add something\n    // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n    return value !== null && typeof value === 'object';\n}\nexports.objectLiteral = objectLiteral;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImplementationRequest = void 0;\nconst messages_1 = require(\"./messages\");\n// @ts-ignore: to avoid inlining LocationLink as dynamic import\nlet __noDynamicImport;\n/**\n * A request to resolve the implementation locations of a symbol at a given text\n * document position. The request's parameter is of type {@link TextDocumentPositionParams}\n * the response is of type {@link Definition} or a Thenable that resolves to such.\n */\nvar ImplementationRequest;\n(function (ImplementationRequest) {\n    ImplementationRequest.method = 'textDocument/implementation';\n    ImplementationRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    ImplementationRequest.type = new messages_1.ProtocolRequestType(ImplementationRequest.method);\n})(ImplementationRequest || (exports.ImplementationRequest = ImplementationRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeDefinitionRequest = void 0;\nconst messages_1 = require(\"./messages\");\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\nlet __noDynamicImport;\n/**\n * A request to resolve the type definition locations of a symbol at a given text\n * document position. The request's parameter is of type {@link TextDocumentPositionParams}\n * the response is of type {@link Definition} or a Thenable that resolves to such.\n */\nvar TypeDefinitionRequest;\n(function (TypeDefinitionRequest) {\n    TypeDefinitionRequest.method = 'textDocument/typeDefinition';\n    TypeDefinitionRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    TypeDefinitionRequest.type = new messages_1.ProtocolRequestType(TypeDefinitionRequest.method);\n})(TypeDefinitionRequest || (exports.TypeDefinitionRequest = TypeDefinitionRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\n */\nvar WorkspaceFoldersRequest;\n(function (WorkspaceFoldersRequest) {\n    WorkspaceFoldersRequest.method = 'workspace/workspaceFolders';\n    WorkspaceFoldersRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    WorkspaceFoldersRequest.type = new messages_1.ProtocolRequestType0(WorkspaceFoldersRequest.method);\n})(WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = WorkspaceFoldersRequest = {}));\n/**\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\n * folder configuration changes.\n */\nvar DidChangeWorkspaceFoldersNotification;\n(function (DidChangeWorkspaceFoldersNotification) {\n    DidChangeWorkspaceFoldersNotification.method = 'workspace/didChangeWorkspaceFolders';\n    DidChangeWorkspaceFoldersNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidChangeWorkspaceFoldersNotification.type = new messages_1.ProtocolNotificationType(DidChangeWorkspaceFoldersNotification.method);\n})(DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = DidChangeWorkspaceFoldersNotification = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigurationRequest = void 0;\nconst messages_1 = require(\"./messages\");\n//---- Get Configuration request ----\n/**\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\n * configuration setting.\n *\n * This pull model replaces the old push model were the client signaled configuration change via an\n * event. If the server still needs to react to configuration changes (since the server caches the\n * result of `workspace/configuration` requests) the server should register for an empty configuration\n * change event and empty the cache if such an event is received.\n */\nvar ConfigurationRequest;\n(function (ConfigurationRequest) {\n    ConfigurationRequest.method = 'workspace/configuration';\n    ConfigurationRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    ConfigurationRequest.type = new messages_1.ProtocolRequestType(ConfigurationRequest.method);\n})(ConfigurationRequest || (exports.ConfigurationRequest = ConfigurationRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorPresentationRequest = exports.DocumentColorRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to list all color symbols found in a given text document. The request's\n * parameter is of type {@link DocumentColorParams} the\n * response is of type {@link ColorInformation ColorInformation[]} or a Thenable\n * that resolves to such.\n */\nvar DocumentColorRequest;\n(function (DocumentColorRequest) {\n    DocumentColorRequest.method = 'textDocument/documentColor';\n    DocumentColorRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentColorRequest.type = new messages_1.ProtocolRequestType(DocumentColorRequest.method);\n})(DocumentColorRequest || (exports.DocumentColorRequest = DocumentColorRequest = {}));\n/**\n * A request to list all presentation for a color. The request's\n * parameter is of type {@link ColorPresentationParams} the\n * response is of type {@link ColorInformation ColorInformation[]} or a Thenable\n * that resolves to such.\n */\nvar ColorPresentationRequest;\n(function (ColorPresentationRequest) {\n    ColorPresentationRequest.method = 'textDocument/colorPresentation';\n    ColorPresentationRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    ColorPresentationRequest.type = new messages_1.ProtocolRequestType(ColorPresentationRequest.method);\n})(ColorPresentationRequest || (exports.ColorPresentationRequest = ColorPresentationRequest = {}));\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FoldingRangeRefreshRequest = exports.FoldingRangeRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide folding ranges in a document. The request's\n * parameter is of type {@link FoldingRangeParams}, the\n * response is of type {@link FoldingRangeList} or a Thenable\n * that resolves to such.\n */\nvar FoldingRangeRequest;\n(function (FoldingRangeRequest) {\n    FoldingRangeRequest.method = 'textDocument/foldingRange';\n    FoldingRangeRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    FoldingRangeRequest.type = new messages_1.ProtocolRequestType(FoldingRangeRequest.method);\n})(FoldingRangeRequest || (exports.FoldingRangeRequest = FoldingRangeRequest = {}));\n/**\n * @since 3.18.0\n * @proposed\n */\nvar FoldingRangeRefreshRequest;\n(function (FoldingRangeRefreshRequest) {\n    FoldingRangeRefreshRequest.method = `workspace/foldingRange/refresh`;\n    FoldingRangeRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    FoldingRangeRefreshRequest.type = new messages_1.ProtocolRequestType0(FoldingRangeRefreshRequest.method);\n})(FoldingRangeRefreshRequest || (exports.FoldingRangeRefreshRequest = FoldingRangeRefreshRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeclarationRequest = void 0;\nconst messages_1 = require(\"./messages\");\n// @ts-ignore: to avoid inlining LocationLink as dynamic import\nlet __noDynamicImport;\n/**\n * A request to resolve the type definition locations of a symbol at a given text\n * document position. The request's parameter is of type {@link TextDocumentPositionParams}\n * the response is of type {@link Declaration} or a typed array of {@link DeclarationLink}\n * or a Thenable that resolves to such.\n */\nvar DeclarationRequest;\n(function (DeclarationRequest) {\n    DeclarationRequest.method = 'textDocument/declaration';\n    DeclarationRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DeclarationRequest.type = new messages_1.ProtocolRequestType(DeclarationRequest.method);\n})(DeclarationRequest || (exports.DeclarationRequest = DeclarationRequest = {}));\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SelectionRangeRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide selection ranges in a document. The request's\n * parameter is of type {@link SelectionRangeParams}, the\n * response is of type {@link SelectionRange SelectionRange[]} or a Thenable\n * that resolves to such.\n */\nvar SelectionRangeRequest;\n(function (SelectionRangeRequest) {\n    SelectionRangeRequest.method = 'textDocument/selectionRange';\n    SelectionRangeRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    SelectionRangeRequest.type = new messages_1.ProtocolRequestType(SelectionRangeRequest.method);\n})(SelectionRangeRequest || (exports.SelectionRangeRequest = SelectionRangeRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nconst messages_1 = require(\"./messages\");\nvar WorkDoneProgress;\n(function (WorkDoneProgress) {\n    WorkDoneProgress.type = new vscode_jsonrpc_1.ProgressType();\n    function is(value) {\n        return value === WorkDoneProgress.type;\n    }\n    WorkDoneProgress.is = is;\n})(WorkDoneProgress || (exports.WorkDoneProgress = WorkDoneProgress = {}));\n/**\n * The `window/workDoneProgress/create` request is sent from the server to the client to initiate progress\n * reporting from the server.\n */\nvar WorkDoneProgressCreateRequest;\n(function (WorkDoneProgressCreateRequest) {\n    WorkDoneProgressCreateRequest.method = 'window/workDoneProgress/create';\n    WorkDoneProgressCreateRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    WorkDoneProgressCreateRequest.type = new messages_1.ProtocolRequestType(WorkDoneProgressCreateRequest.method);\n})(WorkDoneProgressCreateRequest || (exports.WorkDoneProgressCreateRequest = WorkDoneProgressCreateRequest = {}));\n/**\n * The `window/workDoneProgress/cancel` notification is sent from  the client to the server to cancel a progress\n * initiated on the server side.\n */\nvar WorkDoneProgressCancelNotification;\n(function (WorkDoneProgressCancelNotification) {\n    WorkDoneProgressCancelNotification.method = 'window/workDoneProgress/cancel';\n    WorkDoneProgressCancelNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    WorkDoneProgressCancelNotification.type = new messages_1.ProtocolNotificationType(WorkDoneProgressCancelNotification.method);\n})(WorkDoneProgressCancelNotification || (exports.WorkDoneProgressCancelNotification = WorkDoneProgressCancelNotification = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) TypeFox, Microsoft and others. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.CallHierarchyPrepareRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to result a `CallHierarchyItem` in a document at a given position.\n * Can be used as an input to an incoming or outgoing call hierarchy.\n *\n * @since 3.16.0\n */\nvar CallHierarchyPrepareRequest;\n(function (CallHierarchyPrepareRequest) {\n    CallHierarchyPrepareRequest.method = 'textDocument/prepareCallHierarchy';\n    CallHierarchyPrepareRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CallHierarchyPrepareRequest.type = new messages_1.ProtocolRequestType(CallHierarchyPrepareRequest.method);\n})(CallHierarchyPrepareRequest || (exports.CallHierarchyPrepareRequest = CallHierarchyPrepareRequest = {}));\n/**\n * A request to resolve the incoming calls for a given `CallHierarchyItem`.\n *\n * @since 3.16.0\n */\nvar CallHierarchyIncomingCallsRequest;\n(function (CallHierarchyIncomingCallsRequest) {\n    CallHierarchyIncomingCallsRequest.method = 'callHierarchy/incomingCalls';\n    CallHierarchyIncomingCallsRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CallHierarchyIncomingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyIncomingCallsRequest.method);\n})(CallHierarchyIncomingCallsRequest || (exports.CallHierarchyIncomingCallsRequest = CallHierarchyIncomingCallsRequest = {}));\n/**\n * A request to resolve the outgoing calls for a given `CallHierarchyItem`.\n *\n * @since 3.16.0\n */\nvar CallHierarchyOutgoingCallsRequest;\n(function (CallHierarchyOutgoingCallsRequest) {\n    CallHierarchyOutgoingCallsRequest.method = 'callHierarchy/outgoingCalls';\n    CallHierarchyOutgoingCallsRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CallHierarchyOutgoingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyOutgoingCallsRequest.method);\n})(CallHierarchyOutgoingCallsRequest || (exports.CallHierarchyOutgoingCallsRequest = CallHierarchyOutgoingCallsRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.SemanticTokensRegistrationType = exports.TokenFormat = void 0;\nconst messages_1 = require(\"./messages\");\n//------- 'textDocument/semanticTokens' -----\nvar TokenFormat;\n(function (TokenFormat) {\n    TokenFormat.Relative = 'relative';\n})(TokenFormat || (exports.TokenFormat = TokenFormat = {}));\nvar SemanticTokensRegistrationType;\n(function (SemanticTokensRegistrationType) {\n    SemanticTokensRegistrationType.method = 'textDocument/semanticTokens';\n    SemanticTokensRegistrationType.type = new messages_1.RegistrationType(SemanticTokensRegistrationType.method);\n})(SemanticTokensRegistrationType || (exports.SemanticTokensRegistrationType = SemanticTokensRegistrationType = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRequest;\n(function (SemanticTokensRequest) {\n    SemanticTokensRequest.method = 'textDocument/semanticTokens/full';\n    SemanticTokensRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    SemanticTokensRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRequest.method);\n    SemanticTokensRequest.registrationMethod = SemanticTokensRegistrationType.method;\n})(SemanticTokensRequest || (exports.SemanticTokensRequest = SemanticTokensRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensDeltaRequest;\n(function (SemanticTokensDeltaRequest) {\n    SemanticTokensDeltaRequest.method = 'textDocument/semanticTokens/full/delta';\n    SemanticTokensDeltaRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    SemanticTokensDeltaRequest.type = new messages_1.ProtocolRequestType(SemanticTokensDeltaRequest.method);\n    SemanticTokensDeltaRequest.registrationMethod = SemanticTokensRegistrationType.method;\n})(SemanticTokensDeltaRequest || (exports.SemanticTokensDeltaRequest = SemanticTokensDeltaRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRangeRequest;\n(function (SemanticTokensRangeRequest) {\n    SemanticTokensRangeRequest.method = 'textDocument/semanticTokens/range';\n    SemanticTokensRangeRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    SemanticTokensRangeRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRangeRequest.method);\n    SemanticTokensRangeRequest.registrationMethod = SemanticTokensRegistrationType.method;\n})(SemanticTokensRangeRequest || (exports.SemanticTokensRangeRequest = SemanticTokensRangeRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRefreshRequest;\n(function (SemanticTokensRefreshRequest) {\n    SemanticTokensRefreshRequest.method = `workspace/semanticTokens/refresh`;\n    SemanticTokensRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    SemanticTokensRefreshRequest.type = new messages_1.ProtocolRequestType0(SemanticTokensRefreshRequest.method);\n})(SemanticTokensRefreshRequest || (exports.SemanticTokensRefreshRequest = SemanticTokensRefreshRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShowDocumentRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to show a document. This request might open an\n * external program depending on the value of the URI to open.\n * For example a request to open `https://code.visualstudio.com/`\n * will very likely open the URI in a WEB browser.\n *\n * @since 3.16.0\n*/\nvar ShowDocumentRequest;\n(function (ShowDocumentRequest) {\n    ShowDocumentRequest.method = 'window/showDocument';\n    ShowDocumentRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    ShowDocumentRequest.type = new messages_1.ProtocolRequestType(ShowDocumentRequest.method);\n})(ShowDocumentRequest || (exports.ShowDocumentRequest = ShowDocumentRequest = {}));\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinkedEditingRangeRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide ranges that can be edited together.\n *\n * @since 3.16.0\n */\nvar LinkedEditingRangeRequest;\n(function (LinkedEditingRangeRequest) {\n    LinkedEditingRangeRequest.method = 'textDocument/linkedEditingRange';\n    LinkedEditingRangeRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    LinkedEditingRangeRequest.type = new messages_1.ProtocolRequestType(LinkedEditingRangeRequest.method);\n})(LinkedEditingRangeRequest || (exports.LinkedEditingRangeRequest = LinkedEditingRangeRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.DidRenameFilesNotification = exports.WillRenameFilesRequest = exports.DidCreateFilesNotification = exports.WillCreateFilesRequest = exports.FileOperationPatternKind = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A pattern kind describing if a glob pattern matches a file a folder or\n * both.\n *\n * @since 3.16.0\n */\nvar FileOperationPatternKind;\n(function (FileOperationPatternKind) {\n    /**\n     * The pattern matches a file only.\n     */\n    FileOperationPatternKind.file = 'file';\n    /**\n     * The pattern matches a folder only.\n     */\n    FileOperationPatternKind.folder = 'folder';\n})(FileOperationPatternKind || (exports.FileOperationPatternKind = FileOperationPatternKind = {}));\n/**\n * The will create files request is sent from the client to the server before files are actually\n * created as long as the creation is triggered from within the client.\n *\n * The request can return a `WorkspaceEdit` which will be applied to workspace before the\n * files are created. Hence the `WorkspaceEdit` can not manipulate the content of the file\n * to be created.\n *\n * @since 3.16.0\n */\nvar WillCreateFilesRequest;\n(function (WillCreateFilesRequest) {\n    WillCreateFilesRequest.method = 'workspace/willCreateFiles';\n    WillCreateFilesRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WillCreateFilesRequest.type = new messages_1.ProtocolRequestType(WillCreateFilesRequest.method);\n})(WillCreateFilesRequest || (exports.WillCreateFilesRequest = WillCreateFilesRequest = {}));\n/**\n * The did create files notification is sent from the client to the server when\n * files were created from within the client.\n *\n * @since 3.16.0\n */\nvar DidCreateFilesNotification;\n(function (DidCreateFilesNotification) {\n    DidCreateFilesNotification.method = 'workspace/didCreateFiles';\n    DidCreateFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidCreateFilesNotification.type = new messages_1.ProtocolNotificationType(DidCreateFilesNotification.method);\n})(DidCreateFilesNotification || (exports.DidCreateFilesNotification = DidCreateFilesNotification = {}));\n/**\n * The will rename files request is sent from the client to the server before files are actually\n * renamed as long as the rename is triggered from within the client.\n *\n * @since 3.16.0\n */\nvar WillRenameFilesRequest;\n(function (WillRenameFilesRequest) {\n    WillRenameFilesRequest.method = 'workspace/willRenameFiles';\n    WillRenameFilesRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WillRenameFilesRequest.type = new messages_1.ProtocolRequestType(WillRenameFilesRequest.method);\n})(WillRenameFilesRequest || (exports.WillRenameFilesRequest = WillRenameFilesRequest = {}));\n/**\n * The did rename files notification is sent from the client to the server when\n * files were renamed from within the client.\n *\n * @since 3.16.0\n */\nvar DidRenameFilesNotification;\n(function (DidRenameFilesNotification) {\n    DidRenameFilesNotification.method = 'workspace/didRenameFiles';\n    DidRenameFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidRenameFilesNotification.type = new messages_1.ProtocolNotificationType(DidRenameFilesNotification.method);\n})(DidRenameFilesNotification || (exports.DidRenameFilesNotification = DidRenameFilesNotification = {}));\n/**\n * The will delete files request is sent from the client to the server before files are actually\n * deleted as long as the deletion is triggered from within the client.\n *\n * @since 3.16.0\n */\nvar DidDeleteFilesNotification;\n(function (DidDeleteFilesNotification) {\n    DidDeleteFilesNotification.method = 'workspace/didDeleteFiles';\n    DidDeleteFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidDeleteFilesNotification.type = new messages_1.ProtocolNotificationType(DidDeleteFilesNotification.method);\n})(DidDeleteFilesNotification || (exports.DidDeleteFilesNotification = DidDeleteFilesNotification = {}));\n/**\n * The did delete files notification is sent from the client to the server when\n * files were deleted from within the client.\n *\n * @since 3.16.0\n */\nvar WillDeleteFilesRequest;\n(function (WillDeleteFilesRequest) {\n    WillDeleteFilesRequest.method = 'workspace/willDeleteFiles';\n    WillDeleteFilesRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WillDeleteFilesRequest.type = new messages_1.ProtocolRequestType(WillDeleteFilesRequest.method);\n})(WillDeleteFilesRequest || (exports.WillDeleteFilesRequest = WillDeleteFilesRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * Moniker uniqueness level to define scope of the moniker.\n *\n * @since 3.16.0\n */\nvar UniquenessLevel;\n(function (UniquenessLevel) {\n    /**\n     * The moniker is only unique inside a document\n     */\n    UniquenessLevel.document = 'document';\n    /**\n     * The moniker is unique inside a project for which a dump got created\n     */\n    UniquenessLevel.project = 'project';\n    /**\n     * The moniker is unique inside the group to which a project belongs\n     */\n    UniquenessLevel.group = 'group';\n    /**\n     * The moniker is unique inside the moniker scheme.\n     */\n    UniquenessLevel.scheme = 'scheme';\n    /**\n     * The moniker is globally unique\n     */\n    UniquenessLevel.global = 'global';\n})(UniquenessLevel || (exports.UniquenessLevel = UniquenessLevel = {}));\n/**\n * The moniker kind.\n *\n * @since 3.16.0\n */\nvar MonikerKind;\n(function (MonikerKind) {\n    /**\n     * The moniker represent a symbol that is imported into a project\n     */\n    MonikerKind.$import = 'import';\n    /**\n     * The moniker represents a symbol that is exported from a project\n     */\n    MonikerKind.$export = 'export';\n    /**\n     * The moniker represents a symbol that is local to a project (e.g. a local\n     * variable of a function, a class not visible outside the project, ...)\n     */\n    MonikerKind.local = 'local';\n})(MonikerKind || (exports.MonikerKind = MonikerKind = {}));\n/**\n * A request to get the moniker of a symbol at a given text document position.\n * The request parameter is of type {@link TextDocumentPositionParams}.\n * The response is of type {@link Moniker Moniker[]} or `null`.\n */\nvar MonikerRequest;\n(function (MonikerRequest) {\n    MonikerRequest.method = 'textDocument/moniker';\n    MonikerRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    MonikerRequest.type = new messages_1.ProtocolRequestType(MonikerRequest.method);\n})(MonikerRequest || (exports.MonikerRequest = MonikerRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) TypeFox, Microsoft and others. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeHierarchySubtypesRequest = exports.TypeHierarchySupertypesRequest = exports.TypeHierarchyPrepareRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to result a `TypeHierarchyItem` in a document at a given position.\n * Can be used as an input to a subtypes or supertypes type hierarchy.\n *\n * @since 3.17.0\n */\nvar TypeHierarchyPrepareRequest;\n(function (TypeHierarchyPrepareRequest) {\n    TypeHierarchyPrepareRequest.method = 'textDocument/prepareTypeHierarchy';\n    TypeHierarchyPrepareRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    TypeHierarchyPrepareRequest.type = new messages_1.ProtocolRequestType(TypeHierarchyPrepareRequest.method);\n})(TypeHierarchyPrepareRequest || (exports.TypeHierarchyPrepareRequest = TypeHierarchyPrepareRequest = {}));\n/**\n * A request to resolve the supertypes for a given `TypeHierarchyItem`.\n *\n * @since 3.17.0\n */\nvar TypeHierarchySupertypesRequest;\n(function (TypeHierarchySupertypesRequest) {\n    TypeHierarchySupertypesRequest.method = 'typeHierarchy/supertypes';\n    TypeHierarchySupertypesRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    TypeHierarchySupertypesRequest.type = new messages_1.ProtocolRequestType(TypeHierarchySupertypesRequest.method);\n})(TypeHierarchySupertypesRequest || (exports.TypeHierarchySupertypesRequest = TypeHierarchySupertypesRequest = {}));\n/**\n * A request to resolve the subtypes for a given `TypeHierarchyItem`.\n *\n * @since 3.17.0\n */\nvar TypeHierarchySubtypesRequest;\n(function (TypeHierarchySubtypesRequest) {\n    TypeHierarchySubtypesRequest.method = 'typeHierarchy/subtypes';\n    TypeHierarchySubtypesRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    TypeHierarchySubtypesRequest.type = new messages_1.ProtocolRequestType(TypeHierarchySubtypesRequest.method);\n})(TypeHierarchySubtypesRequest || (exports.TypeHierarchySubtypesRequest = TypeHierarchySubtypesRequest = {}));\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlineValueRefreshRequest = exports.InlineValueRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide inline values in a document. The request's parameter is of\n * type {@link InlineValueParams}, the response is of type\n * {@link InlineValue InlineValue[]} or a Thenable that resolves to such.\n *\n * @since 3.17.0\n */\nvar InlineValueRequest;\n(function (InlineValueRequest) {\n    InlineValueRequest.method = 'textDocument/inlineValue';\n    InlineValueRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    InlineValueRequest.type = new messages_1.ProtocolRequestType(InlineValueRequest.method);\n})(InlineValueRequest || (exports.InlineValueRequest = InlineValueRequest = {}));\n/**\n * @since 3.17.0\n */\nvar InlineValueRefreshRequest;\n(function (InlineValueRefreshRequest) {\n    InlineValueRefreshRequest.method = `workspace/inlineValue/refresh`;\n    InlineValueRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    InlineValueRefreshRequest.type = new messages_1.ProtocolRequestType0(InlineValueRefreshRequest.method);\n})(InlineValueRefreshRequest || (exports.InlineValueRefreshRequest = InlineValueRefreshRequest = {}));\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlayHintRefreshRequest = exports.InlayHintResolveRequest = exports.InlayHintRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide inlay hints in a document. The request's parameter is of\n * type {@link InlayHintsParams}, the response is of type\n * {@link InlayHint InlayHint[]} or a Thenable that resolves to such.\n *\n * @since 3.17.0\n */\nvar InlayHintRequest;\n(function (InlayHintRequest) {\n    InlayHintRequest.method = 'textDocument/inlayHint';\n    InlayHintRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    InlayHintRequest.type = new messages_1.ProtocolRequestType(InlayHintRequest.method);\n})(InlayHintRequest || (exports.InlayHintRequest = InlayHintRequest = {}));\n/**\n * A request to resolve additional properties for an inlay hint.\n * The request's parameter is of type {@link InlayHint}, the response is\n * of type {@link InlayHint} or a Thenable that resolves to such.\n *\n * @since 3.17.0\n */\nvar InlayHintResolveRequest;\n(function (InlayHintResolveRequest) {\n    InlayHintResolveRequest.method = 'inlayHint/resolve';\n    InlayHintResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    InlayHintResolveRequest.type = new messages_1.ProtocolRequestType(InlayHintResolveRequest.method);\n})(InlayHintResolveRequest || (exports.InlayHintResolveRequest = InlayHintResolveRequest = {}));\n/**\n * @since 3.17.0\n */\nvar InlayHintRefreshRequest;\n(function (InlayHintRefreshRequest) {\n    InlayHintRefreshRequest.method = `workspace/inlayHint/refresh`;\n    InlayHintRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    InlayHintRefreshRequest.type = new messages_1.ProtocolRequestType0(InlayHintRefreshRequest.method);\n})(InlayHintRefreshRequest || (exports.InlayHintRefreshRequest = InlayHintRefreshRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiagnosticRefreshRequest = exports.WorkspaceDiagnosticRequest = exports.DocumentDiagnosticRequest = exports.DocumentDiagnosticReportKind = exports.DiagnosticServerCancellationData = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nconst Is = require(\"./utils/is\");\nconst messages_1 = require(\"./messages\");\n/**\n * @since 3.17.0\n */\nvar DiagnosticServerCancellationData;\n(function (DiagnosticServerCancellationData) {\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.boolean(candidate.retriggerRequest);\n    }\n    DiagnosticServerCancellationData.is = is;\n})(DiagnosticServerCancellationData || (exports.DiagnosticServerCancellationData = DiagnosticServerCancellationData = {}));\n/**\n * The document diagnostic report kinds.\n *\n * @since 3.17.0\n */\nvar DocumentDiagnosticReportKind;\n(function (DocumentDiagnosticReportKind) {\n    /**\n     * A diagnostic report with a full\n     * set of problems.\n     */\n    DocumentDiagnosticReportKind.Full = 'full';\n    /**\n     * A report indicating that the last\n     * returned report is still accurate.\n     */\n    DocumentDiagnosticReportKind.Unchanged = 'unchanged';\n})(DocumentDiagnosticReportKind || (exports.DocumentDiagnosticReportKind = DocumentDiagnosticReportKind = {}));\n/**\n * The document diagnostic request definition.\n *\n * @since 3.17.0\n */\nvar DocumentDiagnosticRequest;\n(function (DocumentDiagnosticRequest) {\n    DocumentDiagnosticRequest.method = 'textDocument/diagnostic';\n    DocumentDiagnosticRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentDiagnosticRequest.type = new messages_1.ProtocolRequestType(DocumentDiagnosticRequest.method);\n    DocumentDiagnosticRequest.partialResult = new vscode_jsonrpc_1.ProgressType();\n})(DocumentDiagnosticRequest || (exports.DocumentDiagnosticRequest = DocumentDiagnosticRequest = {}));\n/**\n * The workspace diagnostic request definition.\n *\n * @since 3.17.0\n */\nvar WorkspaceDiagnosticRequest;\n(function (WorkspaceDiagnosticRequest) {\n    WorkspaceDiagnosticRequest.method = 'workspace/diagnostic';\n    WorkspaceDiagnosticRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WorkspaceDiagnosticRequest.type = new messages_1.ProtocolRequestType(WorkspaceDiagnosticRequest.method);\n    WorkspaceDiagnosticRequest.partialResult = new vscode_jsonrpc_1.ProgressType();\n})(WorkspaceDiagnosticRequest || (exports.WorkspaceDiagnosticRequest = WorkspaceDiagnosticRequest = {}));\n/**\n * The diagnostic refresh request definition.\n *\n * @since 3.17.0\n */\nvar DiagnosticRefreshRequest;\n(function (DiagnosticRefreshRequest) {\n    DiagnosticRefreshRequest.method = `workspace/diagnostic/refresh`;\n    DiagnosticRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    DiagnosticRefreshRequest.type = new messages_1.ProtocolRequestType0(DiagnosticRefreshRequest.method);\n})(DiagnosticRefreshRequest || (exports.DiagnosticRefreshRequest = DiagnosticRefreshRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DidCloseNotebookDocumentNotification = exports.DidSaveNotebookDocumentNotification = exports.DidChangeNotebookDocumentNotification = exports.NotebookCellArrayChange = exports.DidOpenNotebookDocumentNotification = exports.NotebookDocumentSyncRegistrationType = exports.NotebookDocument = exports.NotebookCell = exports.ExecutionSummary = exports.NotebookCellKind = void 0;\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nconst Is = require(\"./utils/is\");\nconst messages_1 = require(\"./messages\");\n/**\n * A notebook cell kind.\n *\n * @since 3.17.0\n */\nvar NotebookCellKind;\n(function (NotebookCellKind) {\n    /**\n     * A markup-cell is formatted source that is used for display.\n     */\n    NotebookCellKind.Markup = 1;\n    /**\n     * A code-cell is source code.\n     */\n    NotebookCellKind.Code = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    NotebookCellKind.is = is;\n})(NotebookCellKind || (exports.NotebookCellKind = NotebookCellKind = {}));\nvar ExecutionSummary;\n(function (ExecutionSummary) {\n    function create(executionOrder, success) {\n        const result = { executionOrder };\n        if (success === true || success === false) {\n            result.success = success;\n        }\n        return result;\n    }\n    ExecutionSummary.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && vscode_languageserver_types_1.uinteger.is(candidate.executionOrder) && (candidate.success === undefined || Is.boolean(candidate.success));\n    }\n    ExecutionSummary.is = is;\n    function equals(one, other) {\n        if (one === other) {\n            return true;\n        }\n        if (one === null || one === undefined || other === null || other === undefined) {\n            return false;\n        }\n        return one.executionOrder === other.executionOrder && one.success === other.success;\n    }\n    ExecutionSummary.equals = equals;\n})(ExecutionSummary || (exports.ExecutionSummary = ExecutionSummary = {}));\nvar NotebookCell;\n(function (NotebookCell) {\n    function create(kind, document) {\n        return { kind, document };\n    }\n    NotebookCell.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && NotebookCellKind.is(candidate.kind) && vscode_languageserver_types_1.DocumentUri.is(candidate.document) &&\n            (candidate.metadata === undefined || Is.objectLiteral(candidate.metadata));\n    }\n    NotebookCell.is = is;\n    function diff(one, two) {\n        const result = new Set();\n        if (one.document !== two.document) {\n            result.add('document');\n        }\n        if (one.kind !== two.kind) {\n            result.add('kind');\n        }\n        if (one.executionSummary !== two.executionSummary) {\n            result.add('executionSummary');\n        }\n        if ((one.metadata !== undefined || two.metadata !== undefined) && !equalsMetadata(one.metadata, two.metadata)) {\n            result.add('metadata');\n        }\n        if ((one.executionSummary !== undefined || two.executionSummary !== undefined) && !ExecutionSummary.equals(one.executionSummary, two.executionSummary)) {\n            result.add('executionSummary');\n        }\n        return result;\n    }\n    NotebookCell.diff = diff;\n    function equalsMetadata(one, other) {\n        if (one === other) {\n            return true;\n        }\n        if (one === null || one === undefined || other === null || other === undefined) {\n            return false;\n        }\n        if (typeof one !== typeof other) {\n            return false;\n        }\n        if (typeof one !== 'object') {\n            return false;\n        }\n        const oneArray = Array.isArray(one);\n        const otherArray = Array.isArray(other);\n        if (oneArray !== otherArray) {\n            return false;\n        }\n        if (oneArray && otherArray) {\n            if (one.length !== other.length) {\n                return false;\n            }\n            for (let i = 0; i < one.length; i++) {\n                if (!equalsMetadata(one[i], other[i])) {\n                    return false;\n                }\n            }\n        }\n        if (Is.objectLiteral(one) && Is.objectLiteral(other)) {\n            const oneKeys = Object.keys(one);\n            const otherKeys = Object.keys(other);\n            if (oneKeys.length !== otherKeys.length) {\n                return false;\n            }\n            oneKeys.sort();\n            otherKeys.sort();\n            if (!equalsMetadata(oneKeys, otherKeys)) {\n                return false;\n            }\n            for (let i = 0; i < oneKeys.length; i++) {\n                const prop = oneKeys[i];\n                if (!equalsMetadata(one[prop], other[prop])) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n})(NotebookCell || (exports.NotebookCell = NotebookCell = {}));\nvar NotebookDocument;\n(function (NotebookDocument) {\n    function create(uri, notebookType, version, cells) {\n        return { uri, notebookType, version, cells };\n    }\n    NotebookDocument.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.uri) && vscode_languageserver_types_1.integer.is(candidate.version) && Is.typedArray(candidate.cells, NotebookCell.is);\n    }\n    NotebookDocument.is = is;\n})(NotebookDocument || (exports.NotebookDocument = NotebookDocument = {}));\nvar NotebookDocumentSyncRegistrationType;\n(function (NotebookDocumentSyncRegistrationType) {\n    NotebookDocumentSyncRegistrationType.method = 'notebookDocument/sync';\n    NotebookDocumentSyncRegistrationType.messageDirection = messages_1.MessageDirection.clientToServer;\n    NotebookDocumentSyncRegistrationType.type = new messages_1.RegistrationType(NotebookDocumentSyncRegistrationType.method);\n})(NotebookDocumentSyncRegistrationType || (exports.NotebookDocumentSyncRegistrationType = NotebookDocumentSyncRegistrationType = {}));\n/**\n * A notification sent when a notebook opens.\n *\n * @since 3.17.0\n */\nvar DidOpenNotebookDocumentNotification;\n(function (DidOpenNotebookDocumentNotification) {\n    DidOpenNotebookDocumentNotification.method = 'notebookDocument/didOpen';\n    DidOpenNotebookDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidOpenNotebookDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenNotebookDocumentNotification.method);\n    DidOpenNotebookDocumentNotification.registrationMethod = NotebookDocumentSyncRegistrationType.method;\n})(DidOpenNotebookDocumentNotification || (exports.DidOpenNotebookDocumentNotification = DidOpenNotebookDocumentNotification = {}));\nvar NotebookCellArrayChange;\n(function (NotebookCellArrayChange) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && vscode_languageserver_types_1.uinteger.is(candidate.start) && vscode_languageserver_types_1.uinteger.is(candidate.deleteCount) && (candidate.cells === undefined || Is.typedArray(candidate.cells, NotebookCell.is));\n    }\n    NotebookCellArrayChange.is = is;\n    function create(start, deleteCount, cells) {\n        const result = { start, deleteCount };\n        if (cells !== undefined) {\n            result.cells = cells;\n        }\n        return result;\n    }\n    NotebookCellArrayChange.create = create;\n})(NotebookCellArrayChange || (exports.NotebookCellArrayChange = NotebookCellArrayChange = {}));\nvar DidChangeNotebookDocumentNotification;\n(function (DidChangeNotebookDocumentNotification) {\n    DidChangeNotebookDocumentNotification.method = 'notebookDocument/didChange';\n    DidChangeNotebookDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidChangeNotebookDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeNotebookDocumentNotification.method);\n    DidChangeNotebookDocumentNotification.registrationMethod = NotebookDocumentSyncRegistrationType.method;\n})(DidChangeNotebookDocumentNotification || (exports.DidChangeNotebookDocumentNotification = DidChangeNotebookDocumentNotification = {}));\n/**\n * A notification sent when a notebook document is saved.\n *\n * @since 3.17.0\n */\nvar DidSaveNotebookDocumentNotification;\n(function (DidSaveNotebookDocumentNotification) {\n    DidSaveNotebookDocumentNotification.method = 'notebookDocument/didSave';\n    DidSaveNotebookDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidSaveNotebookDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveNotebookDocumentNotification.method);\n    DidSaveNotebookDocumentNotification.registrationMethod = NotebookDocumentSyncRegistrationType.method;\n})(DidSaveNotebookDocumentNotification || (exports.DidSaveNotebookDocumentNotification = DidSaveNotebookDocumentNotification = {}));\n/**\n * A notification sent when a notebook closes.\n *\n * @since 3.17.0\n */\nvar DidCloseNotebookDocumentNotification;\n(function (DidCloseNotebookDocumentNotification) {\n    DidCloseNotebookDocumentNotification.method = 'notebookDocument/didClose';\n    DidCloseNotebookDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidCloseNotebookDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseNotebookDocumentNotification.method);\n    DidCloseNotebookDocumentNotification.registrationMethod = NotebookDocumentSyncRegistrationType.method;\n})(DidCloseNotebookDocumentNotification || (exports.DidCloseNotebookDocumentNotification = DidCloseNotebookDocumentNotification = {}));\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlineCompletionRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide inline completions in a document. The request's parameter is of\n * type {@link InlineCompletionParams}, the response is of type\n * {@link InlineCompletion InlineCompletion[]} or a Thenable that resolves to such.\n *\n * @since 3.18.0\n * @proposed\n */\nvar InlineCompletionRequest;\n(function (InlineCompletionRequest) {\n    InlineCompletionRequest.method = 'textDocument/inlineCompletion';\n    InlineCompletionRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    InlineCompletionRequest.type = new messages_1.ProtocolRequestType(InlineCompletionRequest.method);\n})(InlineCompletionRequest || (exports.InlineCompletionRequest = InlineCompletionRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkspaceSymbolRequest = exports.CodeActionResolveRequest = exports.CodeActionRequest = exports.DocumentSymbolRequest = exports.DocumentHighlightRequest = exports.ReferencesRequest = exports.DefinitionRequest = exports.SignatureHelpRequest = exports.SignatureHelpTriggerKind = exports.HoverRequest = exports.CompletionResolveRequest = exports.CompletionRequest = exports.CompletionTriggerKind = exports.PublishDiagnosticsNotification = exports.WatchKind = exports.RelativePattern = exports.FileChangeType = exports.DidChangeWatchedFilesNotification = exports.WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentNotification = exports.TextDocumentSaveReason = exports.DidSaveTextDocumentNotification = exports.DidCloseTextDocumentNotification = exports.DidChangeTextDocumentNotification = exports.TextDocumentContentChangeEvent = exports.DidOpenTextDocumentNotification = exports.TextDocumentSyncKind = exports.TelemetryEventNotification = exports.LogMessageNotification = exports.ShowMessageRequest = exports.ShowMessageNotification = exports.MessageType = exports.DidChangeConfigurationNotification = exports.ExitNotification = exports.ShutdownRequest = exports.InitializedNotification = exports.InitializeErrorCodes = exports.InitializeRequest = exports.WorkDoneProgressOptions = exports.TextDocumentRegistrationOptions = exports.StaticRegistrationOptions = exports.PositionEncodingKind = exports.FailureHandlingKind = exports.ResourceOperationKind = exports.UnregistrationRequest = exports.RegistrationRequest = exports.DocumentSelector = exports.NotebookCellTextDocumentFilter = exports.NotebookDocumentFilter = exports.TextDocumentFilter = void 0;\nexports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = exports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.WillRenameFilesRequest = exports.DidRenameFilesNotification = exports.WillCreateFilesRequest = exports.DidCreateFilesNotification = exports.FileOperationPatternKind = exports.LinkedEditingRangeRequest = exports.ShowDocumentRequest = exports.SemanticTokensRegistrationType = exports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.TokenFormat = exports.CallHierarchyPrepareRequest = exports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = exports.SelectionRangeRequest = exports.DeclarationRequest = exports.FoldingRangeRefreshRequest = exports.FoldingRangeRequest = exports.ColorPresentationRequest = exports.DocumentColorRequest = exports.ConfigurationRequest = exports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = exports.TypeDefinitionRequest = exports.ImplementationRequest = exports.ApplyWorkspaceEditRequest = exports.ExecuteCommandRequest = exports.PrepareRenameRequest = exports.RenameRequest = exports.PrepareSupportDefaultBehavior = exports.DocumentOnTypeFormattingRequest = exports.DocumentRangesFormattingRequest = exports.DocumentRangeFormattingRequest = exports.DocumentFormattingRequest = exports.DocumentLinkResolveRequest = exports.DocumentLinkRequest = exports.CodeLensRefreshRequest = exports.CodeLensResolveRequest = exports.CodeLensRequest = exports.WorkspaceSymbolResolveRequest = void 0;\nexports.InlineCompletionRequest = exports.DidCloseNotebookDocumentNotification = exports.DidSaveNotebookDocumentNotification = exports.DidChangeNotebookDocumentNotification = exports.NotebookCellArrayChange = exports.DidOpenNotebookDocumentNotification = exports.NotebookDocumentSyncRegistrationType = exports.NotebookDocument = exports.NotebookCell = exports.ExecutionSummary = exports.NotebookCellKind = exports.DiagnosticRefreshRequest = exports.WorkspaceDiagnosticRequest = exports.DocumentDiagnosticRequest = exports.DocumentDiagnosticReportKind = exports.DiagnosticServerCancellationData = exports.InlayHintRefreshRequest = exports.InlayHintResolveRequest = exports.InlayHintRequest = exports.InlineValueRefreshRequest = exports.InlineValueRequest = exports.TypeHierarchySupertypesRequest = exports.TypeHierarchySubtypesRequest = exports.TypeHierarchyPrepareRequest = void 0;\nconst messages_1 = require(\"./messages\");\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nconst Is = require(\"./utils/is\");\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\nObject.defineProperty(exports, \"ImplementationRequest\", { enumerable: true, get: function () { return protocol_implementation_1.ImplementationRequest; } });\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\nObject.defineProperty(exports, \"TypeDefinitionRequest\", { enumerable: true, get: function () { return protocol_typeDefinition_1.TypeDefinitionRequest; } });\nconst protocol_workspaceFolder_1 = require(\"./protocol.workspaceFolder\");\nObject.defineProperty(exports, \"WorkspaceFoldersRequest\", { enumerable: true, get: function () { return protocol_workspaceFolder_1.WorkspaceFoldersRequest; } });\nObject.defineProperty(exports, \"DidChangeWorkspaceFoldersNotification\", { enumerable: true, get: function () { return protocol_workspaceFolder_1.DidChangeWorkspaceFoldersNotification; } });\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\nObject.defineProperty(exports, \"ConfigurationRequest\", { enumerable: true, get: function () { return protocol_configuration_1.ConfigurationRequest; } });\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\nObject.defineProperty(exports, \"DocumentColorRequest\", { enumerable: true, get: function () { return protocol_colorProvider_1.DocumentColorRequest; } });\nObject.defineProperty(exports, \"ColorPresentationRequest\", { enumerable: true, get: function () { return protocol_colorProvider_1.ColorPresentationRequest; } });\nconst protocol_foldingRange_1 = require(\"./protocol.foldingRange\");\nObject.defineProperty(exports, \"FoldingRangeRequest\", { enumerable: true, get: function () { return protocol_foldingRange_1.FoldingRangeRequest; } });\nObject.defineProperty(exports, \"FoldingRangeRefreshRequest\", { enumerable: true, get: function () { return protocol_foldingRange_1.FoldingRangeRefreshRequest; } });\nconst protocol_declaration_1 = require(\"./protocol.declaration\");\nObject.defineProperty(exports, \"DeclarationRequest\", { enumerable: true, get: function () { return protocol_declaration_1.DeclarationRequest; } });\nconst protocol_selectionRange_1 = require(\"./protocol.selectionRange\");\nObject.defineProperty(exports, \"SelectionRangeRequest\", { enumerable: true, get: function () { return protocol_selectionRange_1.SelectionRangeRequest; } });\nconst protocol_progress_1 = require(\"./protocol.progress\");\nObject.defineProperty(exports, \"WorkDoneProgress\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgress; } });\nObject.defineProperty(exports, \"WorkDoneProgressCreateRequest\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgressCreateRequest; } });\nObject.defineProperty(exports, \"WorkDoneProgressCancelNotification\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgressCancelNotification; } });\nconst protocol_callHierarchy_1 = require(\"./protocol.callHierarchy\");\nObject.defineProperty(exports, \"CallHierarchyIncomingCallsRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyIncomingCallsRequest; } });\nObject.defineProperty(exports, \"CallHierarchyOutgoingCallsRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyOutgoingCallsRequest; } });\nObject.defineProperty(exports, \"CallHierarchyPrepareRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyPrepareRequest; } });\nconst protocol_semanticTokens_1 = require(\"./protocol.semanticTokens\");\nObject.defineProperty(exports, \"TokenFormat\", { enumerable: true, get: function () { return protocol_semanticTokens_1.TokenFormat; } });\nObject.defineProperty(exports, \"SemanticTokensRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRequest; } });\nObject.defineProperty(exports, \"SemanticTokensDeltaRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensDeltaRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRangeRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRangeRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRefreshRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRefreshRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRegistrationType\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRegistrationType; } });\nconst protocol_showDocument_1 = require(\"./protocol.showDocument\");\nObject.defineProperty(exports, \"ShowDocumentRequest\", { enumerable: true, get: function () { return protocol_showDocument_1.ShowDocumentRequest; } });\nconst protocol_linkedEditingRange_1 = require(\"./protocol.linkedEditingRange\");\nObject.defineProperty(exports, \"LinkedEditingRangeRequest\", { enumerable: true, get: function () { return protocol_linkedEditingRange_1.LinkedEditingRangeRequest; } });\nconst protocol_fileOperations_1 = require(\"./protocol.fileOperations\");\nObject.defineProperty(exports, \"FileOperationPatternKind\", { enumerable: true, get: function () { return protocol_fileOperations_1.FileOperationPatternKind; } });\nObject.defineProperty(exports, \"DidCreateFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidCreateFilesNotification; } });\nObject.defineProperty(exports, \"WillCreateFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillCreateFilesRequest; } });\nObject.defineProperty(exports, \"DidRenameFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidRenameFilesNotification; } });\nObject.defineProperty(exports, \"WillRenameFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillRenameFilesRequest; } });\nObject.defineProperty(exports, \"DidDeleteFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidDeleteFilesNotification; } });\nObject.defineProperty(exports, \"WillDeleteFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillDeleteFilesRequest; } });\nconst protocol_moniker_1 = require(\"./protocol.moniker\");\nObject.defineProperty(exports, \"UniquenessLevel\", { enumerable: true, get: function () { return protocol_moniker_1.UniquenessLevel; } });\nObject.defineProperty(exports, \"MonikerKind\", { enumerable: true, get: function () { return protocol_moniker_1.MonikerKind; } });\nObject.defineProperty(exports, \"MonikerRequest\", { enumerable: true, get: function () { return protocol_moniker_1.MonikerRequest; } });\nconst protocol_typeHierarchy_1 = require(\"./protocol.typeHierarchy\");\nObject.defineProperty(exports, \"TypeHierarchyPrepareRequest\", { enumerable: true, get: function () { return protocol_typeHierarchy_1.TypeHierarchyPrepareRequest; } });\nObject.defineProperty(exports, \"TypeHierarchySubtypesRequest\", { enumerable: true, get: function () { return protocol_typeHierarchy_1.TypeHierarchySubtypesRequest; } });\nObject.defineProperty(exports, \"TypeHierarchySupertypesRequest\", { enumerable: true, get: function () { return protocol_typeHierarchy_1.TypeHierarchySupertypesRequest; } });\nconst protocol_inlineValue_1 = require(\"./protocol.inlineValue\");\nObject.defineProperty(exports, \"InlineValueRequest\", { enumerable: true, get: function () { return protocol_inlineValue_1.InlineValueRequest; } });\nObject.defineProperty(exports, \"InlineValueRefreshRequest\", { enumerable: true, get: function () { return protocol_inlineValue_1.InlineValueRefreshRequest; } });\nconst protocol_inlayHint_1 = require(\"./protocol.inlayHint\");\nObject.defineProperty(exports, \"InlayHintRequest\", { enumerable: true, get: function () { return protocol_inlayHint_1.InlayHintRequest; } });\nObject.defineProperty(exports, \"InlayHintResolveRequest\", { enumerable: true, get: function () { return protocol_inlayHint_1.InlayHintResolveRequest; } });\nObject.defineProperty(exports, \"InlayHintRefreshRequest\", { enumerable: true, get: function () { return protocol_inlayHint_1.InlayHintRefreshRequest; } });\nconst protocol_diagnostic_1 = require(\"./protocol.diagnostic\");\nObject.defineProperty(exports, \"DiagnosticServerCancellationData\", { enumerable: true, get: function () { return protocol_diagnostic_1.DiagnosticServerCancellationData; } });\nObject.defineProperty(exports, \"DocumentDiagnosticReportKind\", { enumerable: true, get: function () { return protocol_diagnostic_1.DocumentDiagnosticReportKind; } });\nObject.defineProperty(exports, \"DocumentDiagnosticRequest\", { enumerable: true, get: function () { return protocol_diagnostic_1.DocumentDiagnosticRequest; } });\nObject.defineProperty(exports, \"WorkspaceDiagnosticRequest\", { enumerable: true, get: function () { return protocol_diagnostic_1.WorkspaceDiagnosticRequest; } });\nObject.defineProperty(exports, \"DiagnosticRefreshRequest\", { enumerable: true, get: function () { return protocol_diagnostic_1.DiagnosticRefreshRequest; } });\nconst protocol_notebook_1 = require(\"./protocol.notebook\");\nObject.defineProperty(exports, \"NotebookCellKind\", { enumerable: true, get: function () { return protocol_notebook_1.NotebookCellKind; } });\nObject.defineProperty(exports, \"ExecutionSummary\", { enumerable: true, get: function () { return protocol_notebook_1.ExecutionSummary; } });\nObject.defineProperty(exports, \"NotebookCell\", { enumerable: true, get: function () { return protocol_notebook_1.NotebookCell; } });\nObject.defineProperty(exports, \"NotebookDocument\", { enumerable: true, get: function () { return protocol_notebook_1.NotebookDocument; } });\nObject.defineProperty(exports, \"NotebookDocumentSyncRegistrationType\", { enumerable: true, get: function () { return protocol_notebook_1.NotebookDocumentSyncRegistrationType; } });\nObject.defineProperty(exports, \"DidOpenNotebookDocumentNotification\", { enumerable: true, get: function () { return protocol_notebook_1.DidOpenNotebookDocumentNotification; } });\nObject.defineProperty(exports, \"NotebookCellArrayChange\", { enumerable: true, get: function () { return protocol_notebook_1.NotebookCellArrayChange; } });\nObject.defineProperty(exports, \"DidChangeNotebookDocumentNotification\", { enumerable: true, get: function () { return protocol_notebook_1.DidChangeNotebookDocumentNotification; } });\nObject.defineProperty(exports, \"DidSaveNotebookDocumentNotification\", { enumerable: true, get: function () { return protocol_notebook_1.DidSaveNotebookDocumentNotification; } });\nObject.defineProperty(exports, \"DidCloseNotebookDocumentNotification\", { enumerable: true, get: function () { return protocol_notebook_1.DidCloseNotebookDocumentNotification; } });\nconst protocol_inlineCompletion_1 = require(\"./protocol.inlineCompletion\");\nObject.defineProperty(exports, \"InlineCompletionRequest\", { enumerable: true, get: function () { return protocol_inlineCompletion_1.InlineCompletionRequest; } });\n// @ts-ignore: to avoid inlining LocationLink as dynamic import\nlet __noDynamicImport;\n/**\n * The TextDocumentFilter namespace provides helper functions to work with\n * {@link TextDocumentFilter} literals.\n *\n * @since 3.17.0\n */\nvar TextDocumentFilter;\n(function (TextDocumentFilter) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate) || (Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern));\n    }\n    TextDocumentFilter.is = is;\n})(TextDocumentFilter || (exports.TextDocumentFilter = TextDocumentFilter = {}));\n/**\n * The NotebookDocumentFilter namespace provides helper functions to work with\n * {@link NotebookDocumentFilter} literals.\n *\n * @since 3.17.0\n */\nvar NotebookDocumentFilter;\n(function (NotebookDocumentFilter) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (Is.string(candidate.notebookType) || Is.string(candidate.scheme) || Is.string(candidate.pattern));\n    }\n    NotebookDocumentFilter.is = is;\n})(NotebookDocumentFilter || (exports.NotebookDocumentFilter = NotebookDocumentFilter = {}));\n/**\n * The NotebookCellTextDocumentFilter namespace provides helper functions to work with\n * {@link NotebookCellTextDocumentFilter} literals.\n *\n * @since 3.17.0\n */\nvar NotebookCellTextDocumentFilter;\n(function (NotebookCellTextDocumentFilter) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && (Is.string(candidate.notebook) || NotebookDocumentFilter.is(candidate.notebook))\n            && (candidate.language === undefined || Is.string(candidate.language));\n    }\n    NotebookCellTextDocumentFilter.is = is;\n})(NotebookCellTextDocumentFilter || (exports.NotebookCellTextDocumentFilter = NotebookCellTextDocumentFilter = {}));\n/**\n * The DocumentSelector namespace provides helper functions to work with\n * {@link DocumentSelector}s.\n */\nvar DocumentSelector;\n(function (DocumentSelector) {\n    function is(value) {\n        if (!Array.isArray(value)) {\n            return false;\n        }\n        for (let elem of value) {\n            if (!Is.string(elem) && !TextDocumentFilter.is(elem) && !NotebookCellTextDocumentFilter.is(elem)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    DocumentSelector.is = is;\n})(DocumentSelector || (exports.DocumentSelector = DocumentSelector = {}));\n/**\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\n * handler on the client side.\n */\nvar RegistrationRequest;\n(function (RegistrationRequest) {\n    RegistrationRequest.method = 'client/registerCapability';\n    RegistrationRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    RegistrationRequest.type = new messages_1.ProtocolRequestType(RegistrationRequest.method);\n})(RegistrationRequest || (exports.RegistrationRequest = RegistrationRequest = {}));\n/**\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\n * handler on the client side.\n */\nvar UnregistrationRequest;\n(function (UnregistrationRequest) {\n    UnregistrationRequest.method = 'client/unregisterCapability';\n    UnregistrationRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    UnregistrationRequest.type = new messages_1.ProtocolRequestType(UnregistrationRequest.method);\n})(UnregistrationRequest || (exports.UnregistrationRequest = UnregistrationRequest = {}));\nvar ResourceOperationKind;\n(function (ResourceOperationKind) {\n    /**\n     * Supports creating new files and folders.\n     */\n    ResourceOperationKind.Create = 'create';\n    /**\n     * Supports renaming existing files and folders.\n     */\n    ResourceOperationKind.Rename = 'rename';\n    /**\n     * Supports deleting existing files and folders.\n     */\n    ResourceOperationKind.Delete = 'delete';\n})(ResourceOperationKind || (exports.ResourceOperationKind = ResourceOperationKind = {}));\nvar FailureHandlingKind;\n(function (FailureHandlingKind) {\n    /**\n     * Applying the workspace change is simply aborted if one of the changes provided\n     * fails. All operations executed before the failing operation stay executed.\n     */\n    FailureHandlingKind.Abort = 'abort';\n    /**\n     * All operations are executed transactional. That means they either all\n     * succeed or no changes at all are applied to the workspace.\n     */\n    FailureHandlingKind.Transactional = 'transactional';\n    /**\n     * If the workspace edit contains only textual file changes they are executed transactional.\n     * If resource changes (create, rename or delete file) are part of the change the failure\n     * handling strategy is abort.\n     */\n    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\n    /**\n     * The client tries to undo the operations already executed. But there is no\n     * guarantee that this is succeeding.\n     */\n    FailureHandlingKind.Undo = 'undo';\n})(FailureHandlingKind || (exports.FailureHandlingKind = FailureHandlingKind = {}));\n/**\n * A set of predefined position encoding kinds.\n *\n * @since 3.17.0\n */\nvar PositionEncodingKind;\n(function (PositionEncodingKind) {\n    /**\n     * Character offsets count UTF-8 code units (e.g. bytes).\n     */\n    PositionEncodingKind.UTF8 = 'utf-8';\n    /**\n     * Character offsets count UTF-16 code units.\n     *\n     * This is the default and must always be supported\n     * by servers\n     */\n    PositionEncodingKind.UTF16 = 'utf-16';\n    /**\n     * Character offsets count UTF-32 code units.\n     *\n     * Implementation note: these are the same as Unicode codepoints,\n     * so this `PositionEncodingKind` may also be used for an\n     * encoding-agnostic representation of character offsets.\n     */\n    PositionEncodingKind.UTF32 = 'utf-32';\n})(PositionEncodingKind || (exports.PositionEncodingKind = PositionEncodingKind = {}));\n/**\n * The StaticRegistrationOptions namespace provides helper functions to work with\n * {@link StaticRegistrationOptions} literals.\n */\nvar StaticRegistrationOptions;\n(function (StaticRegistrationOptions) {\n    function hasId(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.id) && candidate.id.length > 0;\n    }\n    StaticRegistrationOptions.hasId = hasId;\n})(StaticRegistrationOptions || (exports.StaticRegistrationOptions = StaticRegistrationOptions = {}));\n/**\n * The TextDocumentRegistrationOptions namespace provides helper functions to work with\n * {@link TextDocumentRegistrationOptions} literals.\n */\nvar TextDocumentRegistrationOptions;\n(function (TextDocumentRegistrationOptions) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate.documentSelector === null || DocumentSelector.is(candidate.documentSelector));\n    }\n    TextDocumentRegistrationOptions.is = is;\n})(TextDocumentRegistrationOptions || (exports.TextDocumentRegistrationOptions = TextDocumentRegistrationOptions = {}));\n/**\n * The WorkDoneProgressOptions namespace provides helper functions to work with\n * {@link WorkDoneProgressOptions} literals.\n */\nvar WorkDoneProgressOptions;\n(function (WorkDoneProgressOptions) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.workDoneProgress === undefined || Is.boolean(candidate.workDoneProgress));\n    }\n    WorkDoneProgressOptions.is = is;\n    function hasWorkDoneProgress(value) {\n        const candidate = value;\n        return candidate && Is.boolean(candidate.workDoneProgress);\n    }\n    WorkDoneProgressOptions.hasWorkDoneProgress = hasWorkDoneProgress;\n})(WorkDoneProgressOptions || (exports.WorkDoneProgressOptions = WorkDoneProgressOptions = {}));\n/**\n * The initialize request is sent from the client to the server.\n * It is sent once as the request after starting up the server.\n * The requests parameter is of type {@link InitializeParams}\n * the response if of type {@link InitializeResult} of a Thenable that\n * resolves to such.\n */\nvar InitializeRequest;\n(function (InitializeRequest) {\n    InitializeRequest.method = 'initialize';\n    InitializeRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    InitializeRequest.type = new messages_1.ProtocolRequestType(InitializeRequest.method);\n})(InitializeRequest || (exports.InitializeRequest = InitializeRequest = {}));\n/**\n * Known error codes for an `InitializeErrorCodes`;\n */\nvar InitializeErrorCodes;\n(function (InitializeErrorCodes) {\n    /**\n     * If the protocol version provided by the client can't be handled by the server.\n     *\n     * @deprecated This initialize error got replaced by client capabilities. There is\n     * no version handshake in version 3.0x\n     */\n    InitializeErrorCodes.unknownProtocolVersion = 1;\n})(InitializeErrorCodes || (exports.InitializeErrorCodes = InitializeErrorCodes = {}));\n/**\n * The initialized notification is sent from the client to the\n * server after the client is fully initialized and the server\n * is allowed to send requests from the server to the client.\n */\nvar InitializedNotification;\n(function (InitializedNotification) {\n    InitializedNotification.method = 'initialized';\n    InitializedNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    InitializedNotification.type = new messages_1.ProtocolNotificationType(InitializedNotification.method);\n})(InitializedNotification || (exports.InitializedNotification = InitializedNotification = {}));\n//---- Shutdown Method ----\n/**\n * A shutdown request is sent from the client to the server.\n * It is sent once when the client decides to shutdown the\n * server. The only notification that is sent after a shutdown request\n * is the exit event.\n */\nvar ShutdownRequest;\n(function (ShutdownRequest) {\n    ShutdownRequest.method = 'shutdown';\n    ShutdownRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    ShutdownRequest.type = new messages_1.ProtocolRequestType0(ShutdownRequest.method);\n})(ShutdownRequest || (exports.ShutdownRequest = ShutdownRequest = {}));\n//---- Exit Notification ----\n/**\n * The exit event is sent from the client to the server to\n * ask the server to exit its process.\n */\nvar ExitNotification;\n(function (ExitNotification) {\n    ExitNotification.method = 'exit';\n    ExitNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    ExitNotification.type = new messages_1.ProtocolNotificationType0(ExitNotification.method);\n})(ExitNotification || (exports.ExitNotification = ExitNotification = {}));\n/**\n * The configuration change notification is sent from the client to the server\n * when the client's configuration has changed. The notification contains\n * the changed configuration as defined by the language client.\n */\nvar DidChangeConfigurationNotification;\n(function (DidChangeConfigurationNotification) {\n    DidChangeConfigurationNotification.method = 'workspace/didChangeConfiguration';\n    DidChangeConfigurationNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidChangeConfigurationNotification.type = new messages_1.ProtocolNotificationType(DidChangeConfigurationNotification.method);\n})(DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = DidChangeConfigurationNotification = {}));\n//---- Message show and log notifications ----\n/**\n * The message type\n */\nvar MessageType;\n(function (MessageType) {\n    /**\n     * An error message.\n     */\n    MessageType.Error = 1;\n    /**\n     * A warning message.\n     */\n    MessageType.Warning = 2;\n    /**\n     * An information message.\n     */\n    MessageType.Info = 3;\n    /**\n     * A log message.\n     */\n    MessageType.Log = 4;\n    /**\n     * A debug message.\n     *\n     * @since 3.18.0\n     */\n    MessageType.Debug = 5;\n})(MessageType || (exports.MessageType = MessageType = {}));\n/**\n * The show message notification is sent from a server to a client to ask\n * the client to display a particular message in the user interface.\n */\nvar ShowMessageNotification;\n(function (ShowMessageNotification) {\n    ShowMessageNotification.method = 'window/showMessage';\n    ShowMessageNotification.messageDirection = messages_1.MessageDirection.serverToClient;\n    ShowMessageNotification.type = new messages_1.ProtocolNotificationType(ShowMessageNotification.method);\n})(ShowMessageNotification || (exports.ShowMessageNotification = ShowMessageNotification = {}));\n/**\n * The show message request is sent from the server to the client to show a message\n * and a set of options actions to the user.\n */\nvar ShowMessageRequest;\n(function (ShowMessageRequest) {\n    ShowMessageRequest.method = 'window/showMessageRequest';\n    ShowMessageRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    ShowMessageRequest.type = new messages_1.ProtocolRequestType(ShowMessageRequest.method);\n})(ShowMessageRequest || (exports.ShowMessageRequest = ShowMessageRequest = {}));\n/**\n * The log message notification is sent from the server to the client to ask\n * the client to log a particular message.\n */\nvar LogMessageNotification;\n(function (LogMessageNotification) {\n    LogMessageNotification.method = 'window/logMessage';\n    LogMessageNotification.messageDirection = messages_1.MessageDirection.serverToClient;\n    LogMessageNotification.type = new messages_1.ProtocolNotificationType(LogMessageNotification.method);\n})(LogMessageNotification || (exports.LogMessageNotification = LogMessageNotification = {}));\n//---- Telemetry notification\n/**\n * The telemetry event notification is sent from the server to the client to ask\n * the client to log telemetry data.\n */\nvar TelemetryEventNotification;\n(function (TelemetryEventNotification) {\n    TelemetryEventNotification.method = 'telemetry/event';\n    TelemetryEventNotification.messageDirection = messages_1.MessageDirection.serverToClient;\n    TelemetryEventNotification.type = new messages_1.ProtocolNotificationType(TelemetryEventNotification.method);\n})(TelemetryEventNotification || (exports.TelemetryEventNotification = TelemetryEventNotification = {}));\n/**\n * Defines how the host (editor) should sync\n * document changes to the language server.\n */\nvar TextDocumentSyncKind;\n(function (TextDocumentSyncKind) {\n    /**\n     * Documents should not be synced at all.\n     */\n    TextDocumentSyncKind.None = 0;\n    /**\n     * Documents are synced by always sending the full content\n     * of the document.\n     */\n    TextDocumentSyncKind.Full = 1;\n    /**\n     * Documents are synced by sending the full content on open.\n     * After that only incremental updates to the document are\n     * send.\n     */\n    TextDocumentSyncKind.Incremental = 2;\n})(TextDocumentSyncKind || (exports.TextDocumentSyncKind = TextDocumentSyncKind = {}));\n/**\n * The document open notification is sent from the client to the server to signal\n * newly opened text documents. The document's truth is now managed by the client\n * and the server must not try to read the document's truth using the document's\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\n * mean that its content is presented in an editor. An open notification must not\n * be sent more than once without a corresponding close notification send before.\n * This means open and close notification must be balanced and the max open count\n * is one.\n */\nvar DidOpenTextDocumentNotification;\n(function (DidOpenTextDocumentNotification) {\n    DidOpenTextDocumentNotification.method = 'textDocument/didOpen';\n    DidOpenTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidOpenTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenTextDocumentNotification.method);\n})(DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = DidOpenTextDocumentNotification = {}));\nvar TextDocumentContentChangeEvent;\n(function (TextDocumentContentChangeEvent) {\n    /**\n     * Checks whether the information describes a delta event.\n     */\n    function isIncremental(event) {\n        let candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    TextDocumentContentChangeEvent.isIncremental = isIncremental;\n    /**\n     * Checks whether the information describes a full replacement event.\n     */\n    function isFull(event) {\n        let candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n    TextDocumentContentChangeEvent.isFull = isFull;\n})(TextDocumentContentChangeEvent || (exports.TextDocumentContentChangeEvent = TextDocumentContentChangeEvent = {}));\n/**\n * The document change notification is sent from the client to the server to signal\n * changes to a text document.\n */\nvar DidChangeTextDocumentNotification;\n(function (DidChangeTextDocumentNotification) {\n    DidChangeTextDocumentNotification.method = 'textDocument/didChange';\n    DidChangeTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidChangeTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeTextDocumentNotification.method);\n})(DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = DidChangeTextDocumentNotification = {}));\n/**\n * The document close notification is sent from the client to the server when\n * the document got closed in the client. The document's truth now exists where\n * the document's uri points to (e.g. if the document's uri is a file uri the\n * truth now exists on disk). As with the open notification the close notification\n * is about managing the document's content. Receiving a close notification\n * doesn't mean that the document was open in an editor before. A close\n * notification requires a previous open notification to be sent.\n */\nvar DidCloseTextDocumentNotification;\n(function (DidCloseTextDocumentNotification) {\n    DidCloseTextDocumentNotification.method = 'textDocument/didClose';\n    DidCloseTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidCloseTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseTextDocumentNotification.method);\n})(DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = DidCloseTextDocumentNotification = {}));\n/**\n * The document save notification is sent from the client to the server when\n * the document got saved in the client.\n */\nvar DidSaveTextDocumentNotification;\n(function (DidSaveTextDocumentNotification) {\n    DidSaveTextDocumentNotification.method = 'textDocument/didSave';\n    DidSaveTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveTextDocumentNotification.method);\n})(DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = DidSaveTextDocumentNotification = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nvar TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (exports.TextDocumentSaveReason = TextDocumentSaveReason = {}));\n/**\n * A document will save notification is sent from the client to the server before\n * the document is actually saved.\n */\nvar WillSaveTextDocumentNotification;\n(function (WillSaveTextDocumentNotification) {\n    WillSaveTextDocumentNotification.method = 'textDocument/willSave';\n    WillSaveTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    WillSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(WillSaveTextDocumentNotification.method);\n})(WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = WillSaveTextDocumentNotification = {}));\n/**\n * A document will save request is sent from the client to the server before\n * the document is actually saved. The request can return an array of TextEdits\n * which will be applied to the text document before it is saved. Please note that\n * clients might drop results if computing the text edits took too long or if a\n * server constantly fails on this request. This is done to keep the save fast and\n * reliable.\n */\nvar WillSaveTextDocumentWaitUntilRequest;\n(function (WillSaveTextDocumentWaitUntilRequest) {\n    WillSaveTextDocumentWaitUntilRequest.method = 'textDocument/willSaveWaitUntil';\n    WillSaveTextDocumentWaitUntilRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WillSaveTextDocumentWaitUntilRequest.type = new messages_1.ProtocolRequestType(WillSaveTextDocumentWaitUntilRequest.method);\n})(WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = WillSaveTextDocumentWaitUntilRequest = {}));\n/**\n * The watched files notification is sent from the client to the server when\n * the client detects changes to file watched by the language client.\n */\nvar DidChangeWatchedFilesNotification;\n(function (DidChangeWatchedFilesNotification) {\n    DidChangeWatchedFilesNotification.method = 'workspace/didChangeWatchedFiles';\n    DidChangeWatchedFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidChangeWatchedFilesNotification.type = new messages_1.ProtocolNotificationType(DidChangeWatchedFilesNotification.method);\n})(DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = DidChangeWatchedFilesNotification = {}));\n/**\n * The file event type\n */\nvar FileChangeType;\n(function (FileChangeType) {\n    /**\n     * The file got created.\n     */\n    FileChangeType.Created = 1;\n    /**\n     * The file got changed.\n     */\n    FileChangeType.Changed = 2;\n    /**\n     * The file got deleted.\n     */\n    FileChangeType.Deleted = 3;\n})(FileChangeType || (exports.FileChangeType = FileChangeType = {}));\nvar RelativePattern;\n(function (RelativePattern) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (vscode_languageserver_types_1.URI.is(candidate.baseUri) || vscode_languageserver_types_1.WorkspaceFolder.is(candidate.baseUri)) && Is.string(candidate.pattern);\n    }\n    RelativePattern.is = is;\n})(RelativePattern || (exports.RelativePattern = RelativePattern = {}));\nvar WatchKind;\n(function (WatchKind) {\n    /**\n     * Interested in create events.\n     */\n    WatchKind.Create = 1;\n    /**\n     * Interested in change events\n     */\n    WatchKind.Change = 2;\n    /**\n     * Interested in delete events\n     */\n    WatchKind.Delete = 4;\n})(WatchKind || (exports.WatchKind = WatchKind = {}));\n/**\n * Diagnostics notification are sent from the server to the client to signal\n * results of validation runs.\n */\nvar PublishDiagnosticsNotification;\n(function (PublishDiagnosticsNotification) {\n    PublishDiagnosticsNotification.method = 'textDocument/publishDiagnostics';\n    PublishDiagnosticsNotification.messageDirection = messages_1.MessageDirection.serverToClient;\n    PublishDiagnosticsNotification.type = new messages_1.ProtocolNotificationType(PublishDiagnosticsNotification.method);\n})(PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = PublishDiagnosticsNotification = {}));\n/**\n * How a completion was triggered\n */\nvar CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    /**\n     * Completion was triggered by typing an identifier (24x7 code\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\n     */\n    CompletionTriggerKind.Invoked = 1;\n    /**\n     * Completion was triggered by a trigger character specified by\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\n     */\n    CompletionTriggerKind.TriggerCharacter = 2;\n    /**\n     * Completion was re-triggered as current completion list is incomplete\n     */\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\n})(CompletionTriggerKind || (exports.CompletionTriggerKind = CompletionTriggerKind = {}));\n/**\n * Request to request completion at a given text document position. The request's\n * parameter is of type {@link TextDocumentPosition} the response\n * is of type {@link CompletionItem CompletionItem[]} or {@link CompletionList}\n * or a Thenable that resolves to such.\n *\n * The request can delay the computation of the {@link CompletionItem.detail `detail`}\n * and {@link CompletionItem.documentation `documentation`} properties to the `completionItem/resolve`\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\n */\nvar CompletionRequest;\n(function (CompletionRequest) {\n    CompletionRequest.method = 'textDocument/completion';\n    CompletionRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CompletionRequest.type = new messages_1.ProtocolRequestType(CompletionRequest.method);\n})(CompletionRequest || (exports.CompletionRequest = CompletionRequest = {}));\n/**\n * Request to resolve additional information for a given completion item.The request's\n * parameter is of type {@link CompletionItem} the response\n * is of type {@link CompletionItem} or a Thenable that resolves to such.\n */\nvar CompletionResolveRequest;\n(function (CompletionResolveRequest) {\n    CompletionResolveRequest.method = 'completionItem/resolve';\n    CompletionResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CompletionResolveRequest.type = new messages_1.ProtocolRequestType(CompletionResolveRequest.method);\n})(CompletionResolveRequest || (exports.CompletionResolveRequest = CompletionResolveRequest = {}));\n/**\n * Request to request hover information at a given text document position. The request's\n * parameter is of type {@link TextDocumentPosition} the response is of\n * type {@link Hover} or a Thenable that resolves to such.\n */\nvar HoverRequest;\n(function (HoverRequest) {\n    HoverRequest.method = 'textDocument/hover';\n    HoverRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    HoverRequest.type = new messages_1.ProtocolRequestType(HoverRequest.method);\n})(HoverRequest || (exports.HoverRequest = HoverRequest = {}));\n/**\n * How a signature help was triggered.\n *\n * @since 3.15.0\n */\nvar SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    /**\n     * Signature help was invoked manually by the user or by a command.\n     */\n    SignatureHelpTriggerKind.Invoked = 1;\n    /**\n     * Signature help was triggered by a trigger character.\n     */\n    SignatureHelpTriggerKind.TriggerCharacter = 2;\n    /**\n     * Signature help was triggered by the cursor moving or by the document content changing.\n     */\n    SignatureHelpTriggerKind.ContentChange = 3;\n})(SignatureHelpTriggerKind || (exports.SignatureHelpTriggerKind = SignatureHelpTriggerKind = {}));\nvar SignatureHelpRequest;\n(function (SignatureHelpRequest) {\n    SignatureHelpRequest.method = 'textDocument/signatureHelp';\n    SignatureHelpRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    SignatureHelpRequest.type = new messages_1.ProtocolRequestType(SignatureHelpRequest.method);\n})(SignatureHelpRequest || (exports.SignatureHelpRequest = SignatureHelpRequest = {}));\n/**\n * A request to resolve the definition location of a symbol at a given text\n * document position. The request's parameter is of type {@link TextDocumentPosition}\n * the response is of either type {@link Definition} or a typed array of\n * {@link DefinitionLink} or a Thenable that resolves to such.\n */\nvar DefinitionRequest;\n(function (DefinitionRequest) {\n    DefinitionRequest.method = 'textDocument/definition';\n    DefinitionRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DefinitionRequest.type = new messages_1.ProtocolRequestType(DefinitionRequest.method);\n})(DefinitionRequest || (exports.DefinitionRequest = DefinitionRequest = {}));\n/**\n * A request to resolve project-wide references for the symbol denoted\n * by the given text document position. The request's parameter is of\n * type {@link ReferenceParams} the response is of type\n * {@link Location Location[]} or a Thenable that resolves to such.\n */\nvar ReferencesRequest;\n(function (ReferencesRequest) {\n    ReferencesRequest.method = 'textDocument/references';\n    ReferencesRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    ReferencesRequest.type = new messages_1.ProtocolRequestType(ReferencesRequest.method);\n})(ReferencesRequest || (exports.ReferencesRequest = ReferencesRequest = {}));\n/**\n * Request to resolve a {@link DocumentHighlight} for a given\n * text document position. The request's parameter is of type {@link TextDocumentPosition}\n * the request response is an array of type {@link DocumentHighlight}\n * or a Thenable that resolves to such.\n */\nvar DocumentHighlightRequest;\n(function (DocumentHighlightRequest) {\n    DocumentHighlightRequest.method = 'textDocument/documentHighlight';\n    DocumentHighlightRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentHighlightRequest.type = new messages_1.ProtocolRequestType(DocumentHighlightRequest.method);\n})(DocumentHighlightRequest || (exports.DocumentHighlightRequest = DocumentHighlightRequest = {}));\n/**\n * A request to list all symbols found in a given text document. The request's\n * parameter is of type {@link TextDocumentIdentifier} the\n * response is of type {@link SymbolInformation SymbolInformation[]} or a Thenable\n * that resolves to such.\n */\nvar DocumentSymbolRequest;\n(function (DocumentSymbolRequest) {\n    DocumentSymbolRequest.method = 'textDocument/documentSymbol';\n    DocumentSymbolRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentSymbolRequest.type = new messages_1.ProtocolRequestType(DocumentSymbolRequest.method);\n})(DocumentSymbolRequest || (exports.DocumentSymbolRequest = DocumentSymbolRequest = {}));\n/**\n * A request to provide commands for the given text document and range.\n */\nvar CodeActionRequest;\n(function (CodeActionRequest) {\n    CodeActionRequest.method = 'textDocument/codeAction';\n    CodeActionRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CodeActionRequest.type = new messages_1.ProtocolRequestType(CodeActionRequest.method);\n})(CodeActionRequest || (exports.CodeActionRequest = CodeActionRequest = {}));\n/**\n * Request to resolve additional information for a given code action.The request's\n * parameter is of type {@link CodeAction} the response\n * is of type {@link CodeAction} or a Thenable that resolves to such.\n */\nvar CodeActionResolveRequest;\n(function (CodeActionResolveRequest) {\n    CodeActionResolveRequest.method = 'codeAction/resolve';\n    CodeActionResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CodeActionResolveRequest.type = new messages_1.ProtocolRequestType(CodeActionResolveRequest.method);\n})(CodeActionResolveRequest || (exports.CodeActionResolveRequest = CodeActionResolveRequest = {}));\n/**\n * A request to list project-wide symbols matching the query string given\n * by the {@link WorkspaceSymbolParams}. The response is\n * of type {@link SymbolInformation SymbolInformation[]} or a Thenable that\n * resolves to such.\n *\n * @since 3.17.0 - support for WorkspaceSymbol in the returned data. Clients\n *  need to advertise support for WorkspaceSymbols via the client capability\n *  `workspace.symbol.resolveSupport`.\n *\n */\nvar WorkspaceSymbolRequest;\n(function (WorkspaceSymbolRequest) {\n    WorkspaceSymbolRequest.method = 'workspace/symbol';\n    WorkspaceSymbolRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WorkspaceSymbolRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolRequest.method);\n})(WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = WorkspaceSymbolRequest = {}));\n/**\n * A request to resolve the range inside the workspace\n * symbol's location.\n *\n * @since 3.17.0\n */\nvar WorkspaceSymbolResolveRequest;\n(function (WorkspaceSymbolResolveRequest) {\n    WorkspaceSymbolResolveRequest.method = 'workspaceSymbol/resolve';\n    WorkspaceSymbolResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WorkspaceSymbolResolveRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolResolveRequest.method);\n})(WorkspaceSymbolResolveRequest || (exports.WorkspaceSymbolResolveRequest = WorkspaceSymbolResolveRequest = {}));\n/**\n * A request to provide code lens for the given text document.\n */\nvar CodeLensRequest;\n(function (CodeLensRequest) {\n    CodeLensRequest.method = 'textDocument/codeLens';\n    CodeLensRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CodeLensRequest.type = new messages_1.ProtocolRequestType(CodeLensRequest.method);\n})(CodeLensRequest || (exports.CodeLensRequest = CodeLensRequest = {}));\n/**\n * A request to resolve a command for a given code lens.\n */\nvar CodeLensResolveRequest;\n(function (CodeLensResolveRequest) {\n    CodeLensResolveRequest.method = 'codeLens/resolve';\n    CodeLensResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CodeLensResolveRequest.type = new messages_1.ProtocolRequestType(CodeLensResolveRequest.method);\n})(CodeLensResolveRequest || (exports.CodeLensResolveRequest = CodeLensResolveRequest = {}));\n/**\n * A request to refresh all code actions\n *\n * @since 3.16.0\n */\nvar CodeLensRefreshRequest;\n(function (CodeLensRefreshRequest) {\n    CodeLensRefreshRequest.method = `workspace/codeLens/refresh`;\n    CodeLensRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    CodeLensRefreshRequest.type = new messages_1.ProtocolRequestType0(CodeLensRefreshRequest.method);\n})(CodeLensRefreshRequest || (exports.CodeLensRefreshRequest = CodeLensRefreshRequest = {}));\n/**\n * A request to provide document links\n */\nvar DocumentLinkRequest;\n(function (DocumentLinkRequest) {\n    DocumentLinkRequest.method = 'textDocument/documentLink';\n    DocumentLinkRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentLinkRequest.type = new messages_1.ProtocolRequestType(DocumentLinkRequest.method);\n})(DocumentLinkRequest || (exports.DocumentLinkRequest = DocumentLinkRequest = {}));\n/**\n * Request to resolve additional information for a given document link. The request's\n * parameter is of type {@link DocumentLink} the response\n * is of type {@link DocumentLink} or a Thenable that resolves to such.\n */\nvar DocumentLinkResolveRequest;\n(function (DocumentLinkResolveRequest) {\n    DocumentLinkResolveRequest.method = 'documentLink/resolve';\n    DocumentLinkResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentLinkResolveRequest.type = new messages_1.ProtocolRequestType(DocumentLinkResolveRequest.method);\n})(DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = DocumentLinkResolveRequest = {}));\n/**\n * A request to format a whole document.\n */\nvar DocumentFormattingRequest;\n(function (DocumentFormattingRequest) {\n    DocumentFormattingRequest.method = 'textDocument/formatting';\n    DocumentFormattingRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentFormattingRequest.method);\n})(DocumentFormattingRequest || (exports.DocumentFormattingRequest = DocumentFormattingRequest = {}));\n/**\n * A request to format a range in a document.\n */\nvar DocumentRangeFormattingRequest;\n(function (DocumentRangeFormattingRequest) {\n    DocumentRangeFormattingRequest.method = 'textDocument/rangeFormatting';\n    DocumentRangeFormattingRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentRangeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangeFormattingRequest.method);\n})(DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = DocumentRangeFormattingRequest = {}));\n/**\n * A request to format ranges in a document.\n *\n * @since 3.18.0\n * @proposed\n */\nvar DocumentRangesFormattingRequest;\n(function (DocumentRangesFormattingRequest) {\n    DocumentRangesFormattingRequest.method = 'textDocument/rangesFormatting';\n    DocumentRangesFormattingRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentRangesFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangesFormattingRequest.method);\n})(DocumentRangesFormattingRequest || (exports.DocumentRangesFormattingRequest = DocumentRangesFormattingRequest = {}));\n/**\n * A request to format a document on type.\n */\nvar DocumentOnTypeFormattingRequest;\n(function (DocumentOnTypeFormattingRequest) {\n    DocumentOnTypeFormattingRequest.method = 'textDocument/onTypeFormatting';\n    DocumentOnTypeFormattingRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentOnTypeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentOnTypeFormattingRequest.method);\n})(DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = DocumentOnTypeFormattingRequest = {}));\n//---- Rename ----------------------------------------------\nvar PrepareSupportDefaultBehavior;\n(function (PrepareSupportDefaultBehavior) {\n    /**\n     * The client's default behavior is to select the identifier\n     * according the to language's syntax rule.\n     */\n    PrepareSupportDefaultBehavior.Identifier = 1;\n})(PrepareSupportDefaultBehavior || (exports.PrepareSupportDefaultBehavior = PrepareSupportDefaultBehavior = {}));\n/**\n * A request to rename a symbol.\n */\nvar RenameRequest;\n(function (RenameRequest) {\n    RenameRequest.method = 'textDocument/rename';\n    RenameRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    RenameRequest.type = new messages_1.ProtocolRequestType(RenameRequest.method);\n})(RenameRequest || (exports.RenameRequest = RenameRequest = {}));\n/**\n * A request to test and perform the setup necessary for a rename.\n *\n * @since 3.16 - support for default behavior\n */\nvar PrepareRenameRequest;\n(function (PrepareRenameRequest) {\n    PrepareRenameRequest.method = 'textDocument/prepareRename';\n    PrepareRenameRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    PrepareRenameRequest.type = new messages_1.ProtocolRequestType(PrepareRenameRequest.method);\n})(PrepareRenameRequest || (exports.PrepareRenameRequest = PrepareRenameRequest = {}));\n/**\n * A request send from the client to the server to execute a command. The request might return\n * a workspace edit which the client will apply to the workspace.\n */\nvar ExecuteCommandRequest;\n(function (ExecuteCommandRequest) {\n    ExecuteCommandRequest.method = 'workspace/executeCommand';\n    ExecuteCommandRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    ExecuteCommandRequest.type = new messages_1.ProtocolRequestType(ExecuteCommandRequest.method);\n})(ExecuteCommandRequest || (exports.ExecuteCommandRequest = ExecuteCommandRequest = {}));\n/**\n * A request sent from the server to the client to modified certain resources.\n */\nvar ApplyWorkspaceEditRequest;\n(function (ApplyWorkspaceEditRequest) {\n    ApplyWorkspaceEditRequest.method = 'workspace/applyEdit';\n    ApplyWorkspaceEditRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    ApplyWorkspaceEditRequest.type = new messages_1.ProtocolRequestType('workspace/applyEdit');\n})(ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = ApplyWorkspaceEditRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createProtocolConnection = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nfunction createProtocolConnection(input, output, logger, options) {\n    if (vscode_jsonrpc_1.ConnectionStrategy.is(options)) {\n        options = { connectionStrategy: options };\n    }\n    return (0, vscode_jsonrpc_1.createMessageConnection)(input, output, logger, options);\n}\nexports.createProtocolConnection = createProtocolConnection;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LSPErrorCodes = exports.createProtocolConnection = void 0;\n__exportStar(require(\"vscode-jsonrpc\"), exports);\n__exportStar(require(\"vscode-languageserver-types\"), exports);\n__exportStar(require(\"./messages\"), exports);\n__exportStar(require(\"./protocol\"), exports);\nvar connection_1 = require(\"./connection\");\nObject.defineProperty(exports, \"createProtocolConnection\", { enumerable: true, get: function () { return connection_1.createProtocolConnection; } });\nvar LSPErrorCodes;\n(function (LSPErrorCodes) {\n    /**\n    * This is the start range of LSP reserved error codes.\n    * It doesn't denote a real error code.\n    *\n    * @since 3.16.0\n    */\n    LSPErrorCodes.lspReservedErrorRangeStart = -32899;\n    /**\n     * A request failed but it was syntactically correct, e.g the\n     * method name was known and the parameters were valid. The error\n     * message should contain human readable information about why\n     * the request failed.\n     *\n     * @since 3.17.0\n     */\n    LSPErrorCodes.RequestFailed = -32803;\n    /**\n     * The server cancelled the request. This error code should\n     * only be used for requests that explicitly support being\n     * server cancellable.\n     *\n     * @since 3.17.0\n     */\n    LSPErrorCodes.ServerCancelled = -32802;\n    /**\n     * The server detected that the content of a document got\n     * modified outside normal conditions. A server should\n     * NOT send this error code if it detects a content change\n     * in it unprocessed messages. The result even computed\n     * on an older state might still be useful for the client.\n     *\n     * If a client decides that a result is not of any use anymore\n     * the client should cancel the request.\n     */\n    LSPErrorCodes.ContentModified = -32801;\n    /**\n     * The client has canceled a request and a server as detected\n     * the cancel.\n     */\n    LSPErrorCodes.RequestCancelled = -32800;\n    /**\n    * This is the end range of LSP reserved error codes.\n    * It doesn't denote a real error code.\n    *\n    * @since 3.16.0\n    */\n    LSPErrorCodes.lspReservedErrorRangeEnd = -32800;\n})(LSPErrorCodes || (exports.LSPErrorCodes = LSPErrorCodes = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createProtocolConnection = void 0;\nconst node_1 = require(\"vscode-jsonrpc/node\");\n__exportStar(require(\"vscode-jsonrpc/node\"), exports);\n__exportStar(require(\"../common/api\"), exports);\nfunction createProtocolConnection(input, output, logger, options) {\n    return (0, node_1.createMessageConnection)(input, output, logger, options);\n}\nexports.createProtocolConnection = createProtocolConnection;\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateUuid = exports.parse = exports.isUUID = exports.v4 = exports.empty = void 0;\nclass ValueUUID {\n    constructor(_value) {\n        this._value = _value;\n        // empty\n    }\n    asHex() {\n        return this._value;\n    }\n    equals(other) {\n        return this.asHex() === other.asHex();\n    }\n}\nclass V4UUID extends ValueUUID {\n    static _oneOf(array) {\n        return array[Math.floor(array.length * Math.random())];\n    }\n    static _randomHex() {\n        return V4UUID._oneOf(V4UUID._chars);\n    }\n    constructor() {\n        super([\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            '4',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._oneOf(V4UUID._timeHighBits),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n        ].join(''));\n    }\n}\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\n/**\n * An empty UUID that contains only zeros.\n */\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\nfunction v4() {\n    return new V4UUID();\n}\nexports.v4 = v4;\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\nfunction isUUID(value) {\n    return _UUIDPattern.test(value);\n}\nexports.isUUID = isUUID;\n/**\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n * @param value A uuid string.\n */\nfunction parse(value) {\n    if (!isUUID(value)) {\n        throw new Error('invalid uuid');\n    }\n    return new ValueUUID(value);\n}\nexports.parse = parse;\nfunction generateUuid() {\n    return v4().asHex();\n}\nexports.generateUuid = generateUuid;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.attachPartialResult = exports.ProgressFeature = exports.attachWorkDone = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst uuid_1 = require(\"./utils/uuid\");\nclass WorkDoneProgressReporterImpl {\n    constructor(_connection, _token) {\n        this._connection = _connection;\n        this._token = _token;\n        WorkDoneProgressReporterImpl.Instances.set(this._token, this);\n    }\n    begin(title, percentage, message, cancellable) {\n        let param = {\n            kind: 'begin',\n            title,\n            percentage,\n            message,\n            cancellable\n        };\n        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, param);\n    }\n    report(arg0, arg1) {\n        let param = {\n            kind: 'report'\n        };\n        if (typeof arg0 === 'number') {\n            param.percentage = arg0;\n            if (arg1 !== undefined) {\n                param.message = arg1;\n            }\n        }\n        else {\n            param.message = arg0;\n        }\n        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, param);\n    }\n    done() {\n        WorkDoneProgressReporterImpl.Instances.delete(this._token);\n        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, { kind: 'end' });\n    }\n}\nWorkDoneProgressReporterImpl.Instances = new Map();\nclass WorkDoneProgressServerReporterImpl extends WorkDoneProgressReporterImpl {\n    constructor(connection, token) {\n        super(connection, token);\n        this._source = new vscode_languageserver_protocol_1.CancellationTokenSource();\n    }\n    get token() {\n        return this._source.token;\n    }\n    done() {\n        this._source.dispose();\n        super.done();\n    }\n    cancel() {\n        this._source.cancel();\n    }\n}\nclass NullProgressReporter {\n    constructor() {\n    }\n    begin() {\n    }\n    report() {\n    }\n    done() {\n    }\n}\nclass NullProgressServerReporter extends NullProgressReporter {\n    constructor() {\n        super();\n        this._source = new vscode_languageserver_protocol_1.CancellationTokenSource();\n    }\n    get token() {\n        return this._source.token;\n    }\n    done() {\n        this._source.dispose();\n    }\n    cancel() {\n        this._source.cancel();\n    }\n}\nfunction attachWorkDone(connection, params) {\n    if (params === undefined || params.workDoneToken === undefined) {\n        return new NullProgressReporter();\n    }\n    const token = params.workDoneToken;\n    delete params.workDoneToken;\n    return new WorkDoneProgressReporterImpl(connection, token);\n}\nexports.attachWorkDone = attachWorkDone;\nconst ProgressFeature = (Base) => {\n    return class extends Base {\n        constructor() {\n            super();\n            this._progressSupported = false;\n        }\n        initialize(capabilities) {\n            super.initialize(capabilities);\n            if (capabilities?.window?.workDoneProgress === true) {\n                this._progressSupported = true;\n                this.connection.onNotification(vscode_languageserver_protocol_1.WorkDoneProgressCancelNotification.type, (params) => {\n                    let progress = WorkDoneProgressReporterImpl.Instances.get(params.token);\n                    if (progress instanceof WorkDoneProgressServerReporterImpl || progress instanceof NullProgressServerReporter) {\n                        progress.cancel();\n                    }\n                });\n            }\n        }\n        attachWorkDoneProgress(token) {\n            if (token === undefined) {\n                return new NullProgressReporter();\n            }\n            else {\n                return new WorkDoneProgressReporterImpl(this.connection, token);\n            }\n        }\n        createWorkDoneProgress() {\n            if (this._progressSupported) {\n                const token = (0, uuid_1.generateUuid)();\n                return this.connection.sendRequest(vscode_languageserver_protocol_1.WorkDoneProgressCreateRequest.type, { token }).then(() => {\n                    const result = new WorkDoneProgressServerReporterImpl(this.connection, token);\n                    return result;\n                });\n            }\n            else {\n                return Promise.resolve(new NullProgressServerReporter());\n            }\n        }\n    };\n};\nexports.ProgressFeature = ProgressFeature;\nvar ResultProgress;\n(function (ResultProgress) {\n    ResultProgress.type = new vscode_languageserver_protocol_1.ProgressType();\n})(ResultProgress || (ResultProgress = {}));\nclass ResultProgressReporterImpl {\n    constructor(_connection, _token) {\n        this._connection = _connection;\n        this._token = _token;\n    }\n    report(data) {\n        this._connection.sendProgress(ResultProgress.type, this._token, data);\n    }\n}\nfunction attachPartialResult(connection, params) {\n    if (params === undefined || params.partialResultToken === undefined) {\n        return undefined;\n    }\n    const token = params.partialResultToken;\n    delete params.partialResultToken;\n    return new ResultProgressReporterImpl(connection, token);\n}\nexports.attachPartialResult = attachPartialResult;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigurationFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nconst ConfigurationFeature = (Base) => {\n    return class extends Base {\n        getConfiguration(arg) {\n            if (!arg) {\n                return this._getConfiguration({});\n            }\n            else if (Is.string(arg)) {\n                return this._getConfiguration({ section: arg });\n            }\n            else {\n                return this._getConfiguration(arg);\n            }\n        }\n        _getConfiguration(arg) {\n            let params = {\n                items: Array.isArray(arg) ? arg : [arg]\n            };\n            return this.connection.sendRequest(vscode_languageserver_protocol_1.ConfigurationRequest.type, params).then((result) => {\n                if (Array.isArray(result)) {\n                    return Array.isArray(arg) ? result : result[0];\n                }\n                else {\n                    return Array.isArray(arg) ? [] : null;\n                }\n            });\n        }\n    };\n};\nexports.ConfigurationFeature = ConfigurationFeature;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkspaceFoldersFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst WorkspaceFoldersFeature = (Base) => {\n    return class extends Base {\n        constructor() {\n            super();\n            this._notificationIsAutoRegistered = false;\n        }\n        initialize(capabilities) {\n            super.initialize(capabilities);\n            let workspaceCapabilities = capabilities.workspace;\n            if (workspaceCapabilities && workspaceCapabilities.workspaceFolders) {\n                this._onDidChangeWorkspaceFolders = new vscode_languageserver_protocol_1.Emitter();\n                this.connection.onNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, (params) => {\n                    this._onDidChangeWorkspaceFolders.fire(params.event);\n                });\n            }\n        }\n        fillServerCapabilities(capabilities) {\n            super.fillServerCapabilities(capabilities);\n            const changeNotifications = capabilities.workspace?.workspaceFolders?.changeNotifications;\n            this._notificationIsAutoRegistered = changeNotifications === true || typeof changeNotifications === 'string';\n        }\n        getWorkspaceFolders() {\n            return this.connection.sendRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type);\n        }\n        get onDidChangeWorkspaceFolders() {\n            if (!this._onDidChangeWorkspaceFolders) {\n                throw new Error('Client doesn\\'t support sending workspace folder change events.');\n            }\n            if (!this._notificationIsAutoRegistered && !this._unregistration) {\n                this._unregistration = this.connection.client.register(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type);\n            }\n            return this._onDidChangeWorkspaceFolders.event;\n        }\n    };\n};\nexports.WorkspaceFoldersFeature = WorkspaceFoldersFeature;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallHierarchyFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst CallHierarchyFeature = (Base) => {\n    return class extends Base {\n        get callHierarchy() {\n            return {\n                onPrepare: (handler) => {\n                    return this.connection.onRequest(vscode_languageserver_protocol_1.CallHierarchyPrepareRequest.type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), undefined);\n                    });\n                },\n                onIncomingCalls: (handler) => {\n                    const type = vscode_languageserver_protocol_1.CallHierarchyIncomingCallsRequest.type;\n                    return this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                },\n                onOutgoingCalls: (handler) => {\n                    const type = vscode_languageserver_protocol_1.CallHierarchyOutgoingCallsRequest.type;\n                    return this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                }\n            };\n        }\n    };\n};\nexports.CallHierarchyFeature = CallHierarchyFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticTokensBuilder = exports.SemanticTokensDiff = exports.SemanticTokensFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst SemanticTokensFeature = (Base) => {\n    return class extends Base {\n        get semanticTokens() {\n            return {\n                refresh: () => {\n                    return this.connection.sendRequest(vscode_languageserver_protocol_1.SemanticTokensRefreshRequest.type);\n                },\n                on: (handler) => {\n                    const type = vscode_languageserver_protocol_1.SemanticTokensRequest.type;\n                    return this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                },\n                onDelta: (handler) => {\n                    const type = vscode_languageserver_protocol_1.SemanticTokensDeltaRequest.type;\n                    return this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                },\n                onRange: (handler) => {\n                    const type = vscode_languageserver_protocol_1.SemanticTokensRangeRequest.type;\n                    return this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                }\n            };\n        }\n    };\n};\nexports.SemanticTokensFeature = SemanticTokensFeature;\nclass SemanticTokensDiff {\n    constructor(originalSequence, modifiedSequence) {\n        this.originalSequence = originalSequence;\n        this.modifiedSequence = modifiedSequence;\n    }\n    computeDiff() {\n        const originalLength = this.originalSequence.length;\n        const modifiedLength = this.modifiedSequence.length;\n        let startIndex = 0;\n        while (startIndex < modifiedLength && startIndex < originalLength && this.originalSequence[startIndex] === this.modifiedSequence[startIndex]) {\n            startIndex++;\n        }\n        if (startIndex < modifiedLength && startIndex < originalLength) {\n            let originalEndIndex = originalLength - 1;\n            let modifiedEndIndex = modifiedLength - 1;\n            while (originalEndIndex >= startIndex && modifiedEndIndex >= startIndex && this.originalSequence[originalEndIndex] === this.modifiedSequence[modifiedEndIndex]) {\n                originalEndIndex--;\n                modifiedEndIndex--;\n            }\n            // if one moved behind the start index move them forward again\n            if (originalEndIndex < startIndex || modifiedEndIndex < startIndex) {\n                originalEndIndex++;\n                modifiedEndIndex++;\n            }\n            const deleteCount = originalEndIndex - startIndex + 1;\n            const newData = this.modifiedSequence.slice(startIndex, modifiedEndIndex + 1);\n            // If we moved behind the start index we could have missed a simple delete.\n            if (newData.length === 1 && newData[0] === this.originalSequence[originalEndIndex]) {\n                return [\n                    { start: startIndex, deleteCount: deleteCount - 1 }\n                ];\n            }\n            else {\n                return [\n                    { start: startIndex, deleteCount, data: newData }\n                ];\n            }\n        }\n        else if (startIndex < modifiedLength) {\n            return [\n                { start: startIndex, deleteCount: 0, data: this.modifiedSequence.slice(startIndex) }\n            ];\n        }\n        else if (startIndex < originalLength) {\n            return [\n                { start: startIndex, deleteCount: originalLength - startIndex }\n            ];\n        }\n        else {\n            // The two arrays are the same.\n            return [];\n        }\n    }\n}\nexports.SemanticTokensDiff = SemanticTokensDiff;\nclass SemanticTokensBuilder {\n    constructor() {\n        this._prevData = undefined;\n        this.initialize();\n    }\n    initialize() {\n        this._id = Date.now();\n        this._prevLine = 0;\n        this._prevChar = 0;\n        this._data = [];\n        this._dataLen = 0;\n    }\n    push(line, char, length, tokenType, tokenModifiers) {\n        let pushLine = line;\n        let pushChar = char;\n        if (this._dataLen > 0) {\n            pushLine -= this._prevLine;\n            if (pushLine === 0) {\n                pushChar -= this._prevChar;\n            }\n        }\n        this._data[this._dataLen++] = pushLine;\n        this._data[this._dataLen++] = pushChar;\n        this._data[this._dataLen++] = length;\n        this._data[this._dataLen++] = tokenType;\n        this._data[this._dataLen++] = tokenModifiers;\n        this._prevLine = line;\n        this._prevChar = char;\n    }\n    get id() {\n        return this._id.toString();\n    }\n    previousResult(id) {\n        if (this.id === id) {\n            this._prevData = this._data;\n        }\n        this.initialize();\n    }\n    build() {\n        this._prevData = undefined;\n        return {\n            resultId: this.id,\n            data: this._data\n        };\n    }\n    canBuildEdits() {\n        return this._prevData !== undefined;\n    }\n    buildEdits() {\n        if (this._prevData !== undefined) {\n            return {\n                resultId: this.id,\n                edits: (new SemanticTokensDiff(this._prevData, this._data)).computeDiff()\n            };\n        }\n        else {\n            return this.build();\n        }\n    }\n}\nexports.SemanticTokensBuilder = SemanticTokensBuilder;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShowDocumentFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst ShowDocumentFeature = (Base) => {\n    return class extends Base {\n        showDocument(params) {\n            return this.connection.sendRequest(vscode_languageserver_protocol_1.ShowDocumentRequest.type, params);\n        }\n    };\n};\nexports.ShowDocumentFeature = ShowDocumentFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FileOperationsFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst FileOperationsFeature = (Base) => {\n    return class extends Base {\n        onDidCreateFiles(handler) {\n            return this.connection.onNotification(vscode_languageserver_protocol_1.DidCreateFilesNotification.type, (params) => {\n                handler(params);\n            });\n        }\n        onDidRenameFiles(handler) {\n            return this.connection.onNotification(vscode_languageserver_protocol_1.DidRenameFilesNotification.type, (params) => {\n                handler(params);\n            });\n        }\n        onDidDeleteFiles(handler) {\n            return this.connection.onNotification(vscode_languageserver_protocol_1.DidDeleteFilesNotification.type, (params) => {\n                handler(params);\n            });\n        }\n        onWillCreateFiles(handler) {\n            return this.connection.onRequest(vscode_languageserver_protocol_1.WillCreateFilesRequest.type, (params, cancel) => {\n                return handler(params, cancel);\n            });\n        }\n        onWillRenameFiles(handler) {\n            return this.connection.onRequest(vscode_languageserver_protocol_1.WillRenameFilesRequest.type, (params, cancel) => {\n                return handler(params, cancel);\n            });\n        }\n        onWillDeleteFiles(handler) {\n            return this.connection.onRequest(vscode_languageserver_protocol_1.WillDeleteFilesRequest.type, (params, cancel) => {\n                return handler(params, cancel);\n            });\n        }\n    };\n};\nexports.FileOperationsFeature = FileOperationsFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinkedEditingRangeFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst LinkedEditingRangeFeature = (Base) => {\n    return class extends Base {\n        onLinkedEditingRange(handler) {\n            return this.connection.onRequest(vscode_languageserver_protocol_1.LinkedEditingRangeRequest.type, (params, cancel) => {\n                return handler(params, cancel, this.attachWorkDoneProgress(params), undefined);\n            });\n        }\n    };\n};\nexports.LinkedEditingRangeFeature = LinkedEditingRangeFeature;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeHierarchyFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst TypeHierarchyFeature = (Base) => {\n    return class extends Base {\n        get typeHierarchy() {\n            return {\n                onPrepare: (handler) => {\n                    return this.connection.onRequest(vscode_languageserver_protocol_1.TypeHierarchyPrepareRequest.type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), undefined);\n                    });\n                },\n                onSupertypes: (handler) => {\n                    const type = vscode_languageserver_protocol_1.TypeHierarchySupertypesRequest.type;\n                    return this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                },\n                onSubtypes: (handler) => {\n                    const type = vscode_languageserver_protocol_1.TypeHierarchySubtypesRequest.type;\n                    return this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                }\n            };\n        }\n    };\n};\nexports.TypeHierarchyFeature = TypeHierarchyFeature;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlineValueFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst InlineValueFeature = (Base) => {\n    return class extends Base {\n        get inlineValue() {\n            return {\n                refresh: () => {\n                    return this.connection.sendRequest(vscode_languageserver_protocol_1.InlineValueRefreshRequest.type);\n                },\n                on: (handler) => {\n                    return this.connection.onRequest(vscode_languageserver_protocol_1.InlineValueRequest.type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params));\n                    });\n                }\n            };\n        }\n    };\n};\nexports.InlineValueFeature = InlineValueFeature;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FoldingRangeFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst FoldingRangeFeature = (Base) => {\n    return class extends Base {\n        get foldingRange() {\n            return {\n                refresh: () => {\n                    return this.connection.sendRequest(vscode_languageserver_protocol_1.FoldingRangeRefreshRequest.type);\n                },\n                on: (handler) => {\n                    const type = vscode_languageserver_protocol_1.FoldingRangeRequest.type;\n                    return this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                }\n            };\n        }\n    };\n};\nexports.FoldingRangeFeature = FoldingRangeFeature;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlayHintFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst InlayHintFeature = (Base) => {\n    return class extends Base {\n        get inlayHint() {\n            return {\n                refresh: () => {\n                    return this.connection.sendRequest(vscode_languageserver_protocol_1.InlayHintRefreshRequest.type);\n                },\n                on: (handler) => {\n                    return this.connection.onRequest(vscode_languageserver_protocol_1.InlayHintRequest.type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params));\n                    });\n                },\n                resolve: (handler) => {\n                    return this.connection.onRequest(vscode_languageserver_protocol_1.InlayHintResolveRequest.type, (params, cancel) => {\n                        return handler(params, cancel);\n                    });\n                }\n            };\n        }\n    };\n};\nexports.InlayHintFeature = InlayHintFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiagnosticFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst DiagnosticFeature = (Base) => {\n    return class extends Base {\n        get diagnostics() {\n            return {\n                refresh: () => {\n                    return this.connection.sendRequest(vscode_languageserver_protocol_1.DiagnosticRefreshRequest.type);\n                },\n                on: (handler) => {\n                    return this.connection.onRequest(vscode_languageserver_protocol_1.DocumentDiagnosticRequest.type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(vscode_languageserver_protocol_1.DocumentDiagnosticRequest.partialResult, params));\n                    });\n                },\n                onWorkspace: (handler) => {\n                    return this.connection.onRequest(vscode_languageserver_protocol_1.WorkspaceDiagnosticRequest.type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(vscode_languageserver_protocol_1.WorkspaceDiagnosticRequest.partialResult, params));\n                    });\n                }\n            };\n        }\n    };\n};\nexports.DiagnosticFeature = DiagnosticFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextDocuments = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\n/**\n * A manager for simple text documents. The manager requires at a minimum that\n * the server registered for the following text document sync events in the\n * initialize handler or via dynamic registration:\n *\n * - open and close events.\n * - change events.\n *\n * Registering for save and will save events is optional.\n */\nclass TextDocuments {\n    /**\n     * Create a new text document manager.\n     */\n    constructor(configuration) {\n        this._configuration = configuration;\n        this._syncedDocuments = new Map();\n        this._onDidChangeContent = new vscode_languageserver_protocol_1.Emitter();\n        this._onDidOpen = new vscode_languageserver_protocol_1.Emitter();\n        this._onDidClose = new vscode_languageserver_protocol_1.Emitter();\n        this._onDidSave = new vscode_languageserver_protocol_1.Emitter();\n        this._onWillSave = new vscode_languageserver_protocol_1.Emitter();\n    }\n    /**\n     * An event that fires when a text document managed by this manager\n     * has been opened.\n     */\n    get onDidOpen() {\n        return this._onDidOpen.event;\n    }\n    /**\n     * An event that fires when a text document managed by this manager\n     * has been opened or the content changes.\n     */\n    get onDidChangeContent() {\n        return this._onDidChangeContent.event;\n    }\n    /**\n     * An event that fires when a text document managed by this manager\n     * will be saved.\n     */\n    get onWillSave() {\n        return this._onWillSave.event;\n    }\n    /**\n     * Sets a handler that will be called if a participant wants to provide\n     * edits during a text document save.\n     */\n    onWillSaveWaitUntil(handler) {\n        this._willSaveWaitUntil = handler;\n    }\n    /**\n     * An event that fires when a text document managed by this manager\n     * has been saved.\n     */\n    get onDidSave() {\n        return this._onDidSave.event;\n    }\n    /**\n     * An event that fires when a text document managed by this manager\n     * has been closed.\n     */\n    get onDidClose() {\n        return this._onDidClose.event;\n    }\n    /**\n     * Returns the document for the given URI. Returns undefined if\n     * the document is not managed by this instance.\n     *\n     * @param uri The text document's URI to retrieve.\n     * @return the text document or `undefined`.\n     */\n    get(uri) {\n        return this._syncedDocuments.get(uri);\n    }\n    /**\n     * Returns all text documents managed by this instance.\n     *\n     * @return all text documents.\n     */\n    all() {\n        return Array.from(this._syncedDocuments.values());\n    }\n    /**\n     * Returns the URIs of all text documents managed by this instance.\n     *\n     * @return the URI's of all text documents.\n     */\n    keys() {\n        return Array.from(this._syncedDocuments.keys());\n    }\n    /**\n     * Listens for `low level` notification on the given connection to\n     * update the text documents managed by this instance.\n     *\n     * Please note that the connection only provides handlers not an event model. Therefore\n     * listening on a connection will overwrite the following handlers on a connection:\n     * `onDidOpenTextDocument`, `onDidChangeTextDocument`, `onDidCloseTextDocument`,\n     * `onWillSaveTextDocument`, `onWillSaveTextDocumentWaitUntil` and `onDidSaveTextDocument`.\n     *\n     * Use the corresponding events on the TextDocuments instance instead.\n     *\n     * @param connection The connection to listen on.\n     */\n    listen(connection) {\n        connection.__textDocumentSync = vscode_languageserver_protocol_1.TextDocumentSyncKind.Incremental;\n        const disposables = [];\n        disposables.push(connection.onDidOpenTextDocument((event) => {\n            const td = event.textDocument;\n            const document = this._configuration.create(td.uri, td.languageId, td.version, td.text);\n            this._syncedDocuments.set(td.uri, document);\n            const toFire = Object.freeze({ document });\n            this._onDidOpen.fire(toFire);\n            this._onDidChangeContent.fire(toFire);\n        }));\n        disposables.push(connection.onDidChangeTextDocument((event) => {\n            const td = event.textDocument;\n            const changes = event.contentChanges;\n            if (changes.length === 0) {\n                return;\n            }\n            const { version } = td;\n            if (version === null || version === undefined) {\n                throw new Error(`Received document change event for ${td.uri} without valid version identifier`);\n            }\n            let syncedDocument = this._syncedDocuments.get(td.uri);\n            if (syncedDocument !== undefined) {\n                syncedDocument = this._configuration.update(syncedDocument, changes, version);\n                this._syncedDocuments.set(td.uri, syncedDocument);\n                this._onDidChangeContent.fire(Object.freeze({ document: syncedDocument }));\n            }\n        }));\n        disposables.push(connection.onDidCloseTextDocument((event) => {\n            let syncedDocument = this._syncedDocuments.get(event.textDocument.uri);\n            if (syncedDocument !== undefined) {\n                this._syncedDocuments.delete(event.textDocument.uri);\n                this._onDidClose.fire(Object.freeze({ document: syncedDocument }));\n            }\n        }));\n        disposables.push(connection.onWillSaveTextDocument((event) => {\n            let syncedDocument = this._syncedDocuments.get(event.textDocument.uri);\n            if (syncedDocument !== undefined) {\n                this._onWillSave.fire(Object.freeze({ document: syncedDocument, reason: event.reason }));\n            }\n        }));\n        disposables.push(connection.onWillSaveTextDocumentWaitUntil((event, token) => {\n            let syncedDocument = this._syncedDocuments.get(event.textDocument.uri);\n            if (syncedDocument !== undefined && this._willSaveWaitUntil) {\n                return this._willSaveWaitUntil(Object.freeze({ document: syncedDocument, reason: event.reason }), token);\n            }\n            else {\n                return [];\n            }\n        }));\n        disposables.push(connection.onDidSaveTextDocument((event) => {\n            let syncedDocument = this._syncedDocuments.get(event.textDocument.uri);\n            if (syncedDocument !== undefined) {\n                this._onDidSave.fire(Object.freeze({ document: syncedDocument }));\n            }\n        }));\n        return vscode_languageserver_protocol_1.Disposable.create(() => { disposables.forEach(disposable => disposable.dispose()); });\n    }\n}\nexports.TextDocuments = TextDocuments;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NotebookDocuments = exports.NotebookSyncFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst textDocuments_1 = require(\"./textDocuments\");\nconst NotebookSyncFeature = (Base) => {\n    return class extends Base {\n        get synchronization() {\n            return {\n                onDidOpenNotebookDocument: (handler) => {\n                    return this.connection.onNotification(vscode_languageserver_protocol_1.DidOpenNotebookDocumentNotification.type, (params) => {\n                        handler(params);\n                    });\n                },\n                onDidChangeNotebookDocument: (handler) => {\n                    return this.connection.onNotification(vscode_languageserver_protocol_1.DidChangeNotebookDocumentNotification.type, (params) => {\n                        handler(params);\n                    });\n                },\n                onDidSaveNotebookDocument: (handler) => {\n                    return this.connection.onNotification(vscode_languageserver_protocol_1.DidSaveNotebookDocumentNotification.type, (params) => {\n                        handler(params);\n                    });\n                },\n                onDidCloseNotebookDocument: (handler) => {\n                    return this.connection.onNotification(vscode_languageserver_protocol_1.DidCloseNotebookDocumentNotification.type, (params) => {\n                        handler(params);\n                    });\n                }\n            };\n        }\n    };\n};\nexports.NotebookSyncFeature = NotebookSyncFeature;\nclass CellTextDocumentConnection {\n    onDidOpenTextDocument(handler) {\n        this.openHandler = handler;\n        return vscode_languageserver_protocol_1.Disposable.create(() => { this.openHandler = undefined; });\n    }\n    openTextDocument(params) {\n        this.openHandler && this.openHandler(params);\n    }\n    onDidChangeTextDocument(handler) {\n        this.changeHandler = handler;\n        return vscode_languageserver_protocol_1.Disposable.create(() => { this.changeHandler = handler; });\n    }\n    changeTextDocument(params) {\n        this.changeHandler && this.changeHandler(params);\n    }\n    onDidCloseTextDocument(handler) {\n        this.closeHandler = handler;\n        return vscode_languageserver_protocol_1.Disposable.create(() => { this.closeHandler = undefined; });\n    }\n    closeTextDocument(params) {\n        this.closeHandler && this.closeHandler(params);\n    }\n    onWillSaveTextDocument() {\n        return CellTextDocumentConnection.NULL_DISPOSE;\n    }\n    onWillSaveTextDocumentWaitUntil() {\n        return CellTextDocumentConnection.NULL_DISPOSE;\n    }\n    onDidSaveTextDocument() {\n        return CellTextDocumentConnection.NULL_DISPOSE;\n    }\n}\nCellTextDocumentConnection.NULL_DISPOSE = Object.freeze({ dispose: () => { } });\nclass NotebookDocuments {\n    constructor(configurationOrTextDocuments) {\n        if (configurationOrTextDocuments instanceof textDocuments_1.TextDocuments) {\n            this._cellTextDocuments = configurationOrTextDocuments;\n        }\n        else {\n            this._cellTextDocuments = new textDocuments_1.TextDocuments(configurationOrTextDocuments);\n        }\n        this.notebookDocuments = new Map();\n        this.notebookCellMap = new Map();\n        this._onDidOpen = new vscode_languageserver_protocol_1.Emitter();\n        this._onDidChange = new vscode_languageserver_protocol_1.Emitter();\n        this._onDidSave = new vscode_languageserver_protocol_1.Emitter();\n        this._onDidClose = new vscode_languageserver_protocol_1.Emitter();\n    }\n    get cellTextDocuments() {\n        return this._cellTextDocuments;\n    }\n    getCellTextDocument(cell) {\n        return this._cellTextDocuments.get(cell.document);\n    }\n    getNotebookDocument(uri) {\n        return this.notebookDocuments.get(uri);\n    }\n    getNotebookCell(uri) {\n        const value = this.notebookCellMap.get(uri);\n        return value && value[0];\n    }\n    findNotebookDocumentForCell(cell) {\n        const key = typeof cell === 'string' ? cell : cell.document;\n        const value = this.notebookCellMap.get(key);\n        return value && value[1];\n    }\n    get onDidOpen() {\n        return this._onDidOpen.event;\n    }\n    get onDidSave() {\n        return this._onDidSave.event;\n    }\n    get onDidChange() {\n        return this._onDidChange.event;\n    }\n    get onDidClose() {\n        return this._onDidClose.event;\n    }\n    /**\n     * Listens for `low level` notification on the given connection to\n     * update the notebook documents managed by this instance.\n     *\n     * Please note that the connection only provides handlers not an event model. Therefore\n     * listening on a connection will overwrite the following handlers on a connection:\n     * `onDidOpenNotebookDocument`, `onDidChangeNotebookDocument`, `onDidSaveNotebookDocument`,\n     *  and `onDidCloseNotebookDocument`.\n     *\n     * @param connection The connection to listen on.\n     */\n    listen(connection) {\n        const cellTextDocumentConnection = new CellTextDocumentConnection();\n        const disposables = [];\n        disposables.push(this.cellTextDocuments.listen(cellTextDocumentConnection));\n        disposables.push(connection.notebooks.synchronization.onDidOpenNotebookDocument((params) => {\n            this.notebookDocuments.set(params.notebookDocument.uri, params.notebookDocument);\n            for (const cellTextDocument of params.cellTextDocuments) {\n                cellTextDocumentConnection.openTextDocument({ textDocument: cellTextDocument });\n            }\n            this.updateCellMap(params.notebookDocument);\n            this._onDidOpen.fire(params.notebookDocument);\n        }));\n        disposables.push(connection.notebooks.synchronization.onDidChangeNotebookDocument((params) => {\n            const notebookDocument = this.notebookDocuments.get(params.notebookDocument.uri);\n            if (notebookDocument === undefined) {\n                return;\n            }\n            notebookDocument.version = params.notebookDocument.version;\n            const oldMetadata = notebookDocument.metadata;\n            let metadataChanged = false;\n            const change = params.change;\n            if (change.metadata !== undefined) {\n                metadataChanged = true;\n                notebookDocument.metadata = change.metadata;\n            }\n            const opened = [];\n            const closed = [];\n            const data = [];\n            const text = [];\n            if (change.cells !== undefined) {\n                const changedCells = change.cells;\n                if (changedCells.structure !== undefined) {\n                    const array = changedCells.structure.array;\n                    notebookDocument.cells.splice(array.start, array.deleteCount, ...(array.cells !== undefined ? array.cells : []));\n                    // Additional open cell text documents.\n                    if (changedCells.structure.didOpen !== undefined) {\n                        for (const open of changedCells.structure.didOpen) {\n                            cellTextDocumentConnection.openTextDocument({ textDocument: open });\n                            opened.push(open.uri);\n                        }\n                    }\n                    // Additional closed cell test documents.\n                    if (changedCells.structure.didClose) {\n                        for (const close of changedCells.structure.didClose) {\n                            cellTextDocumentConnection.closeTextDocument({ textDocument: close });\n                            closed.push(close.uri);\n                        }\n                    }\n                }\n                if (changedCells.data !== undefined) {\n                    const cellUpdates = new Map(changedCells.data.map(cell => [cell.document, cell]));\n                    for (let i = 0; i <= notebookDocument.cells.length; i++) {\n                        const change = cellUpdates.get(notebookDocument.cells[i].document);\n                        if (change !== undefined) {\n                            const old = notebookDocument.cells.splice(i, 1, change);\n                            data.push({ old: old[0], new: change });\n                            cellUpdates.delete(change.document);\n                            if (cellUpdates.size === 0) {\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (changedCells.textContent !== undefined) {\n                    for (const cellTextDocument of changedCells.textContent) {\n                        cellTextDocumentConnection.changeTextDocument({ textDocument: cellTextDocument.document, contentChanges: cellTextDocument.changes });\n                        text.push(cellTextDocument.document.uri);\n                    }\n                }\n            }\n            // Update internal data structure.\n            this.updateCellMap(notebookDocument);\n            const changeEvent = { notebookDocument };\n            if (metadataChanged) {\n                changeEvent.metadata = { old: oldMetadata, new: notebookDocument.metadata };\n            }\n            const added = [];\n            for (const open of opened) {\n                added.push(this.getNotebookCell(open));\n            }\n            const removed = [];\n            for (const close of closed) {\n                removed.push(this.getNotebookCell(close));\n            }\n            const textContent = [];\n            for (const change of text) {\n                textContent.push(this.getNotebookCell(change));\n            }\n            if (added.length > 0 || removed.length > 0 || data.length > 0 || textContent.length > 0) {\n                changeEvent.cells = { added, removed, changed: { data, textContent } };\n            }\n            if (changeEvent.metadata !== undefined || changeEvent.cells !== undefined) {\n                this._onDidChange.fire(changeEvent);\n            }\n        }));\n        disposables.push(connection.notebooks.synchronization.onDidSaveNotebookDocument((params) => {\n            const notebookDocument = this.notebookDocuments.get(params.notebookDocument.uri);\n            if (notebookDocument === undefined) {\n                return;\n            }\n            this._onDidSave.fire(notebookDocument);\n        }));\n        disposables.push(connection.notebooks.synchronization.onDidCloseNotebookDocument((params) => {\n            const notebookDocument = this.notebookDocuments.get(params.notebookDocument.uri);\n            if (notebookDocument === undefined) {\n                return;\n            }\n            this._onDidClose.fire(notebookDocument);\n            for (const cellTextDocument of params.cellTextDocuments) {\n                cellTextDocumentConnection.closeTextDocument({ textDocument: cellTextDocument });\n            }\n            this.notebookDocuments.delete(params.notebookDocument.uri);\n            for (const cell of notebookDocument.cells) {\n                this.notebookCellMap.delete(cell.document);\n            }\n        }));\n        return vscode_languageserver_protocol_1.Disposable.create(() => { disposables.forEach(disposable => disposable.dispose()); });\n    }\n    updateCellMap(notebookDocument) {\n        for (const cell of notebookDocument.cells) {\n            this.notebookCellMap.set(cell.document, [cell, notebookDocument]);\n        }\n    }\n}\nexports.NotebookDocuments = NotebookDocuments;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MonikerFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst MonikerFeature = (Base) => {\n    return class extends Base {\n        get moniker() {\n            return {\n                on: (handler) => {\n                    const type = vscode_languageserver_protocol_1.MonikerRequest.type;\n                    return this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                },\n            };\n        }\n    };\n};\nexports.MonikerFeature = MonikerFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createConnection = exports.combineFeatures = exports.combineNotebooksFeatures = exports.combineLanguagesFeatures = exports.combineWorkspaceFeatures = exports.combineWindowFeatures = exports.combineClientFeatures = exports.combineTracerFeatures = exports.combineTelemetryFeatures = exports.combineConsoleFeatures = exports._NotebooksImpl = exports._LanguagesImpl = exports.BulkUnregistration = exports.BulkRegistration = exports.ErrorMessageTracker = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nconst UUID = require(\"./utils/uuid\");\nconst progress_1 = require(\"./progress\");\nconst configuration_1 = require(\"./configuration\");\nconst workspaceFolder_1 = require(\"./workspaceFolder\");\nconst callHierarchy_1 = require(\"./callHierarchy\");\nconst semanticTokens_1 = require(\"./semanticTokens\");\nconst showDocument_1 = require(\"./showDocument\");\nconst fileOperations_1 = require(\"./fileOperations\");\nconst linkedEditingRange_1 = require(\"./linkedEditingRange\");\nconst typeHierarchy_1 = require(\"./typeHierarchy\");\nconst inlineValue_1 = require(\"./inlineValue\");\nconst foldingRange_1 = require(\"./foldingRange\");\n// import { InlineCompletionFeatureShape, InlineCompletionFeature } from './inlineCompletion.proposed';\nconst inlayHint_1 = require(\"./inlayHint\");\nconst diagnostic_1 = require(\"./diagnostic\");\nconst notebook_1 = require(\"./notebook\");\nconst moniker_1 = require(\"./moniker\");\nfunction null2Undefined(value) {\n    if (value === null) {\n        return undefined;\n    }\n    return value;\n}\n/**\n * Helps tracking error message. Equal occurrences of the same\n * message are only stored once. This class is for example\n * useful if text documents are validated in a loop and equal\n * error message should be folded into one.\n */\nclass ErrorMessageTracker {\n    constructor() {\n        this._messages = Object.create(null);\n    }\n    /**\n     * Add a message to the tracker.\n     *\n     * @param message The message to add.\n     */\n    add(message) {\n        let count = this._messages[message];\n        if (!count) {\n            count = 0;\n        }\n        count++;\n        this._messages[message] = count;\n    }\n    /**\n     * Send all tracked messages to the connection's window.\n     *\n     * @param connection The connection established between client and server.\n     */\n    sendErrors(connection) {\n        Object.keys(this._messages).forEach(message => {\n            connection.window.showErrorMessage(message);\n        });\n    }\n}\nexports.ErrorMessageTracker = ErrorMessageTracker;\nclass RemoteConsoleImpl {\n    constructor() {\n    }\n    rawAttach(connection) {\n        this._rawConnection = connection;\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    initialize(_capabilities) {\n    }\n    error(message) {\n        this.send(vscode_languageserver_protocol_1.MessageType.Error, message);\n    }\n    warn(message) {\n        this.send(vscode_languageserver_protocol_1.MessageType.Warning, message);\n    }\n    info(message) {\n        this.send(vscode_languageserver_protocol_1.MessageType.Info, message);\n    }\n    log(message) {\n        this.send(vscode_languageserver_protocol_1.MessageType.Log, message);\n    }\n    debug(message) {\n        this.send(vscode_languageserver_protocol_1.MessageType.Debug, message);\n    }\n    send(type, message) {\n        if (this._rawConnection) {\n            this._rawConnection.sendNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, { type, message }).catch(() => {\n                (0, vscode_languageserver_protocol_1.RAL)().console.error(`Sending log message failed`);\n            });\n        }\n    }\n}\nclass _RemoteWindowImpl {\n    constructor() {\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    showErrorMessage(message, ...actions) {\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Error, message, actions };\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\n    }\n    showWarningMessage(message, ...actions) {\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Warning, message, actions };\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\n    }\n    showInformationMessage(message, ...actions) {\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Info, message, actions };\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\n    }\n}\nconst RemoteWindowImpl = (0, showDocument_1.ShowDocumentFeature)((0, progress_1.ProgressFeature)(_RemoteWindowImpl));\nvar BulkRegistration;\n(function (BulkRegistration) {\n    /**\n     * Creates a new bulk registration.\n     * @return an empty bulk registration.\n     */\n    function create() {\n        return new BulkRegistrationImpl();\n    }\n    BulkRegistration.create = create;\n})(BulkRegistration || (exports.BulkRegistration = BulkRegistration = {}));\nclass BulkRegistrationImpl {\n    constructor() {\n        this._registrations = [];\n        this._registered = new Set();\n    }\n    add(type, registerOptions) {\n        const method = Is.string(type) ? type : type.method;\n        if (this._registered.has(method)) {\n            throw new Error(`${method} is already added to this registration`);\n        }\n        const id = UUID.generateUuid();\n        this._registrations.push({\n            id: id,\n            method: method,\n            registerOptions: registerOptions || {}\n        });\n        this._registered.add(method);\n    }\n    asRegistrationParams() {\n        return {\n            registrations: this._registrations\n        };\n    }\n}\nvar BulkUnregistration;\n(function (BulkUnregistration) {\n    function create() {\n        return new BulkUnregistrationImpl(undefined, []);\n    }\n    BulkUnregistration.create = create;\n})(BulkUnregistration || (exports.BulkUnregistration = BulkUnregistration = {}));\nclass BulkUnregistrationImpl {\n    constructor(_connection, unregistrations) {\n        this._connection = _connection;\n        this._unregistrations = new Map();\n        unregistrations.forEach(unregistration => {\n            this._unregistrations.set(unregistration.method, unregistration);\n        });\n    }\n    get isAttached() {\n        return !!this._connection;\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    add(unregistration) {\n        this._unregistrations.set(unregistration.method, unregistration);\n    }\n    dispose() {\n        let unregistrations = [];\n        for (let unregistration of this._unregistrations.values()) {\n            unregistrations.push(unregistration);\n        }\n        let params = {\n            unregisterations: unregistrations\n        };\n        this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).catch(() => {\n            this._connection.console.info(`Bulk unregistration failed.`);\n        });\n    }\n    disposeSingle(arg) {\n        const method = Is.string(arg) ? arg : arg.method;\n        const unregistration = this._unregistrations.get(method);\n        if (!unregistration) {\n            return false;\n        }\n        let params = {\n            unregisterations: [unregistration]\n        };\n        this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(() => {\n            this._unregistrations.delete(method);\n        }, (_error) => {\n            this._connection.console.info(`Un-registering request handler for ${unregistration.id} failed.`);\n        });\n        return true;\n    }\n}\nclass RemoteClientImpl {\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    register(typeOrRegistrations, registerOptionsOrType, registerOptions) {\n        if (typeOrRegistrations instanceof BulkRegistrationImpl) {\n            return this.registerMany(typeOrRegistrations);\n        }\n        else if (typeOrRegistrations instanceof BulkUnregistrationImpl) {\n            return this.registerSingle1(typeOrRegistrations, registerOptionsOrType, registerOptions);\n        }\n        else {\n            return this.registerSingle2(typeOrRegistrations, registerOptionsOrType);\n        }\n    }\n    registerSingle1(unregistration, type, registerOptions) {\n        const method = Is.string(type) ? type : type.method;\n        const id = UUID.generateUuid();\n        let params = {\n            registrations: [{ id, method, registerOptions: registerOptions || {} }]\n        };\n        if (!unregistration.isAttached) {\n            unregistration.attach(this.connection);\n        }\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then((_result) => {\n            unregistration.add({ id: id, method: method });\n            return unregistration;\n        }, (_error) => {\n            this.connection.console.info(`Registering request handler for ${method} failed.`);\n            return Promise.reject(_error);\n        });\n    }\n    registerSingle2(type, registerOptions) {\n        const method = Is.string(type) ? type : type.method;\n        const id = UUID.generateUuid();\n        let params = {\n            registrations: [{ id, method, registerOptions: registerOptions || {} }]\n        };\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then((_result) => {\n            return vscode_languageserver_protocol_1.Disposable.create(() => {\n                this.unregisterSingle(id, method).catch(() => { this.connection.console.info(`Un-registering capability with id ${id} failed.`); });\n            });\n        }, (_error) => {\n            this.connection.console.info(`Registering request handler for ${method} failed.`);\n            return Promise.reject(_error);\n        });\n    }\n    unregisterSingle(id, method) {\n        let params = {\n            unregisterations: [{ id, method }]\n        };\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).catch(() => {\n            this.connection.console.info(`Un-registering request handler for ${id} failed.`);\n        });\n    }\n    registerMany(registrations) {\n        let params = registrations.asRegistrationParams();\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then(() => {\n            return new BulkUnregistrationImpl(this._connection, params.registrations.map(registration => { return { id: registration.id, method: registration.method }; }));\n        }, (_error) => {\n            this.connection.console.info(`Bulk registration failed.`);\n            return Promise.reject(_error);\n        });\n    }\n}\nclass _RemoteWorkspaceImpl {\n    constructor() {\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    applyEdit(paramOrEdit) {\n        function isApplyWorkspaceEditParams(value) {\n            return value && !!value.edit;\n        }\n        let params = isApplyWorkspaceEditParams(paramOrEdit) ? paramOrEdit : { edit: paramOrEdit };\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params);\n    }\n}\nconst RemoteWorkspaceImpl = (0, fileOperations_1.FileOperationsFeature)((0, workspaceFolder_1.WorkspaceFoldersFeature)((0, configuration_1.ConfigurationFeature)(_RemoteWorkspaceImpl)));\nclass TracerImpl {\n    constructor() {\n        this._trace = vscode_languageserver_protocol_1.Trace.Off;\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    set trace(value) {\n        this._trace = value;\n    }\n    log(message, verbose) {\n        if (this._trace === vscode_languageserver_protocol_1.Trace.Off) {\n            return;\n        }\n        this.connection.sendNotification(vscode_languageserver_protocol_1.LogTraceNotification.type, {\n            message: message,\n            verbose: this._trace === vscode_languageserver_protocol_1.Trace.Verbose ? verbose : undefined\n        }).catch(() => {\n            // Very hard to decide what to do. We tried to send a log\n            // message which failed so we can't simply send another :-(.\n        });\n    }\n}\nclass TelemetryImpl {\n    constructor() {\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    logEvent(data) {\n        this.connection.sendNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, data).catch(() => {\n            this.connection.console.log(`Sending TelemetryEventNotification failed`);\n        });\n    }\n}\nclass _LanguagesImpl {\n    constructor() {\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    attachWorkDoneProgress(params) {\n        return (0, progress_1.attachWorkDone)(this.connection, params);\n    }\n    attachPartialResultProgress(_type, params) {\n        return (0, progress_1.attachPartialResult)(this.connection, params);\n    }\n}\nexports._LanguagesImpl = _LanguagesImpl;\nconst LanguagesImpl = (0, foldingRange_1.FoldingRangeFeature)((0, moniker_1.MonikerFeature)((0, diagnostic_1.DiagnosticFeature)((0, inlayHint_1.InlayHintFeature)((0, inlineValue_1.InlineValueFeature)((0, typeHierarchy_1.TypeHierarchyFeature)((0, linkedEditingRange_1.LinkedEditingRangeFeature)((0, semanticTokens_1.SemanticTokensFeature)((0, callHierarchy_1.CallHierarchyFeature)(_LanguagesImpl)))))))));\nclass _NotebooksImpl {\n    constructor() {\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    attachWorkDoneProgress(params) {\n        return (0, progress_1.attachWorkDone)(this.connection, params);\n    }\n    attachPartialResultProgress(_type, params) {\n        return (0, progress_1.attachPartialResult)(this.connection, params);\n    }\n}\nexports._NotebooksImpl = _NotebooksImpl;\nconst NotebooksImpl = (0, notebook_1.NotebookSyncFeature)(_NotebooksImpl);\nfunction combineConsoleFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineConsoleFeatures = combineConsoleFeatures;\nfunction combineTelemetryFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineTelemetryFeatures = combineTelemetryFeatures;\nfunction combineTracerFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineTracerFeatures = combineTracerFeatures;\nfunction combineClientFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineClientFeatures = combineClientFeatures;\nfunction combineWindowFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineWindowFeatures = combineWindowFeatures;\nfunction combineWorkspaceFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineWorkspaceFeatures = combineWorkspaceFeatures;\nfunction combineLanguagesFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineLanguagesFeatures = combineLanguagesFeatures;\nfunction combineNotebooksFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineNotebooksFeatures = combineNotebooksFeatures;\nfunction combineFeatures(one, two) {\n    function combine(one, two, func) {\n        if (one && two) {\n            return func(one, two);\n        }\n        else if (one) {\n            return one;\n        }\n        else {\n            return two;\n        }\n    }\n    let result = {\n        __brand: 'features',\n        console: combine(one.console, two.console, combineConsoleFeatures),\n        tracer: combine(one.tracer, two.tracer, combineTracerFeatures),\n        telemetry: combine(one.telemetry, two.telemetry, combineTelemetryFeatures),\n        client: combine(one.client, two.client, combineClientFeatures),\n        window: combine(one.window, two.window, combineWindowFeatures),\n        workspace: combine(one.workspace, two.workspace, combineWorkspaceFeatures),\n        languages: combine(one.languages, two.languages, combineLanguagesFeatures),\n        notebooks: combine(one.notebooks, two.notebooks, combineNotebooksFeatures)\n    };\n    return result;\n}\nexports.combineFeatures = combineFeatures;\nfunction createConnection(connectionFactory, watchDog, factories) {\n    const logger = (factories && factories.console ? new (factories.console(RemoteConsoleImpl))() : new RemoteConsoleImpl());\n    const connection = connectionFactory(logger);\n    logger.rawAttach(connection);\n    const tracer = (factories && factories.tracer ? new (factories.tracer(TracerImpl))() : new TracerImpl());\n    const telemetry = (factories && factories.telemetry ? new (factories.telemetry(TelemetryImpl))() : new TelemetryImpl());\n    const client = (factories && factories.client ? new (factories.client(RemoteClientImpl))() : new RemoteClientImpl());\n    const remoteWindow = (factories && factories.window ? new (factories.window(RemoteWindowImpl))() : new RemoteWindowImpl());\n    const workspace = (factories && factories.workspace ? new (factories.workspace(RemoteWorkspaceImpl))() : new RemoteWorkspaceImpl());\n    const languages = (factories && factories.languages ? new (factories.languages(LanguagesImpl))() : new LanguagesImpl());\n    const notebooks = (factories && factories.notebooks ? new (factories.notebooks(NotebooksImpl))() : new NotebooksImpl());\n    const allRemotes = [logger, tracer, telemetry, client, remoteWindow, workspace, languages, notebooks];\n    function asPromise(value) {\n        if (value instanceof Promise) {\n            return value;\n        }\n        else if (Is.thenable(value)) {\n            return new Promise((resolve, reject) => {\n                value.then((resolved) => resolve(resolved), (error) => reject(error));\n            });\n        }\n        else {\n            return Promise.resolve(value);\n        }\n    }\n    let shutdownHandler = undefined;\n    let initializeHandler = undefined;\n    let exitHandler = undefined;\n    let protocolConnection = {\n        listen: () => connection.listen(),\n        sendRequest: (type, ...params) => connection.sendRequest(Is.string(type) ? type : type.method, ...params),\n        onRequest: (type, handler) => connection.onRequest(type, handler),\n        sendNotification: (type, param) => {\n            const method = Is.string(type) ? type : type.method;\n            return connection.sendNotification(method, param);\n        },\n        onNotification: (type, handler) => connection.onNotification(type, handler),\n        onProgress: connection.onProgress,\n        sendProgress: connection.sendProgress,\n        onInitialize: (handler) => {\n            initializeHandler = handler;\n            return {\n                dispose: () => {\n                    initializeHandler = undefined;\n                }\n            };\n        },\n        onInitialized: (handler) => connection.onNotification(vscode_languageserver_protocol_1.InitializedNotification.type, handler),\n        onShutdown: (handler) => {\n            shutdownHandler = handler;\n            return {\n                dispose: () => {\n                    shutdownHandler = undefined;\n                }\n            };\n        },\n        onExit: (handler) => {\n            exitHandler = handler;\n            return {\n                dispose: () => {\n                    exitHandler = undefined;\n                }\n            };\n        },\n        get console() { return logger; },\n        get telemetry() { return telemetry; },\n        get tracer() { return tracer; },\n        get client() { return client; },\n        get window() { return remoteWindow; },\n        get workspace() { return workspace; },\n        get languages() { return languages; },\n        get notebooks() { return notebooks; },\n        onDidChangeConfiguration: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, handler),\n        onDidChangeWatchedFiles: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, handler),\n        __textDocumentSync: undefined,\n        onDidOpenTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, handler),\n        onDidChangeTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, handler),\n        onDidCloseTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, handler),\n        onWillSaveTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, handler),\n        onWillSaveTextDocumentWaitUntil: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, handler),\n        onDidSaveTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, handler),\n        sendDiagnostics: (params) => connection.sendNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, params),\n        onHover: (handler) => connection.onRequest(vscode_languageserver_protocol_1.HoverRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), undefined);\n        }),\n        onCompletion: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CompletionRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onCompletionResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, handler),\n        onSignatureHelp: (handler) => connection.onRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), undefined);\n        }),\n        onDeclaration: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onDefinition: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onTypeDefinition: (handler) => connection.onRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onImplementation: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onReferences: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onDocumentHighlight: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onDocumentSymbol: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onWorkspaceSymbol: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onWorkspaceSymbolResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WorkspaceSymbolResolveRequest.type, handler),\n        onCodeAction: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onCodeActionResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeActionResolveRequest.type, (params, cancel) => {\n            return handler(params, cancel);\n        }),\n        onCodeLens: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onCodeLensResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, (params, cancel) => {\n            return handler(params, cancel);\n        }),\n        onDocumentFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), undefined);\n        }),\n        onDocumentRangeFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), undefined);\n        }),\n        onDocumentOnTypeFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, (params, cancel) => {\n            return handler(params, cancel);\n        }),\n        onRenameRequest: (handler) => connection.onRequest(vscode_languageserver_protocol_1.RenameRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), undefined);\n        }),\n        onPrepareRename: (handler) => connection.onRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, (params, cancel) => {\n            return handler(params, cancel);\n        }),\n        onDocumentLinks: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onDocumentLinkResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, (params, cancel) => {\n            return handler(params, cancel);\n        }),\n        onDocumentColor: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onColorPresentation: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onFoldingRanges: (handler) => connection.onRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onSelectionRanges: (handler) => connection.onRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));\n        }),\n        onExecuteCommand: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, (params, cancel) => {\n            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), undefined);\n        }),\n        dispose: () => connection.dispose()\n    };\n    for (let remote of allRemotes) {\n        remote.attach(protocolConnection);\n    }\n    connection.onRequest(vscode_languageserver_protocol_1.InitializeRequest.type, (params) => {\n        watchDog.initialize(params);\n        if (Is.string(params.trace)) {\n            tracer.trace = vscode_languageserver_protocol_1.Trace.fromString(params.trace);\n        }\n        for (let remote of allRemotes) {\n            remote.initialize(params.capabilities);\n        }\n        if (initializeHandler) {\n            let result = initializeHandler(params, new vscode_languageserver_protocol_1.CancellationTokenSource().token, (0, progress_1.attachWorkDone)(connection, params), undefined);\n            return asPromise(result).then((value) => {\n                if (value instanceof vscode_languageserver_protocol_1.ResponseError) {\n                    return value;\n                }\n                let result = value;\n                if (!result) {\n                    result = { capabilities: {} };\n                }\n                let capabilities = result.capabilities;\n                if (!capabilities) {\n                    capabilities = {};\n                    result.capabilities = capabilities;\n                }\n                if (capabilities.textDocumentSync === undefined || capabilities.textDocumentSync === null) {\n                    capabilities.textDocumentSync = Is.number(protocolConnection.__textDocumentSync) ? protocolConnection.__textDocumentSync : vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\n                }\n                else if (!Is.number(capabilities.textDocumentSync) && !Is.number(capabilities.textDocumentSync.change)) {\n                    capabilities.textDocumentSync.change = Is.number(protocolConnection.__textDocumentSync) ? protocolConnection.__textDocumentSync : vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\n                }\n                for (let remote of allRemotes) {\n                    remote.fillServerCapabilities(capabilities);\n                }\n                return result;\n            });\n        }\n        else {\n            let result = { capabilities: { textDocumentSync: vscode_languageserver_protocol_1.TextDocumentSyncKind.None } };\n            for (let remote of allRemotes) {\n                remote.fillServerCapabilities(result.capabilities);\n            }\n            return result;\n        }\n    });\n    connection.onRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, () => {\n        watchDog.shutdownReceived = true;\n        if (shutdownHandler) {\n            return shutdownHandler(new vscode_languageserver_protocol_1.CancellationTokenSource().token);\n        }\n        else {\n            return undefined;\n        }\n    });\n    connection.onNotification(vscode_languageserver_protocol_1.ExitNotification.type, () => {\n        try {\n            if (exitHandler) {\n                exitHandler();\n            }\n        }\n        finally {\n            if (watchDog.shutdownReceived) {\n                watchDog.exit(0);\n            }\n            else {\n                watchDog.exit(1);\n            }\n        }\n    });\n    connection.onNotification(vscode_languageserver_protocol_1.SetTraceNotification.type, (params) => {\n        tracer.trace = vscode_languageserver_protocol_1.Trace.fromString(params.value);\n    });\n    return protocolConnection;\n}\nexports.createConnection = createConnection;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveModulePath = exports.FileSystem = exports.resolveGlobalYarnPath = exports.resolveGlobalNodePath = exports.resolve = exports.uriToFilePath = void 0;\nconst url = require(\"url\");\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nconst child_process_1 = require(\"child_process\");\n/**\n * @deprecated Use the `vscode-uri` npm module which provides a more\n * complete implementation of handling VS Code URIs.\n */\nfunction uriToFilePath(uri) {\n    let parsed = url.parse(uri);\n    if (parsed.protocol !== 'file:' || !parsed.path) {\n        return undefined;\n    }\n    let segments = parsed.path.split('/');\n    for (var i = 0, len = segments.length; i < len; i++) {\n        segments[i] = decodeURIComponent(segments[i]);\n    }\n    if (process.platform === 'win32' && segments.length > 1) {\n        let first = segments[0];\n        let second = segments[1];\n        // Do we have a drive letter and we started with a / which is the\n        // case if the first segement is empty (see split above)\n        if (first.length === 0 && second.length > 1 && second[1] === ':') {\n            // Remove first slash\n            segments.shift();\n        }\n    }\n    return path.normalize(segments.join('/'));\n}\nexports.uriToFilePath = uriToFilePath;\nfunction isWindows() {\n    return process.platform === 'win32';\n}\nfunction resolve(moduleName, nodePath, cwd, tracer) {\n    const nodePathKey = 'NODE_PATH';\n    const app = [\n        'var p = process;',\n        'p.on(\\'message\\',function(m){',\n        'if(m.c===\\'e\\'){',\n        'p.exit(0);',\n        '}',\n        'else if(m.c===\\'rs\\'){',\n        'try{',\n        'var r=require.resolve(m.a);',\n        'p.send({c:\\'r\\',s:true,r:r});',\n        '}',\n        'catch(err){',\n        'p.send({c:\\'r\\',s:false});',\n        '}',\n        '}',\n        '});'\n    ].join('');\n    return new Promise((resolve, reject) => {\n        let env = process.env;\n        let newEnv = Object.create(null);\n        Object.keys(env).forEach(key => newEnv[key] = env[key]);\n        if (nodePath && fs.existsSync(nodePath) /* see issue 545 */) {\n            if (newEnv[nodePathKey]) {\n                newEnv[nodePathKey] = nodePath + path.delimiter + newEnv[nodePathKey];\n            }\n            else {\n                newEnv[nodePathKey] = nodePath;\n            }\n            if (tracer) {\n                tracer(`NODE_PATH value is: ${newEnv[nodePathKey]}`);\n            }\n        }\n        newEnv['ELECTRON_RUN_AS_NODE'] = '1';\n        try {\n            let cp = (0, child_process_1.fork)('', [], {\n                cwd: cwd,\n                env: newEnv,\n                execArgv: ['-e', app]\n            });\n            if (cp.pid === void 0) {\n                reject(new Error(`Starting process to resolve node module  ${moduleName} failed`));\n                return;\n            }\n            cp.on('error', (error) => {\n                reject(error);\n            });\n            cp.on('message', (message) => {\n                if (message.c === 'r') {\n                    cp.send({ c: 'e' });\n                    if (message.s) {\n                        resolve(message.r);\n                    }\n                    else {\n                        reject(new Error(`Failed to resolve module: ${moduleName}`));\n                    }\n                }\n            });\n            let message = {\n                c: 'rs',\n                a: moduleName\n            };\n            cp.send(message);\n        }\n        catch (error) {\n            reject(error);\n        }\n    });\n}\nexports.resolve = resolve;\n/**\n * Resolve the global npm package path.\n * @deprecated Since this depends on the used package manager and their version the best is that servers\n * implement this themselves since they know best what kind of package managers to support.\n * @param tracer the tracer to use\n */\nfunction resolveGlobalNodePath(tracer) {\n    let npmCommand = 'npm';\n    const env = Object.create(null);\n    Object.keys(process.env).forEach(key => env[key] = process.env[key]);\n    env['NO_UPDATE_NOTIFIER'] = 'true';\n    const options = {\n        encoding: 'utf8',\n        env\n    };\n    if (isWindows()) {\n        npmCommand = 'npm.cmd';\n        options.shell = true;\n    }\n    let handler = () => { };\n    try {\n        process.on('SIGPIPE', handler);\n        let stdout = (0, child_process_1.spawnSync)(npmCommand, ['config', 'get', 'prefix'], options).stdout;\n        if (!stdout) {\n            if (tracer) {\n                tracer(`'npm config get prefix' didn't return a value.`);\n            }\n            return undefined;\n        }\n        let prefix = stdout.trim();\n        if (tracer) {\n            tracer(`'npm config get prefix' value is: ${prefix}`);\n        }\n        if (prefix.length > 0) {\n            if (isWindows()) {\n                return path.join(prefix, 'node_modules');\n            }\n            else {\n                return path.join(prefix, 'lib', 'node_modules');\n            }\n        }\n        return undefined;\n    }\n    catch (err) {\n        return undefined;\n    }\n    finally {\n        process.removeListener('SIGPIPE', handler);\n    }\n}\nexports.resolveGlobalNodePath = resolveGlobalNodePath;\n/*\n * Resolve the global yarn pakage path.\n * @deprecated Since this depends on the used package manager and their version the best is that servers\n * implement this themselves since they know best what kind of package managers to support.\n * @param tracer the tracer to use\n */\nfunction resolveGlobalYarnPath(tracer) {\n    let yarnCommand = 'yarn';\n    let options = {\n        encoding: 'utf8'\n    };\n    if (isWindows()) {\n        yarnCommand = 'yarn.cmd';\n        options.shell = true;\n    }\n    let handler = () => { };\n    try {\n        process.on('SIGPIPE', handler);\n        let results = (0, child_process_1.spawnSync)(yarnCommand, ['global', 'dir', '--json'], options);\n        let stdout = results.stdout;\n        if (!stdout) {\n            if (tracer) {\n                tracer(`'yarn global dir' didn't return a value.`);\n                if (results.stderr) {\n                    tracer(results.stderr);\n                }\n            }\n            return undefined;\n        }\n        let lines = stdout.trim().split(/\\r?\\n/);\n        for (let line of lines) {\n            try {\n                let yarn = JSON.parse(line);\n                if (yarn.type === 'log') {\n                    return path.join(yarn.data, 'node_modules');\n                }\n            }\n            catch (e) {\n                // Do nothing. Ignore the line\n            }\n        }\n        return undefined;\n    }\n    catch (err) {\n        return undefined;\n    }\n    finally {\n        process.removeListener('SIGPIPE', handler);\n    }\n}\nexports.resolveGlobalYarnPath = resolveGlobalYarnPath;\nvar FileSystem;\n(function (FileSystem) {\n    let _isCaseSensitive = undefined;\n    function isCaseSensitive() {\n        if (_isCaseSensitive !== void 0) {\n            return _isCaseSensitive;\n        }\n        if (process.platform === 'win32') {\n            _isCaseSensitive = false;\n        }\n        else {\n            // convert current file name to upper case / lower case and check if file exists\n            // (guards against cases when name is already all uppercase or lowercase)\n            _isCaseSensitive = !fs.existsSync(__filename.toUpperCase()) || !fs.existsSync(__filename.toLowerCase());\n        }\n        return _isCaseSensitive;\n    }\n    FileSystem.isCaseSensitive = isCaseSensitive;\n    function isParent(parent, child) {\n        if (isCaseSensitive()) {\n            return path.normalize(child).indexOf(path.normalize(parent)) === 0;\n        }\n        else {\n            return path.normalize(child).toLowerCase().indexOf(path.normalize(parent).toLowerCase()) === 0;\n        }\n    }\n    FileSystem.isParent = isParent;\n})(FileSystem || (exports.FileSystem = FileSystem = {}));\nfunction resolveModulePath(workspaceRoot, moduleName, nodePath, tracer) {\n    if (nodePath) {\n        if (!path.isAbsolute(nodePath)) {\n            nodePath = path.join(workspaceRoot, nodePath);\n        }\n        return resolve(moduleName, nodePath, nodePath, tracer).then((value) => {\n            if (FileSystem.isParent(nodePath, value)) {\n                return value;\n            }\n            else {\n                return Promise.reject(new Error(`Failed to load ${moduleName} from node path location.`));\n            }\n        }).then(undefined, (_error) => {\n            return resolve(moduleName, resolveGlobalNodePath(tracer), workspaceRoot, tracer);\n        });\n    }\n    else {\n        return resolve(moduleName, resolveGlobalNodePath(tracer), workspaceRoot, tracer);\n    }\n}\nexports.resolveModulePath = resolveModulePath;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\n'use strict';\n\nmodule.exports = require('./lib/node/main');", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlineCompletionFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst InlineCompletionFeature = (Base) => {\n    return class extends Base {\n        get inlineCompletion() {\n            return {\n                on: (handler) => {\n                    return this.connection.onRequest(vscode_languageserver_protocol_1.InlineCompletionRequest.type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params));\n                    });\n                }\n            };\n        }\n    };\n};\nexports.InlineCompletionFeature = InlineCompletionFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProposedFeatures = exports.NotebookDocuments = exports.TextDocuments = exports.SemanticTokensBuilder = void 0;\nconst semanticTokens_1 = require(\"./semanticTokens\");\nObject.defineProperty(exports, \"SemanticTokensBuilder\", { enumerable: true, get: function () { return semanticTokens_1.SemanticTokensBuilder; } });\nconst ic = require(\"./inlineCompletion.proposed\");\n__exportStar(require(\"vscode-languageserver-protocol/\"), exports);\nconst textDocuments_1 = require(\"./textDocuments\");\nObject.defineProperty(exports, \"TextDocuments\", { enumerable: true, get: function () { return textDocuments_1.TextDocuments; } });\nconst notebook_1 = require(\"./notebook\");\nObject.defineProperty(exports, \"NotebookDocuments\", { enumerable: true, get: function () { return notebook_1.NotebookDocuments; } });\n__exportStar(require(\"./server\"), exports);\nvar ProposedFeatures;\n(function (ProposedFeatures) {\n    ProposedFeatures.all = {\n        __brand: 'features',\n        languages: ic.InlineCompletionFeature\n    };\n})(ProposedFeatures || (exports.ProposedFeatures = ProposedFeatures = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n/// <reference path=\"../../typings/thenable.d.ts\" />\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createConnection = exports.Files = void 0;\nconst node_util_1 = require(\"node:util\");\nconst Is = require(\"../common/utils/is\");\nconst server_1 = require(\"../common/server\");\nconst fm = require(\"./files\");\nconst node_1 = require(\"vscode-languageserver-protocol/node\");\n__exportStar(require(\"vscode-languageserver-protocol/node\"), exports);\n__exportStar(require(\"../common/api\"), exports);\nvar Files;\n(function (Files) {\n    Files.uriToFilePath = fm.uriToFilePath;\n    Files.resolveGlobalNodePath = fm.resolveGlobalNodePath;\n    Files.resolveGlobalYarnPath = fm.resolveGlobalYarnPath;\n    Files.resolve = fm.resolve;\n    Files.resolveModulePath = fm.resolveModulePath;\n})(Files || (exports.Files = Files = {}));\nlet _protocolConnection;\nfunction endProtocolConnection() {\n    if (_protocolConnection === undefined) {\n        return;\n    }\n    try {\n        _protocolConnection.end();\n    }\n    catch (_err) {\n        // Ignore. The client process could have already\n        // did and we can't send an end into the connection.\n    }\n}\nlet _shutdownReceived = false;\nlet exitTimer = undefined;\nfunction setupExitTimer() {\n    const argName = '--clientProcessId';\n    function runTimer(value) {\n        try {\n            let processId = parseInt(value);\n            if (!isNaN(processId)) {\n                exitTimer = setInterval(() => {\n                    try {\n                        process.kill(processId, 0);\n                    }\n                    catch (ex) {\n                        // Parent process doesn't exist anymore. Exit the server.\n                        endProtocolConnection();\n                        process.exit(_shutdownReceived ? 0 : 1);\n                    }\n                }, 3000);\n            }\n        }\n        catch (e) {\n            // Ignore errors;\n        }\n    }\n    for (let i = 2; i < process.argv.length; i++) {\n        let arg = process.argv[i];\n        if (arg === argName && i + 1 < process.argv.length) {\n            runTimer(process.argv[i + 1]);\n            return;\n        }\n        else {\n            let args = arg.split('=');\n            if (args[0] === argName) {\n                runTimer(args[1]);\n            }\n        }\n    }\n}\nsetupExitTimer();\nconst watchDog = {\n    initialize: (params) => {\n        const processId = params.processId;\n        if (Is.number(processId) && exitTimer === undefined) {\n            // We received a parent process id. Set up a timer to periodically check\n            // if the parent is still alive.\n            setInterval(() => {\n                try {\n                    process.kill(processId, 0);\n                }\n                catch (ex) {\n                    // Parent process doesn't exist anymore. Exit the server.\n                    process.exit(_shutdownReceived ? 0 : 1);\n                }\n            }, 3000);\n        }\n    },\n    get shutdownReceived() {\n        return _shutdownReceived;\n    },\n    set shutdownReceived(value) {\n        _shutdownReceived = value;\n    },\n    exit: (code) => {\n        endProtocolConnection();\n        process.exit(code);\n    }\n};\nfunction createConnection(arg1, arg2, arg3, arg4) {\n    let factories;\n    let input;\n    let output;\n    let options;\n    if (arg1 !== void 0 && arg1.__brand === 'features') {\n        factories = arg1;\n        arg1 = arg2;\n        arg2 = arg3;\n        arg3 = arg4;\n    }\n    if (node_1.ConnectionStrategy.is(arg1) || node_1.ConnectionOptions.is(arg1)) {\n        options = arg1;\n    }\n    else {\n        input = arg1;\n        output = arg2;\n        options = arg3;\n    }\n    return _createConnection(input, output, options, factories);\n}\nexports.createConnection = createConnection;\nfunction _createConnection(input, output, options, factories) {\n    let stdio = false;\n    if (!input && !output && process.argv.length > 2) {\n        let port = void 0;\n        let pipeName = void 0;\n        let argv = process.argv.slice(2);\n        for (let i = 0; i < argv.length; i++) {\n            let arg = argv[i];\n            if (arg === '--node-ipc') {\n                input = new node_1.IPCMessageReader(process);\n                output = new node_1.IPCMessageWriter(process);\n                break;\n            }\n            else if (arg === '--stdio') {\n                stdio = true;\n                input = process.stdin;\n                output = process.stdout;\n                break;\n            }\n            else if (arg === '--socket') {\n                port = parseInt(argv[i + 1]);\n                break;\n            }\n            else if (arg === '--pipe') {\n                pipeName = argv[i + 1];\n                break;\n            }\n            else {\n                var args = arg.split('=');\n                if (args[0] === '--socket') {\n                    port = parseInt(args[1]);\n                    break;\n                }\n                else if (args[0] === '--pipe') {\n                    pipeName = args[1];\n                    break;\n                }\n            }\n        }\n        if (port) {\n            let transport = (0, node_1.createServerSocketTransport)(port);\n            input = transport[0];\n            output = transport[1];\n        }\n        else if (pipeName) {\n            let transport = (0, node_1.createServerPipeTransport)(pipeName);\n            input = transport[0];\n            output = transport[1];\n        }\n    }\n    var commandLineMessage = 'Use arguments of createConnection or set command line parameters: \\'--node-ipc\\', \\'--stdio\\' or \\'--socket={number}\\'';\n    if (!input) {\n        throw new Error('Connection input stream is not set. ' + commandLineMessage);\n    }\n    if (!output) {\n        throw new Error('Connection output stream is not set. ' + commandLineMessage);\n    }\n    // Backwards compatibility\n    if (Is.func(input.read) && Is.func(input.on)) {\n        let inputStream = input;\n        inputStream.on('end', () => {\n            endProtocolConnection();\n            process.exit(_shutdownReceived ? 0 : 1);\n        });\n        inputStream.on('close', () => {\n            endProtocolConnection();\n            process.exit(_shutdownReceived ? 0 : 1);\n        });\n    }\n    const connectionFactory = (logger) => {\n        const result = (0, node_1.createProtocolConnection)(input, output, logger, options);\n        if (stdio) {\n            patchConsole(logger);\n        }\n        return result;\n    };\n    return (0, server_1.createConnection)(connectionFactory, watchDog, factories);\n}\nfunction patchConsole(logger) {\n    function serialize(args) {\n        return args.map(arg => typeof arg === 'string' ? arg : (0, node_util_1.inspect)(arg)).join(' ');\n    }\n    const counters = new Map();\n    console.assert = function assert(assertion, ...args) {\n        if (assertion) {\n            return;\n        }\n        if (args.length === 0) {\n            logger.error('Assertion failed');\n        }\n        else {\n            const [message, ...rest] = args;\n            logger.error(`Assertion failed: ${message} ${serialize(rest)}`);\n        }\n    };\n    console.count = function count(label = 'default') {\n        const message = String(label);\n        let counter = counters.get(message) ?? 0;\n        counter += 1;\n        counters.set(message, counter);\n        logger.log(`${message}: ${message}`);\n    };\n    console.countReset = function countReset(label) {\n        if (label === undefined) {\n            counters.clear();\n        }\n        else {\n            counters.delete(String(label));\n        }\n    };\n    console.debug = function debug(...args) {\n        logger.log(serialize(args));\n    };\n    console.dir = function dir(arg, options) {\n        // @ts-expect-error https://github.com/DefinitelyTyped/DefinitelyTyped/pull/66626\n        logger.log((0, node_util_1.inspect)(arg, options));\n    };\n    console.log = function log(...args) {\n        logger.log(serialize(args));\n    };\n    console.error = function error(...args) {\n        logger.error(serialize(args));\n    };\n    console.trace = function trace(...args) {\n        const stack = new Error().stack.replace(/(.+\\n){2}/, '');\n        let message = 'Trace';\n        if (args.length !== 0) {\n            message += `: ${serialize(args)}`;\n        }\n        logger.log(`${message}\\n${stack}`);\n    };\n    console.warn = function warn(...args) {\n        logger.warn(serialize(args));\n    };\n}\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\n'use strict';\n\nmodule.exports = require('./lib/node/main');", "'use strict';\n\nconst ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\n\nexports.ALIAS = ALIAS;\nexports.DOC = DOC;\nexports.MAP = MAP;\nexports.NODE_TYPE = NODE_TYPE;\nexports.PAIR = PAIR;\nexports.SCALAR = SCALAR;\nexports.SEQ = SEQ;\nexports.hasAnchor = hasAnchor;\nexports.isAlias = isAlias;\nexports.isCollection = isCollection;\nexports.isDocument = isDocument;\nexports.isMap = isMap;\nexports.isNode = isNode;\nexports.isPair = isPair;\nexports.isScalar = isScalar;\nexports.isSeq = isSeq;\n", "'use strict';\n\nvar identity = require('./nodes/identity.js');\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (identity.isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (identity.isNode(ctrl) || identity.isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (identity.isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (identity.isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (identity.isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (identity.isNode(ctrl) || identity.isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (identity.isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (identity.isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (identity.isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (identity.isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (identity.isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (identity.isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (identity.isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (identity.isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (identity.isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (identity.isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = identity.isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexports.visit = visit;\nexports.visitAsync = visitAsync;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar visit = require('../visit.js');\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/s);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix) {\n            try {\n                return prefix + decodeURIComponent(suffix);\n            }\n            catch (error) {\n                onError(String(error));\n                return null;\n            }\n        }\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && identity.isNode(doc.contents)) {\n            const tags = {};\n            visit.visit(doc.contents, (_key, node) => {\n                if (identity.isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexports.Directives = Directives;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar visit = require('../visit.js');\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit.visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            if (!prevAnchors)\n                prevAnchors = anchorNames(doc);\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (identity.isScalar(ref.node) || identity.isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexports.anchorIsValid = anchorIsValid;\nexports.anchorNames = anchorNames;\nexports.createNodeAnchors = createNodeAnchors;\nexports.findNewAnchor = findNewAnchor;\n", "'use strict';\n\n/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                // eslint-disable-next-line @typescript-eslint/no-array-delete\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexports.applyReviver = applyReviver;\n", "'use strict';\n\nvar identity = require('./identity.js');\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !identity.hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexports.toJS = toJS;\n", "'use strict';\n\nvar applyReviver = require('../doc/applyReviver.js');\nvar identity = require('./identity.js');\nvar toJS = require('./toJS.js');\n\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, identity.NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** A plain JavaScript representation of this node. */\n    toJS(doc, { mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        if (!identity.isDocument(doc))\n            throw new TypeError('A document argument is required');\n        const ctx = {\n            anchors: new Map(),\n            doc,\n            keep: true,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS.toJS(this, '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver.applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n}\n\nexports.NodeBase = NodeBase;\n", "'use strict';\n\nvar anchors = require('../doc/anchors.js');\nvar visit = require('../visit.js');\nvar identity = require('./identity.js');\nvar Node = require('./Node.js');\nvar toJS = require('./toJS.js');\n\nclass Alias extends Node.NodeBase {\n    constructor(source) {\n        super(identity.ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc) {\n        let found = undefined;\n        visit.visit(doc, {\n            Node: (_key, node) => {\n                if (node === this)\n                    return visit.visit.BREAK;\n                if (node.anchor === this.source)\n                    found = node;\n            }\n        });\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        let data = anchors.get(source);\n        if (!data) {\n            // Resolve anchors for Node.prototype.toJS()\n            toJS.toJS(source, null, ctx);\n            data = anchors.get(source);\n        }\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchors.anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (identity.isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (identity.isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (identity.isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexports.Alias = Alias;\n", "'use strict';\n\nvar identity = require('./identity.js');\nvar Node = require('./Node.js');\nvar toJS = require('./toJS.js');\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends Node.NodeBase {\n    constructor(value) {\n        super(identity.SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS.toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexports.Scalar = Scalar;\nexports.isScalarValue = isScalarValue;\n", "'use strict';\n\nvar Alias = require('../nodes/Alias.js');\nvar identity = require('../nodes/identity.js');\nvar Scalar = require('../nodes/Scalar.js');\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (identity.isDocument(value))\n        value = value.contents;\n    if (identity.isNode(value))\n        return value;\n    if (identity.isPair(value)) {\n        const map = ctx.schema[identity.MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt !== 'undefined' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            if (!ref.anchor)\n                ref.anchor = onAnchor(value);\n            return new Alias.Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar.Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[identity.MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[identity.SEQ]\n                    : schema[identity.MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : typeof tagObj?.nodeClass?.from === 'function'\n            ? tagObj.nodeClass.from(ctx.schema, value, ctx)\n            : new Scalar.Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    else if (!tagObj.default)\n        node.tag = tagObj.tag;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexports.createNode = createNode;\n", "'use strict';\n\nvar createNode = require('../doc/createNode.js');\nvar identity = require('./identity.js');\nvar Node = require('./Node.js');\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode.createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends Node.NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => identity.isNode(it) || identity.isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (identity.isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (identity.isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && identity.isScalar(node) ? node.value : node;\n        else\n            return identity.isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!identity.isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    identity.isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return identity.isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (identity.isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\n\nexports.Collection = Collection;\nexports.collectionFromPath = collectionFromPath;\nexports.isEmptyPath = isEmptyPath;\n", "'use strict';\n\n/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexports.indentComment = indentComment;\nexports.lineComment = lineComment;\nexports.stringifyComment = stringifyComment;\n", "'use strict';\n\nconst FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    if (lineWidth < minContentWidth)\n        minContentWidth = 0;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i, indent.length);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i, indent.length);\n            end = i + indent.length + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i, indent) {\n    let end = i;\n    let start = i + 1;\n    let ch = text[start];\n    while (ch === ' ' || ch === '\\t') {\n        if (i < start + indent) {\n            ch = text[++i];\n        }\n        else {\n            do {\n                ch = text[++i];\n            } while (ch && ch !== '\\n');\n            end = i;\n            start = i + 1;\n            ch = text[start];\n        }\n    }\n    return end;\n}\n\nexports.FOLD_BLOCK = FOLD_BLOCK;\nexports.FOLD_FLOW = FOLD_FLOW;\nexports.FOLD_QUOTED = FOLD_QUOTED;\nexports.foldFlowLines = foldFlowLines;\n", "'use strict';\n\nvar Scalar = require('../nodes/Scalar.js');\nvar foldFlowLines = require('./foldFlowLines.js');\n\nconst getFoldOptions = (ctx, isBlock) => ({\n    indentAtStart: isBlock ? ctx.indent.length : ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines.foldFlowLines(str, indent, foldFlowLines.FOLD_QUOTED, getFoldOptions(ctx, false));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines.foldFlowLines(res, indent, foldFlowLines.FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\n// The negative lookbehind avoids a polynomial search,\n// but isn't supported yet on Safari: https://caniuse.com/js-regexp-lookbehind\nlet blockEndNewlines;\ntry {\n    blockEndNewlines = new RegExp('(^|(?<!\\n))\\n+(?!\\n|$)', 'g');\n}\ncatch {\n    blockEndNewlines = /\\n+(?!\\n|$)/g;\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(blockEndNewlines, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    // Leading | or > is added later\n    let header = (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (!literal) {\n        const foldedValue = value\n            .replace(/\\n+/g, '\\n$&')\n            .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n            //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n            .replace(/\\n+/g, `$&${indent}`);\n        let literalFallback = false;\n        const foldOptions = getFoldOptions(ctx, true);\n        if (blockQuote !== 'folded' && type !== Scalar.Scalar.BLOCK_FOLDED) {\n            foldOptions.onOverflow = () => {\n                literalFallback = true;\n            };\n        }\n        const body = foldFlowLines.foldFlowLines(`${start}${foldedValue}${end}`, indent, foldFlowLines.FOLD_BLOCK, foldOptions);\n        if (!literalFallback)\n            return `>${header}\\n${indent}${body}`;\n    }\n    value = value.replace(/\\n+/g, `$&${indent}`);\n    return `|${header}\\n${indent}${start}${value}${end}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, indentStep, inFlow } = ctx;\n    if ((implicitKey && value.includes('\\n')) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (!value ||\n        /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - empty string, '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (containsDocumentMarker(value)) {\n        if (indent === '') {\n            ctx.forceBlockIndent = true;\n            return blockString(item, ctx, onComment, onChompKeep);\n        }\n        else if (implicitKey && indent === indentStep) {\n            return quotedString(value, ctx);\n        }\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines.foldFlowLines(str, indent, foldFlowLines.FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.Scalar.BLOCK_FOLDED:\n            case Scalar.Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexports.stringifyString = stringifyString;\n", "'use strict';\n\nvar anchors = require('../doc/anchors.js');\nvar identity = require('../nodes/identity.js');\nvar stringifyComment = require('./stringifyComment.js');\nvar stringifyString = require('./stringifyString.js');\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment.stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        flowCollectionPadding: true,\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        flowCollectionPadding: opt.flowCollectionPadding ? ' ' : '',\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (identity.isScalar(item)) {\n        obj = item.value;\n        let match = tags.filter(t => t.identify?.(obj));\n        if (match.length > 1) {\n            const testMatch = match.filter(t => t.test);\n            if (testMatch.length > 0)\n                match = testMatch;\n        }\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors: anchors$1, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (identity.isScalar(node) || identity.isCollection(node)) && node.anchor;\n    if (anchor && anchors.anchorIsValid(anchor)) {\n        anchors$1.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (identity.isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (identity.isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = identity.isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : identity.isScalar(node)\n            ? stringifyString.stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return identity.isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexports.createStringifyContext = createStringifyContext;\nexports.stringify = stringify;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar Scalar = require('../nodes/Scalar.js');\nvar stringify = require('./stringify.js');\nvar stringifyComment = require('./stringifyComment.js');\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (identity.isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (identity.isCollection(key) || (!identity.isNode(key) && typeof key === 'object')) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            identity.isCollection(key) ||\n            (identity.isScalar(key)\n                ? key.type === Scalar.Scalar.BLOCK_FOLDED || key.type === Scalar.Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify.stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += stringifyComment.lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += stringifyComment.lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += stringifyComment.lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vsb, vcb, valueComment;\n    if (identity.isNode(value)) {\n        vsb = !!value.spaceBefore;\n        vcb = value.commentBefore;\n        valueComment = value.comment;\n    }\n    else {\n        vsb = false;\n        vcb = null;\n        valueComment = null;\n        if (value && typeof value === 'object')\n            value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && identity.isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        identity.isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substring(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify.stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (keyComment || vsb || vcb) {\n        ws = vsb ? '\\n' : '';\n        if (vcb) {\n            const cs = commentString(vcb);\n            ws += `\\n${stringifyComment.indentComment(cs, ctx.indent)}`;\n        }\n        if (valueStr === '' && !ctx.inFlow) {\n            if (ws === '\\n')\n                ws = '\\n\\n';\n        }\n        else {\n            ws += `\\n${ctx.indent}`;\n        }\n    }\n    else if (!explicitKey && identity.isCollection(value)) {\n        const vs0 = valueStr[0];\n        const nl0 = valueStr.indexOf('\\n');\n        const hasNewline = nl0 !== -1;\n        const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n        if (hasNewline || !flow) {\n            let hasPropsLine = false;\n            if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n                let sp0 = valueStr.indexOf(' ');\n                if (vs0 === '&' &&\n                    sp0 !== -1 &&\n                    sp0 < nl0 &&\n                    valueStr[sp0 + 1] === '!') {\n                    sp0 = valueStr.indexOf(' ', sp0 + 1);\n                }\n                if (sp0 === -1 || nl0 < sp0)\n                    hasPropsLine = true;\n            }\n            if (!hasPropsLine)\n                ws = `\\n${ctx.indent}`;\n        }\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n') {\n        ws = '';\n    }\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += stringifyComment.lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexports.stringifyPair = stringifyPair;\n", "'use strict';\n\nfunction debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        if (typeof process !== 'undefined' && process.emitWarning)\n            process.emitWarning(warning);\n        else\n            console.warn(warning);\n    }\n}\n\nexports.debug = debug;\nexports.warn = warn;\n", "'use strict';\n\nvar identity = require('../../nodes/identity.js');\nvar Scalar = require('../../nodes/Scalar.js');\n\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nconst MERGE_KEY = '<<';\nconst merge = {\n    identify: value => value === MERGE_KEY ||\n        (typeof value === 'symbol' && value.description === MERGE_KEY),\n    default: 'key',\n    tag: 'tag:yaml.org,2002:merge',\n    test: /^<<$/,\n    resolve: () => Object.assign(new Scalar.Scalar(Symbol(MERGE_KEY)), {\n        addToJSMap: addMergeToJSMap\n    }),\n    stringify: () => MERGE_KEY\n};\nconst isMergeKey = (ctx, key) => (merge.identify(key) ||\n    (identity.isScalar(key) &&\n        (!key.type || key.type === Scalar.Scalar.PLAIN) &&\n        merge.identify(key.value))) &&\n    ctx?.doc.schema.tags.some(tag => tag.tag === merge.tag && tag.default);\nfunction addMergeToJSMap(ctx, map, value) {\n    value = ctx && identity.isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (identity.isSeq(value))\n        for (const it of value.items)\n            mergeValue(ctx, map, it);\n    else if (Array.isArray(value))\n        for (const it of value)\n            mergeValue(ctx, map, it);\n    else\n        mergeValue(ctx, map, value);\n}\nfunction mergeValue(ctx, map, value) {\n    const source = ctx && identity.isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!identity.isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\n\nexports.addMergeToJSMap = addMergeToJSMap;\nexports.isMergeKey = isMergeKey;\nexports.merge = merge;\n", "'use strict';\n\nvar log = require('../log.js');\nvar merge = require('../schema/yaml-1.1/merge.js');\nvar stringify = require('../stringify/stringify.js');\nvar identity = require('./identity.js');\nvar toJS = require('./toJS.js');\n\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (identity.isNode(key) && key.addToJSMap)\n        key.addToJSMap(ctx, map, value);\n    // TODO: Should drop this special case for bare << handling\n    else if (merge.isMergeKey(ctx, key))\n        merge.addMergeToJSMap(ctx, map, value);\n    else {\n        const jsKey = toJS.toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS.toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS.toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (identity.isNode(key) && ctx?.doc) {\n        const strCtx = stringify.createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            log.warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexports.addPairToJSMap = addPairToJSMap;\n", "'use strict';\n\nvar createNode = require('../doc/createNode.js');\nvar stringifyPair = require('../stringify/stringifyPair.js');\nvar addPairToJSMap = require('./addPairToJSMap.js');\nvar identity = require('./identity.js');\n\nfunction createPair(key, value, ctx) {\n    const k = createNode.createNode(key, undefined, ctx);\n    const v = createNode.createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, identity.NODE_TYPE, { value: identity.PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (identity.isNode(key))\n            key = key.clone(schema);\n        if (identity.isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap.addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair.stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexports.Pair = Pair;\nexports.createPair = createPair;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar stringify = require('./stringify.js');\nvar stringifyComment = require('./stringifyComment.js');\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (identity.isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (identity.isPair(item)) {\n            const ik = identity.isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify.stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += stringifyComment.lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + stringifyComment.indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ items }, ctx, { flowChars, itemIndent }) {\n    const { indent, indentStep, flowCollectionPadding: fcPadding, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (identity.isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (identity.isPair(item)) {\n            const ik = identity.isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = identity.isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik?.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify.stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += stringifyComment.lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        return start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = ctx.options.lineWidth > 0 && len > ctx.options.lineWidth;\n        }\n        if (reqNewline) {\n            let str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            return `${str}\\n${indent}${end}`;\n        }\n        else {\n            return `${start}${fcPadding}${lines.join(' ')}${fcPadding}${end}`;\n        }\n    }\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = stringifyComment.indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexports.stringifyCollection = stringifyCollection;\n", "'use strict';\n\nvar stringifyCollection = require('../stringify/stringifyCollection.js');\nvar addPairToJSMap = require('./addPairToJSMap.js');\nvar Collection = require('./Collection.js');\nvar identity = require('./identity.js');\nvar Pair = require('./Pair.js');\nvar Scalar = require('./Scalar.js');\n\nfunction findPair(items, key) {\n    const k = identity.isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (identity.isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (identity.isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection.Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    constructor(schema) {\n        super(identity.MAP, schema);\n        this.items = [];\n    }\n    /**\n     * A generic collection parsing method that can be extended\n     * to other node classes that inherit from YAMLMap\n     */\n    static from(schema, obj, ctx) {\n        const { keepUndefined, replacer } = ctx;\n        const map = new this(schema);\n        const add = (key, value) => {\n            if (typeof replacer === 'function')\n                value = replacer.call(obj, key, value);\n            else if (Array.isArray(replacer) && !replacer.includes(key))\n                return;\n            if (value !== undefined || keepUndefined)\n                map.items.push(Pair.createPair(key, value, ctx));\n        };\n        if (obj instanceof Map) {\n            for (const [key, value] of obj)\n                add(key, value);\n        }\n        else if (obj && typeof obj === 'object') {\n            for (const key of Object.keys(obj))\n                add(key, obj[key]);\n        }\n        if (typeof schema.sortMapEntries === 'function') {\n            map.items.sort(schema.sortMapEntries);\n        }\n        return map;\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (identity.isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair.Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair.Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (identity.isScalar(prev.value) && Scalar.isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && identity.isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair.Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap.addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!identity.isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection.stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexports.YAMLMap = YAMLMap;\nexports.findPair = findPair;\n", "'use strict';\n\nvar identity = require('../../nodes/identity.js');\nvar YAMLMap = require('../../nodes/YAMLMap.js');\n\nconst map = {\n    collection: 'map',\n    default: true,\n    nodeClass: YAMLMap.YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!identity.isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode: (schema, obj, ctx) => YAMLMap.YAMLMap.from(schema, obj, ctx)\n};\n\nexports.map = map;\n", "'use strict';\n\nvar createNode = require('../doc/createNode.js');\nvar stringifyCollection = require('../stringify/stringifyCollection.js');\nvar Collection = require('./Collection.js');\nvar identity = require('./identity.js');\nvar Scalar = require('./Scalar.js');\nvar toJS = require('./toJS.js');\n\nclass YAMLSeq extends Collection.Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    constructor(schema) {\n        super(identity.SEQ, schema);\n        this.items = [];\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && identity.isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (identity.isScalar(prev) && Scalar.isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS.toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection.stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n    static from(schema, obj, ctx) {\n        const { replacer } = ctx;\n        const seq = new this(schema);\n        if (obj && Symbol.iterator in Object(obj)) {\n            let i = 0;\n            for (let it of obj) {\n                if (typeof replacer === 'function') {\n                    const key = obj instanceof Set ? it : String(i++);\n                    it = replacer.call(obj, key, it);\n                }\n                seq.items.push(createNode.createNode(it, undefined, ctx));\n            }\n        }\n        return seq;\n    }\n}\nfunction asItemIndex(key) {\n    let idx = identity.isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexports.YAMLSeq = YAMLSeq;\n", "'use strict';\n\nvar identity = require('../../nodes/identity.js');\nvar YAMLSeq = require('../../nodes/YAMLSeq.js');\n\nconst seq = {\n    collection: 'seq',\n    default: true,\n    nodeClass: YAMLSeq.YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!identity.isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    },\n    createNode: (schema, obj, ctx) => YAMLSeq.YAMLSeq.from(schema, obj, ctx)\n};\n\nexports.seq = seq;\n", "'use strict';\n\nvar stringifyString = require('../../stringify/stringifyString.js');\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString.stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexports.string = string;\n", "'use strict';\n\nvar Scalar = require('../../nodes/Scalar.js');\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar.Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar.Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexports.nullTag = nullTag;\n", "'use strict';\n\nvar Scalar = require('../../nodes/Scalar.js');\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar.Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexports.boolTag = boolTag;\n", "'use strict';\n\nfunction stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexports.stringifyNumber = stringifyNumber;\n", "'use strict';\n\nvar Scalar = require('../../nodes/Scalar.js');\nvar stringifyNumber = require('../../stringify/stringifyNumber.js');\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber.stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber.stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar.Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber.stringifyNumber\n};\n\nexports.float = float;\nexports.floatExp = floatExp;\nexports.floatNaN = floatNaN;\n", "'use strict';\n\nvar stringifyNumber = require('../../stringify/stringifyNumber.js');\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber.stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber.stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexports.int = int;\nexports.intHex = intHex;\nexports.intOct = intOct;\n", "'use strict';\n\nvar map = require('../common/map.js');\nvar _null = require('../common/null.js');\nvar seq = require('../common/seq.js');\nvar string = require('../common/string.js');\nvar bool = require('./bool.js');\nvar float = require('./float.js');\nvar int = require('./int.js');\n\nconst schema = [\n    map.map,\n    seq.seq,\n    string.string,\n    _null.nullTag,\n    bool.boolTag,\n    int.intOct,\n    int.int,\n    int.intHex,\n    float.floatNaN,\n    float.floatExp,\n    float.float\n];\n\nexports.schema = schema;\n", "'use strict';\n\nvar Scalar = require('../../nodes/Scalar.js');\nvar map = require('../common/map.js');\nvar seq = require('../common/seq.js');\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar.Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true$|^false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map.map, seq.seq].concat(jsonScalars, jsonError);\n\nexports.schema = schema;\n", "'use strict';\n\nvar Scalar = require('../../nodes/Scalar.js');\nvar stringifyString = require('../../stringify/stringifyString.js');\n\nconst binary = {\n    identify: value => value instanceof Uint8Array, // Buffer inherits from Uint8Array\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof Buffer === 'function') {\n            return Buffer.from(src, 'base64');\n        }\n        else if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof Buffer === 'function') {\n            str =\n                buf instanceof Buffer\n                    ? buf.toString('base64')\n                    : Buffer.from(buf.buffer).toString('base64');\n        }\n        else if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = Scalar.Scalar.BLOCK_LITERAL;\n        if (type !== Scalar.Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString.stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexports.binary = binary;\n", "'use strict';\n\nvar identity = require('../../nodes/identity.js');\nvar Pair = require('../../nodes/Pair.js');\nvar Scalar = require('../../nodes/Scalar.js');\nvar YAMLSeq = require('../../nodes/YAMLSeq.js');\n\nfunction resolvePairs(seq, onError) {\n    if (identity.isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (identity.isPair(item))\n                continue;\n            else if (identity.isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair.Pair(new Scalar.Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = identity.isPair(item) ? item : new Pair.Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq.YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else {\n                    throw new TypeError(`Expected tuple with one key, not ${keys.length} keys`);\n                }\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(Pair.createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexports.createPairs = createPairs;\nexports.pairs = pairs;\nexports.resolvePairs = resolvePairs;\n", "'use strict';\n\nvar identity = require('../../nodes/identity.js');\nvar toJS = require('../../nodes/toJS.js');\nvar YAMLMap = require('../../nodes/YAMLMap.js');\nvar YAMLSeq = require('../../nodes/YAMLSeq.js');\nvar pairs = require('./pairs.js');\n\nclass YAMLOMap extends YAMLSeq.YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (identity.isPair(pair)) {\n                key = toJS.toJS(pair.key, '', ctx);\n                value = toJS.toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS.toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n    static from(schema, iterable, ctx) {\n        const pairs$1 = pairs.createPairs(schema, iterable, ctx);\n        const omap = new this();\n        omap.items = pairs$1.items;\n        return omap;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs$1 = pairs.resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs$1.items) {\n            if (identity.isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs$1);\n    },\n    createNode: (schema, iterable, ctx) => YAMLOMap.from(schema, iterable, ctx)\n};\n\nexports.YAMLOMap = YAMLOMap;\nexports.omap = omap;\n", "'use strict';\n\nvar Scalar = require('../../nodes/Scalar.js');\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar.Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/,\n    resolve: () => new Scalar.Scalar(false),\n    stringify: boolStringify\n};\n\nexports.falseTag = falseTag;\nexports.trueTag = trueTag;\n", "'use strict';\n\nvar Scalar = require('../../nodes/Scalar.js');\nvar stringifyNumber = require('../../stringify/stringifyNumber.js');\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber.stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber.stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar.Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber.stringifyNumber\n};\n\nexports.float = float;\nexports.floatExp = floatExp;\nexports.floatNaN = floatNaN;\n", "'use strict';\n\nvar stringifyNumber = require('../../stringify/stringifyNumber.js');\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber.stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber.stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexports.int = int;\nexports.intBin = intBin;\nexports.intHex = intHex;\nexports.intOct = intOct;\n", "'use strict';\n\nvar identity = require('../../nodes/identity.js');\nvar Pair = require('../../nodes/Pair.js');\nvar YAMLMap = require('../../nodes/YAMLMap.js');\n\nclass YAMLSet extends YAMLMap.YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (identity.isPair(key))\n            pair = key;\n        else if (key &&\n            typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair.Pair(key.key, null);\n        else\n            pair = new Pair.Pair(key, null);\n        const prev = YAMLMap.findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = YAMLMap.findPair(this.items, key);\n        return !keepPair && identity.isPair(pair)\n            ? identity.isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = YAMLMap.findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair.Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n    static from(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new this(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(Pair.createPair(value, null, ctx));\n            }\n        return set;\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    createNode: (schema, iterable, ctx) => YAMLSet.from(schema, iterable, ctx),\n    resolve(map, onError) {\n        if (identity.isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexports.YAMLSet = YAMLSet;\nexports.set = set;\n", "'use strict';\n\nvar stringifyNumber = require('../../stringify/stringifyNumber.js');\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber.stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => String(n).padStart(2, '0'))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value.toISOString().replace(/(T00:00:00)?\\.000Z$/, '')\n};\n\nexports.floatTime = floatTime;\nexports.intTime = intTime;\nexports.timestamp = timestamp;\n", "'use strict';\n\nvar map = require('../common/map.js');\nvar _null = require('../common/null.js');\nvar seq = require('../common/seq.js');\nvar string = require('../common/string.js');\nvar binary = require('./binary.js');\nvar bool = require('./bool.js');\nvar float = require('./float.js');\nvar int = require('./int.js');\nvar merge = require('./merge.js');\nvar omap = require('./omap.js');\nvar pairs = require('./pairs.js');\nvar set = require('./set.js');\nvar timestamp = require('./timestamp.js');\n\nconst schema = [\n    map.map,\n    seq.seq,\n    string.string,\n    _null.nullTag,\n    bool.trueTag,\n    bool.falseTag,\n    int.intBin,\n    int.intOct,\n    int.int,\n    int.intHex,\n    float.floatNaN,\n    float.floatExp,\n    float.float,\n    binary.binary,\n    merge.merge,\n    omap.omap,\n    pairs.pairs,\n    set.set,\n    timestamp.intTime,\n    timestamp.floatTime,\n    timestamp.timestamp\n];\n\nexports.schema = schema;\n", "'use strict';\n\nvar map = require('./common/map.js');\nvar _null = require('./common/null.js');\nvar seq = require('./common/seq.js');\nvar string = require('./common/string.js');\nvar bool = require('./core/bool.js');\nvar float = require('./core/float.js');\nvar int = require('./core/int.js');\nvar schema = require('./core/schema.js');\nvar schema$1 = require('./json/schema.js');\nvar binary = require('./yaml-1.1/binary.js');\nvar merge = require('./yaml-1.1/merge.js');\nvar omap = require('./yaml-1.1/omap.js');\nvar pairs = require('./yaml-1.1/pairs.js');\nvar schema$2 = require('./yaml-1.1/schema.js');\nvar set = require('./yaml-1.1/set.js');\nvar timestamp = require('./yaml-1.1/timestamp.js');\n\nconst schemas = new Map([\n    ['core', schema.schema],\n    ['failsafe', [map.map, seq.seq, string.string]],\n    ['json', schema$1.schema],\n    ['yaml11', schema$2.schema],\n    ['yaml-1.1', schema$2.schema]\n]);\nconst tagsByName = {\n    binary: binary.binary,\n    bool: bool.boolTag,\n    float: float.float,\n    floatExp: float.floatExp,\n    floatNaN: float.floatNaN,\n    floatTime: timestamp.floatTime,\n    int: int.int,\n    intHex: int.intHex,\n    intOct: int.intOct,\n    intTime: timestamp.intTime,\n    map: map.map,\n    merge: merge.merge,\n    null: _null.nullTag,\n    omap: omap.omap,\n    pairs: pairs.pairs,\n    seq: seq.seq,\n    set: set.set,\n    timestamp: timestamp.timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary.binary,\n    'tag:yaml.org,2002:merge': merge.merge,\n    'tag:yaml.org,2002:omap': omap.omap,\n    'tag:yaml.org,2002:pairs': pairs.pairs,\n    'tag:yaml.org,2002:set': set.set,\n    'tag:yaml.org,2002:timestamp': timestamp.timestamp\n};\nfunction getTags(customTags, schemaName, addMergeTag) {\n    const schemaTags = schemas.get(schemaName);\n    if (schemaTags && !customTags) {\n        return addMergeTag && !schemaTags.includes(merge.merge)\n            ? schemaTags.concat(merge.merge)\n            : schemaTags.slice();\n    }\n    let tags = schemaTags;\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    if (addMergeTag)\n        tags = tags.concat(merge.merge);\n    return tags.reduce((tags, tag) => {\n        const tagObj = typeof tag === 'string' ? tagsByName[tag] : tag;\n        if (!tagObj) {\n            const tagName = JSON.stringify(tag);\n            const keys = Object.keys(tagsByName)\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown custom tag ${tagName}; use one of ${keys}`);\n        }\n        if (!tags.includes(tagObj))\n            tags.push(tagObj);\n        return tags;\n    }, []);\n}\n\nexports.coreKnownTags = coreKnownTags;\nexports.getTags = getTags;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar map = require('./common/map.js');\nvar seq = require('./common/seq.js');\nvar string = require('./common/string.js');\nvar tags = require('./tags.js');\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? tags.getTags(compat, 'compat')\n            : compat\n                ? tags.getTags(null, compat)\n                : null;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? tags.coreKnownTags : {};\n        this.tags = tags.getTags(customTags, this.name, merge);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, identity.MAP, { value: map.map });\n        Object.defineProperty(this, identity.SCALAR, { value: string.string });\n        Object.defineProperty(this, identity.SEQ, { value: seq.seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexports.Schema = Schema;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar stringify = require('./stringify.js');\nvar stringifyComment = require('./stringifyComment.js');\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = stringify.createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(stringifyComment.indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (identity.isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(stringifyComment.indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify.stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += stringifyComment.lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify.stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(stringifyComment.indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(stringifyComment.indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexports.stringifyDocument = stringifyDocument;\n", "'use strict';\n\nvar Alias = require('../nodes/Alias.js');\nvar Collection = require('../nodes/Collection.js');\nvar identity = require('../nodes/identity.js');\nvar Pair = require('../nodes/Pair.js');\nvar toJS = require('../nodes/toJS.js');\nvar Schema = require('../schema/Schema.js');\nvar stringifyDocument = require('../stringify/stringifyDocument.js');\nvar anchors = require('./anchors.js');\nvar applyReviver = require('./applyReviver.js');\nvar createNode = require('./createNode.js');\nvar directives = require('./directives.js');\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, identity.NODE_TYPE, { value: identity.DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            stringKeys: false,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new directives.Directives({ version });\n        this.setSchema(version, options);\n        // @ts-expect-error We can't really know that this matches Contents.\n        this.contents =\n            value === undefined ? null : this.createNode(value, _replacer, options);\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [identity.NODE_TYPE]: { value: identity.DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        // @ts-expect-error We can't really know that this matches Contents.\n        copy.contents = identity.isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchors.anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? anchors.findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias.Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = anchors.createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode.createNode(value, tag, ctx);\n        if (flow && identity.isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair.Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (Collection.isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            // @ts-expect-error Presumed impossible if Strict extends false\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return identity.isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (Collection.isEmptyPath(path))\n            return !keepScalar && identity.isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return identity.isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return identity.isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (Collection.isEmptyPath(path))\n            return this.contents !== undefined;\n        return identity.isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = Collection.collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (Collection.isEmptyPath(path)) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = value;\n        }\n        else if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = Collection.collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new directives.Directives({ version: '1.1' });\n                opt = { resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new directives.Directives({ version });\n                opt = { resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema.Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS.toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver.applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument.stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (identity.isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexports.Document = Document;\n", "'use strict';\n\nclass YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '\u2026' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '\u2026';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '\u2026\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.max(1, Math.min(end.col - col, 80 - ci));\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexports.YAMLError = YAMLError;\nexports.YAMLParseError = YAMLParseError;\nexports.YAMLWarning = YAMLWarning;\nexports.prettifyError = prettifyError;\n", "'use strict';\n\nfunction resolveProps(tokens, { flow, indicator, next, offset, onError, parentIndent, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let reqSpace = false;\n    let tab = null;\n    let anchor = null;\n    let tag = null;\n    let newlineAfterProp = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        if (tab) {\n            if (atNewline && token.type !== 'comment' && token.type !== 'newline') {\n                onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n            }\n            tab = null;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    (indicator !== 'doc-start' || next?.type !== 'flow-collection') &&\n                    token.source.includes('\\t')) {\n                    tab = token;\n                }\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    newlineAfterProp = token;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline =\n                    indicator === 'seq-item-ind' || indicator === 'explicit-key-ind';\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== '')) {\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    }\n    if (tab &&\n        ((atNewline && tab.indent <= parentIndent) ||\n            next?.type === 'block-map' ||\n            next?.type === 'block-seq'))\n        onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        anchor,\n        tag,\n        newlineAfterProp,\n        end,\n        start: start ?? end\n    };\n}\n\nexports.resolveProps = resolveProps;\n", "'use strict';\n\nfunction containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexports.containsNewline = containsNewline;\n", "'use strict';\n\nvar utilContainsNewline = require('./util-contains-newline.js');\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            utilContainsNewline.containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexports.flowIndentCheck = flowIndentCheck;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b || (identity.isScalar(a) && identity.isScalar(b) && a.value === b.value);\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexports.mapIncludes = mapIncludes;\n", "'use strict';\n\nvar Pair = require('../nodes/Pair.js');\nvar YAMLMap = require('../nodes/YAMLMap.js');\nvar resolveProps = require('./resolve-props.js');\nvar utilContainsNewline = require('./util-contains-newline.js');\nvar utilFlowIndentCheck = require('./util-flow-indent-check.js');\nvar utilMapIncludes = require('./util-map-includes.js');\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLMap.YAMLMap;\n    const map = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    let commentEnd = null;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps.resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                commentEnd = keyProps.end;\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.newlineAfterProp || utilContainsNewline.containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        ctx.atKey = true;\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            utilFlowIndentCheck.flowIndentCheck(bm.indent, key, onError);\n        ctx.atKey = false;\n        if (utilMapIncludes.mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps.resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                utilFlowIndentCheck.flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair.Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair.Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    if (commentEnd && commentEnd < offset)\n        onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n    map.range = [bm.offset, offset, commentEnd ?? offset];\n    return map;\n}\n\nexports.resolveBlockMap = resolveBlockMap;\n", "'use strict';\n\nvar YAMLSeq = require('../nodes/YAMLSeq.js');\nvar resolveProps = require('./resolve-props.js');\nvar utilFlowIndentCheck = require('./util-flow-indent-check.js');\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLSeq.YAMLSeq;\n    const seq = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = bs.offset;\n    let commentEnd = null;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps.resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            parentIndent: bs.indent,\n            startOnNewline: true\n        });\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                commentEnd = props.end;\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, props.end, start, null, props, onError);\n        if (ctx.schema.compat)\n            utilFlowIndentCheck.flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, commentEnd ?? offset];\n    return seq;\n}\n\nexports.resolveBlockSeq = resolveBlockSeq;\n", "'use strict';\n\nfunction resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexports.resolveEnd = resolveEnd;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar Pair = require('../nodes/Pair.js');\nvar YAMLMap = require('../nodes/YAMLMap.js');\nvar YAMLSeq = require('../nodes/YAMLSeq.js');\nvar resolveEnd = require('./resolve-end.js');\nvar resolveProps = require('./resolve-props.js');\nvar utilContainsNewline = require('./util-contains-newline.js');\nvar utilMapIncludes = require('./util-map-includes.js');\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError, tag) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const NodeClass = (tag?.nodeClass ?? (isMap ? YAMLMap.YAMLMap : YAMLSeq.YAMLSeq));\n    const coll = new NodeClass(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps.resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: fc.indent,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && utilContainsNewline.containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (identity.isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // \u2192 key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            ctx.atKey = true;\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            ctx.atKey = false;\n            // value properties\n            const valueProps = resolveProps.resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                parentIndent: fc.indent,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair.Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (utilMapIncludes.mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap.YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                const endRange = (valueNode ?? keyNode).range;\n                map.range = [keyNode.range[0], endRange[1], endRange[2]];\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd.resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexports.resolveFlowCollection = resolveFlowCollection;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar Scalar = require('../nodes/Scalar.js');\nvar YAMLMap = require('../nodes/YAMLMap.js');\nvar YAMLSeq = require('../nodes/YAMLSeq.js');\nvar resolveBlockMap = require('./resolve-block-map.js');\nvar resolveBlockSeq = require('./resolve-block-seq.js');\nvar resolveFlowCollection = require('./resolve-flow-collection.js');\n\nfunction resolveCollection(CN, ctx, token, onError, tagName, tag) {\n    const coll = token.type === 'block-map'\n        ? resolveBlockMap.resolveBlockMap(CN, ctx, token, onError, tag)\n        : token.type === 'block-seq'\n            ? resolveBlockSeq.resolveBlockSeq(CN, ctx, token, onError, tag)\n            : resolveFlowCollection.resolveFlowCollection(CN, ctx, token, onError, tag);\n    const Coll = coll.constructor;\n    // If we got a tagName matching the class, or the tag name is '!',\n    // then use the tagName from the node class used to create it.\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    if (tagName)\n        coll.tag = tagName;\n    return coll;\n}\nfunction composeCollection(CN, ctx, token, props, onError) {\n    const tagToken = props.tag;\n    const tagName = !tagToken\n        ? null\n        : ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (token.type === 'block-seq') {\n        const { anchor, newlineAfterProp: nl } = props;\n        const lastProp = anchor && tagToken\n            ? anchor.offset > tagToken.offset\n                ? anchor\n                : tagToken\n            : (anchor ?? tagToken);\n        if (lastProp && (!nl || nl.offset < lastProp.offset)) {\n            const message = 'Missing newline after block sequence props';\n            onError(lastProp, 'MISSING_CHAR', message);\n        }\n    }\n    const expType = token.type === 'block-map'\n        ? 'map'\n        : token.type === 'block-seq'\n            ? 'seq'\n            : token.start.source === '{'\n                ? 'map'\n                : 'seq';\n    // shortcut: check if it's a generic YAMLMap or YAMLSeq\n    // before jumping into the custom tag logic.\n    if (!tagToken ||\n        !tagName ||\n        tagName === '!' ||\n        (tagName === YAMLMap.YAMLMap.tagName && expType === 'map') ||\n        (tagName === YAMLSeq.YAMLSeq.tagName && expType === 'seq')) {\n        return resolveCollection(CN, ctx, token, onError, tagName);\n    }\n    let tag = ctx.schema.tags.find(t => t.tag === tagName && t.collection === expType);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            if (kt?.collection) {\n                onError(tagToken, 'BAD_COLLECTION_TYPE', `${kt.tag} used for ${expType} collection, but expects ${kt.collection}`, true);\n            }\n            else {\n                onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            }\n            return resolveCollection(CN, ctx, token, onError, tagName);\n        }\n    }\n    const coll = resolveCollection(CN, ctx, token, onError, tagName, tag);\n    const res = tag.resolve?.(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options) ?? coll;\n    const node = identity.isNode(res)\n        ? res\n        : new Scalar.Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexports.composeCollection = composeCollection;\n", "'use strict';\n\nvar Scalar = require('../nodes/Scalar.js');\n\nfunction resolveBlockScalar(ctx, scalar, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, ctx.options.strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.Scalar.BLOCK_FOLDED : Scalar.Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            if (trimIndent === 0 && !ctx.atRoot) {\n                const message = 'Block scalar values in collections must be indented';\n                onError(offset, 'BAD_INDENT', message);\n            }\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexports.resolveBlockScalar = resolveBlockScalar;\n", "'use strict';\n\nvar Scalar = require('../nodes/Scalar.js');\nvar resolveEnd = require('./resolve-end.js');\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd.resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0', // null character\n    a: '\\x07', // bell character\n    b: '\\b', // backspace\n    e: '\\x1b', // escape character\n    f: '\\f', // form feed\n    n: '\\n', // line feed\n    r: '\\r', // carriage return\n    t: '\\t', // horizontal tab\n    v: '\\v', // vertical tab\n    N: '\\u0085', // Unicode next line\n    _: '\\u00a0', // Unicode non-breaking space\n    L: '\\u2028', // Unicode line separator\n    P: '\\u2029', // Unicode paragraph separator\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexports.resolveFlowScalar = resolveFlowScalar;\n", "'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar Scalar = require('../nodes/Scalar.js');\nvar resolveBlockScalar = require('./resolve-block-scalar.js');\nvar resolveFlowScalar = require('./resolve-flow-scalar.js');\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar.resolveBlockScalar(ctx, token, onError)\n        : resolveFlowScalar.resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    let tag;\n    if (ctx.options.stringKeys && ctx.atKey) {\n        tag = ctx.schema[identity.SCALAR];\n    }\n    else if (tagName)\n        tag = findScalarTagByName(ctx.schema, value, tagName, tagToken, onError);\n    else if (token.type === 'scalar')\n        tag = findScalarTagByTest(ctx, value, token, onError);\n    else\n        tag = ctx.schema[identity.SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = identity.isScalar(res) ? res : new Scalar.Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar.Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[identity.SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[identity.SCALAR];\n}\nfunction findScalarTagByTest({ atKey, directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => (tag.default === true || (atKey && tag.default === 'key')) &&\n        tag.test?.test(value)) || schema[identity.SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[identity.SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexports.composeScalar = composeScalar;\n", "'use strict';\n\nfunction emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        if (pos === null)\n            pos = before.length;\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexports.emptyScalarPosition = emptyScalarPosition;\n", "'use strict';\n\nvar Alias = require('../nodes/Alias.js');\nvar identity = require('../nodes/identity.js');\nvar composeCollection = require('./compose-collection.js');\nvar composeScalar = require('./compose-scalar.js');\nvar resolveEnd = require('./resolve-end.js');\nvar utilEmptyScalarPosition = require('./util-empty-scalar-position.js');\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const atKey = ctx.atKey;\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar.composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection.composeCollection(CN, ctx, token, props, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (atKey &&\n        ctx.options.stringKeys &&\n        (!identity.isScalar(node) ||\n            typeof node.value !== 'string' ||\n            (node.tag && node.tag !== 'tag:yaml.org,2002:str'))) {\n        const msg = 'With stringKeys, all keys must be strings';\n        onError(tag ?? token, 'NON_STRING_KEY', msg);\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag, end }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: utilEmptyScalarPosition.emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar.composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        node.comment = comment;\n        node.range[2] = end;\n    }\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias.Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd.resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexports.composeEmptyNode = composeEmptyNode;\nexports.composeNode = composeNode;\n", "'use strict';\n\nvar Document = require('../doc/Document.js');\nvar composeNode = require('./compose-node.js');\nvar resolveEnd = require('./resolve-end.js');\nvar resolveProps = require('./resolve-props.js');\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document.Document(undefined, opts);\n    const ctx = {\n        atKey: false,\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps.resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        parentIndent: 0,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    // @ts-expect-error If Contents is set, let's trust the user\n    doc.contents = value\n        ? composeNode.composeNode(ctx, value, props, onError)\n        : composeNode.composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd.resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexports.composeDoc = composeDoc;\n", "'use strict';\n\nvar directives = require('../doc/directives.js');\nvar Document = require('../doc/Document.js');\nvar errors = require('../errors.js');\nvar identity = require('../nodes/identity.js');\nvar composeDoc = require('./compose-doc.js');\nvar resolveEnd = require('./resolve-end.js');\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new errors.YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new errors.YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new directives.Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (identity.isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (identity.isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        if (process.env.LOG_STREAM)\n            console.dir(token, { depth: null });\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc.composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new errors.YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new errors.YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd.resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new errors.YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document.Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexports.Composer = Composer;\n", "'use strict';\n\nvar resolveBlockScalar = require('../compose/resolve-block-scalar.js');\nvar resolveFlowScalar = require('../compose/resolve-flow-scalar.js');\nvar errors = require('../errors.js');\nvar stringifyString = require('../stringify/stringifyString.js');\n\nfunction resolveAsScalar(token, strict = true, onError) {\n    if (token) {\n        const _onError = (pos, code, message) => {\n            const offset = typeof pos === 'number' ? pos : Array.isArray(pos) ? pos[0] : pos.offset;\n            if (onError)\n                onError(offset, code, message);\n            else\n                throw new errors.YAMLParseError([offset, offset + 1], code, message);\n        };\n        switch (token.type) {\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return resolveFlowScalar.resolveFlowScalar(token, strict, _onError);\n            case 'block-scalar':\n                return resolveBlockScalar.resolveBlockScalar({ options: { strict } }, token, _onError);\n        }\n    }\n    return null;\n}\n/**\n * Create a new scalar token with `value`\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.indent The indent level of the token.\n * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.\n * @param context.offset The offset position of the token.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction createScalarToken(value, context) {\n    const { implicitKey = false, indent, inFlow = false, offset = -1, type = 'PLAIN' } = context;\n    const source = stringifyString.stringifyString({ type, value }, {\n        implicitKey,\n        indent: indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    const end = context.end ?? [\n        { type: 'newline', offset: -1, indent, source: '\\n' }\n    ];\n    switch (source[0]) {\n        case '|':\n        case '>': {\n            const he = source.indexOf('\\n');\n            const head = source.substring(0, he);\n            const body = source.substring(he + 1) + '\\n';\n            const props = [\n                { type: 'block-scalar-header', offset, indent, source: head }\n            ];\n            if (!addEndtoBlockProps(props, end))\n                props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n            return { type: 'block-scalar', offset, indent, props, source: body };\n        }\n        case '\"':\n            return { type: 'double-quoted-scalar', offset, indent, source, end };\n        case \"'\":\n            return { type: 'single-quoted-scalar', offset, indent, source, end };\n        default:\n            return { type: 'scalar', offset, indent, source, end };\n    }\n}\n/**\n * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.\n *\n * Best efforts are made to retain any comments previously associated with the `token`,\n * though all contents within a collection's `items` will be overwritten.\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.afterKey In most cases, values after a key should have an additional level of indentation.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction setScalarValue(token, value, context = {}) {\n    let { afterKey = false, implicitKey = false, inFlow = false, type } = context;\n    let indent = 'indent' in token ? token.indent : null;\n    if (afterKey && typeof indent === 'number')\n        indent += 2;\n    if (!type)\n        switch (token.type) {\n            case 'single-quoted-scalar':\n                type = 'QUOTE_SINGLE';\n                break;\n            case 'double-quoted-scalar':\n                type = 'QUOTE_DOUBLE';\n                break;\n            case 'block-scalar': {\n                const header = token.props[0];\n                if (header.type !== 'block-scalar-header')\n                    throw new Error('Invalid block scalar header');\n                type = header.source[0] === '>' ? 'BLOCK_FOLDED' : 'BLOCK_LITERAL';\n                break;\n            }\n            default:\n                type = 'PLAIN';\n        }\n    const source = stringifyString.stringifyString({ type, value }, {\n        implicitKey: implicitKey || indent === null,\n        indent: indent !== null && indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    switch (source[0]) {\n        case '|':\n        case '>':\n            setBlockScalarValue(token, source);\n            break;\n        case '\"':\n            setFlowScalarValue(token, source, 'double-quoted-scalar');\n            break;\n        case \"'\":\n            setFlowScalarValue(token, source, 'single-quoted-scalar');\n            break;\n        default:\n            setFlowScalarValue(token, source, 'scalar');\n    }\n}\nfunction setBlockScalarValue(token, source) {\n    const he = source.indexOf('\\n');\n    const head = source.substring(0, he);\n    const body = source.substring(he + 1) + '\\n';\n    if (token.type === 'block-scalar') {\n        const header = token.props[0];\n        if (header.type !== 'block-scalar-header')\n            throw new Error('Invalid block scalar header');\n        header.source = head;\n        token.source = body;\n    }\n    else {\n        const { offset } = token;\n        const indent = 'indent' in token ? token.indent : -1;\n        const props = [\n            { type: 'block-scalar-header', offset, indent, source: head }\n        ];\n        if (!addEndtoBlockProps(props, 'end' in token ? token.end : undefined))\n            props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n        for (const key of Object.keys(token))\n            if (key !== 'type' && key !== 'offset')\n                delete token[key];\n        Object.assign(token, { type: 'block-scalar', indent, props, source: body });\n    }\n}\n/** @returns `true` if last token is a newline */\nfunction addEndtoBlockProps(props, end) {\n    if (end)\n        for (const st of end)\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                    props.push(st);\n                    break;\n                case 'newline':\n                    props.push(st);\n                    return true;\n            }\n    return false;\n}\nfunction setFlowScalarValue(token, source, type) {\n    switch (token.type) {\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            token.type = type;\n            token.source = source;\n            break;\n        case 'block-scalar': {\n            const end = token.props.slice(1);\n            let oa = source.length;\n            if (token.props[0].type === 'block-scalar-header')\n                oa -= token.props[0].source.length;\n            for (const tok of end)\n                tok.offset += oa;\n            delete token.props;\n            Object.assign(token, { type, source, end });\n            break;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            const offset = token.offset + source.length;\n            const nl = { type: 'newline', offset, indent: token.indent, source: '\\n' };\n            delete token.items;\n            Object.assign(token, { type, source, end: [nl] });\n            break;\n        }\n        default: {\n            const indent = 'indent' in token ? token.indent : -1;\n            const end = 'end' in token && Array.isArray(token.end)\n                ? token.end.filter(st => st.type === 'space' ||\n                    st.type === 'comment' ||\n                    st.type === 'newline')\n                : [];\n            for (const key of Object.keys(token))\n                if (key !== 'type' && key !== 'offset')\n                    delete token[key];\n            Object.assign(token, { type, indent, source, end });\n        }\n    }\n}\n\nexports.createScalarToken = createScalarToken;\nexports.resolveAsScalar = resolveAsScalar;\nexports.setScalarValue = setScalarValue;\n", "'use strict';\n\n/**\n * Stringify a CST document, token, or collection item\n *\n * Fair warning: This applies no validation whatsoever, and\n * simply concatenates the sources in their logical order.\n */\nconst stringify = (cst) => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);\nfunction stringifyToken(token) {\n    switch (token.type) {\n        case 'block-scalar': {\n            let res = '';\n            for (const tok of token.props)\n                res += stringifyToken(tok);\n            return res + token.source;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            let res = '';\n            for (const item of token.items)\n                res += stringifyItem(item);\n            return res;\n        }\n        case 'flow-collection': {\n            let res = token.start.source;\n            for (const item of token.items)\n                res += stringifyItem(item);\n            for (const st of token.end)\n                res += st.source;\n            return res;\n        }\n        case 'document': {\n            let res = stringifyItem(token);\n            if (token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n        default: {\n            let res = token.source;\n            if ('end' in token && token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n    }\n}\nfunction stringifyItem({ start, key, sep, value }) {\n    let res = '';\n    for (const st of start)\n        res += st.source;\n    if (key)\n        res += stringifyToken(key);\n    if (sep)\n        for (const st of sep)\n            res += st.source;\n    if (value)\n        res += stringifyToken(value);\n    return res;\n}\n\nexports.stringify = stringify;\n", "'use strict';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` \u2013 Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` \u2013 Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` \u2013 Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` \u2013 The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexports.visit = visit;\n", "'use strict';\n\nvar cstScalar = require('./cst-scalar.js');\nvar cstStringify = require('./cst-stringify.js');\nvar cstVisit = require('./cst-visit.js');\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexports.createScalarToken = cstScalar.createScalarToken;\nexports.resolveAsScalar = cstScalar.resolveAsScalar;\nexports.setScalarValue = cstScalar.setScalarValue;\nexports.stringify = cstStringify.stringify;\nexports.visit = cstVisit.visit;\nexports.BOM = BOM;\nexports.DOCUMENT = DOCUMENT;\nexports.FLOW_END = FLOW_END;\nexports.SCALAR = SCALAR;\nexports.isCollection = isCollection;\nexports.isScalar = isScalar;\nexports.prettyToken = prettyToken;\nexports.tokenType = tokenType;\n", "'use strict';\n\nvar cst = require('./cst.js');\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = new Set('0123456789ABCDEFabcdef');\nconst tagChars = new Set(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\");\nconst flowIndicatorChars = new Set(',[]{}');\nconst invalidAnchorChars = new Set(' ,[]{}\\n\\r\\t');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.has(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            if (typeof source !== 'string')\n                throw TypeError('source is not a string');\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === cst.BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            let cs = line.indexOf('#');\n            while (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t') {\n                    dirEnd = cs - 1;\n                    break;\n                }\n                else {\n                    cs = line.indexOf('#', cs + 1);\n                }\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield cst.DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if ((s === '---' || s === '...') && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return s === '---' ? 'doc' : 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield cst.FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else {\n                this.indentNext =\n                    this.blockScalarIndent + (this.indentNext === 0 ? 1 : this.indentNext);\n            }\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        // Trailing insufficiently indented tabs are invalid.\n        // To catch that during parsing, we include them in the block scalar value.\n        let i = nl + 1;\n        ch = this.buffer[i];\n        while (ch === ' ')\n            ch = this.buffer[++i];\n        if (ch === '\\t') {\n            while (ch === '\\t' || ch === ' ' || ch === '\\r' || ch === '\\n')\n                ch = this.buffer[++i];\n            nl = i - 1;\n        }\n        else if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield cst.SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && flowIndicatorChars.has(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield cst.SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && flowIndicatorChars.has(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.has(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.has(this.buffer[i + 1]) &&\n                    hexDigits.has(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexports.Lexer = Lexer;\n", "'use strict';\n\n/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexports.LineCounter = LineCounter;\n", "'use strict';\n\nvar cst = require('./cst.js');\nvar lexer = require('./lexer.js');\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new lexer.Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (process.env.LOG_TOKENS)\n            console.log('|', cst.prettyToken(source));\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = cst.tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !it.explicitKey;\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atMapIndent = !this.onKeyLine && this.indent === map.indent;\n            const atNextItem = atMapIndent &&\n                (it.sep || it.explicitKey) &&\n                this.type !== 'seq-item-ind';\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !it.explicitKey) {\n                        it.start.push(this.sourceToken);\n                        it.explicitKey = true;\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start, explicitKey: true });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken], explicitKey: true }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (it.explicitKey) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key;\n                            // @ts-expect-error type guard is wrong here\n                            delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (atMapIndent && bv.type !== 'block-seq') {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, explicitKey: true }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexports.Parser = Parser;\n", "'use strict';\n\nvar composer = require('./compose/composer.js');\nvar Document = require('./doc/Document.js');\nvar errors = require('./errors.js');\nvar log = require('./log.js');\nvar identity = require('./nodes/identity.js');\nvar lineCounter = require('./parse/line-counter.js');\nvar parser = require('./parse/parser.js');\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter$1 = options.lineCounter || (prettyErrors && new lineCounter.LineCounter()) || null;\n    return { lineCounter: lineCounter$1, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser$1 = new parser.Parser(lineCounter?.addNewLine);\n    const composer$1 = new composer.Composer(options);\n    const docs = Array.from(composer$1.compose(parser$1.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(errors.prettifyError(source, lineCounter));\n            doc.warnings.forEach(errors.prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer$1.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser$1 = new parser.Parser(lineCounter?.addNewLine);\n    const composer$1 = new composer.Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer$1.compose(parser$1.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new errors.YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(errors.prettifyError(source, lineCounter));\n        doc.warnings.forEach(errors.prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => log.warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    if (identity.isDocument(value) && !_replacer)\n        return value.toString(options);\n    return new Document.Document(value, _replacer, options).toString(options);\n}\n\nexports.parse = parse;\nexports.parseAllDocuments = parseAllDocuments;\nexports.parseDocument = parseDocument;\nexports.stringify = stringify;\n", "'use strict';\n\nvar composer = require('./compose/composer.js');\nvar Document = require('./doc/Document.js');\nvar Schema = require('./schema/Schema.js');\nvar errors = require('./errors.js');\nvar Alias = require('./nodes/Alias.js');\nvar identity = require('./nodes/identity.js');\nvar Pair = require('./nodes/Pair.js');\nvar Scalar = require('./nodes/Scalar.js');\nvar YAMLMap = require('./nodes/YAMLMap.js');\nvar YAMLSeq = require('./nodes/YAMLSeq.js');\nvar cst = require('./parse/cst.js');\nvar lexer = require('./parse/lexer.js');\nvar lineCounter = require('./parse/line-counter.js');\nvar parser = require('./parse/parser.js');\nvar publicApi = require('./public-api.js');\nvar visit = require('./visit.js');\n\n\n\nexports.Composer = composer.Composer;\nexports.Document = Document.Document;\nexports.Schema = Schema.Schema;\nexports.YAMLError = errors.YAMLError;\nexports.YAMLParseError = errors.YAMLParseError;\nexports.YAMLWarning = errors.YAMLWarning;\nexports.Alias = Alias.Alias;\nexports.isAlias = identity.isAlias;\nexports.isCollection = identity.isCollection;\nexports.isDocument = identity.isDocument;\nexports.isMap = identity.isMap;\nexports.isNode = identity.isNode;\nexports.isPair = identity.isPair;\nexports.isScalar = identity.isScalar;\nexports.isSeq = identity.isSeq;\nexports.Pair = Pair.Pair;\nexports.Scalar = Scalar.Scalar;\nexports.YAMLMap = YAMLMap.YAMLMap;\nexports.YAMLSeq = YAMLSeq.YAMLSeq;\nexports.CST = cst;\nexports.Lexer = lexer.Lexer;\nexports.LineCounter = lineCounter.LineCounter;\nexports.Parser = parser.Parser;\nexports.parse = publicApi.parse;\nexports.parseAllDocuments = publicApi.parseAllDocuments;\nexports.parseDocument = publicApi.parseDocument;\nexports.stringify = publicApi.stringify;\nexports.visit = visit.visit;\nexports.visitAsync = visit.visitAsync;\n", "'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n", "var balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m) return [str];\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  if (/\\$$/.test(m.pre)) {    \n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre+ '{' + m.body + '}' + post[k];\n      expansions.push(expansion);\n    }\n  } else {\n    var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isSequence = isNumericSequence || isAlphaSequence;\n    var isOptions = m.body.indexOf(',') >= 0;\n    if (!isSequence && !isOptions) {\n      // {a},b}\n      if (m.post.match(/,.*\\}/)) {\n        str = m.pre + '{' + m.body + escClose + m.post;\n        return expand(str);\n      }\n      return [str];\n    }\n\n    var n;\n    if (isSequence) {\n      n = m.body.split(/\\.\\./);\n    } else {\n      n = parseCommaParts(m.body);\n      if (n.length === 1) {\n        // x{{a,b}}y ==> x{a}y x{b}y\n        n = expand(n[0], false).map(embrace);\n        if (n.length === 1) {\n          return post.map(function(p) {\n            return m.pre + n[0] + p;\n          });\n        }\n      }\n    }\n\n    // at this point, n is the parts, and we know it's not a comma set\n    // with a single entry.\n    var N;\n\n    if (isSequence) {\n      var x = numeric(n[0]);\n      var y = numeric(n[1]);\n      var width = Math.max(n[0].length, n[1].length)\n      var incr = n.length == 3\n        ? Math.abs(numeric(n[2]))\n        : 1;\n      var test = lte;\n      var reverse = y < x;\n      if (reverse) {\n        incr *= -1;\n        test = gte;\n      }\n      var pad = n.some(isPadded);\n\n      N = [];\n\n      for (var i = x; test(i, y); i += incr) {\n        var c;\n        if (isAlphaSequence) {\n          c = String.fromCharCode(i);\n          if (c === '\\\\')\n            c = '';\n        } else {\n          c = String(i);\n          if (pad) {\n            var need = width - c.length;\n            if (need > 0) {\n              var z = new Array(need + 1).join('0');\n              if (i < 0)\n                c = '-' + z + c.slice(1);\n              else\n                c = z + c;\n            }\n          }\n        }\n        N.push(c);\n      }\n    } else {\n      N = [];\n\n      for (var j = 0; j < n.length; j++) {\n        N.push.apply(N, expand(n[j], false));\n      }\n    }\n\n    for (var j = 0; j < N.length; j++) {\n      for (var k = 0; k < post.length; k++) {\n        var expansion = pre + N[j] + post[k];\n        if (!isTop || isSequence || expansion)\n          expansions.push(expansion);\n      }\n    }\n  }\n\n  return expansions;\n}\n\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createConnection,\n  TextDocuments,\n  Diagnostic,\n  ProposedFeatures,\n  InitializeParams,\n  DidChangeConfigurationNotification,\n  CompletionItem,\n  TextDocumentPositionParams,\n  TextDocumentSyncKind,\n  InitializeResult,\n  DocumentDiagnosticReportKind,\n  type DocumentDiagnosticReport,\n  SemanticTokensBuilder,\n  CodeActionKind,\n  WorkspaceDocumentDiagnosticReport,\n} from \"vscode-languageserver/node\";\n\nimport { TextDocument } from \"vscode-languageserver-textdocument\";\nimport {\n  CodeActionDiagnosticData,\n  ContextIssues,\n  Issue,\n  StandardTypeIssue,\n  SyntaxIssue,\n  tokenModifiers,\n  tokenTypes,\n} from \"./types\";\nimport {\n  findContext,\n  findContexts,\n  resolveContextFiles,\n  toRange,\n} from \"./helpers\";\nimport { ContextAware } from \"./runtimeEvaluator\";\nimport { getCompletions } from \"./getCompletions\";\nimport { getReferences } from \"./findReferences\";\nimport { getTokenizedDocumentProvider } from \"./providers/tokenizedDocument\";\nimport { getPrepareRenameRequest, getRenameRequest } from \"./getRenameRequest\";\nimport { getDefinitions } from \"./findDefinitions\";\nimport { getDeclaration } from \"./findDeclarations\";\nimport { getCodeActions } from \"./getCodeActions\";\nimport { getDocumentFormatting as getDocumentFormatting } from \"./getDocumentFormatting\";\nimport { getTypeCompletions } from \"./getTypeCompletions\";\nimport { getHover } from \"./getHover\";\nimport {\n  BindingType,\n  getBindingLoader,\n} from \"./dtsTypes/bindings/bindingLoader\";\n\nlet contextAware: ContextAware[] = [];\nlet activeContext: Promise<ContextAware | undefined>;\nlet activeFileUri: string | undefined;\n\nlet debounce = new WeakMap<\n  ContextAware,\n  { abort: AbortController; promise: Promise<void> }\n>();\n\nconst isStable = (context: ContextAware) => {\n  const d = debounce.get(context);\n  if (d?.abort.signal.aborted) return;\n  return d?.promise;\n};\n\nconst allStable = async () => {\n  await initialSettingsProvided;\n  await Promise.all(contextAware.map(isStable));\n};\n\nconst getAdhocContexts = (settings: Settings) => {\n  return contextAware.filter((c) => {\n    const settingContext = settings.contexts.find(\n      (sc) => sc.dtsFile === c.parser.uri\n    );\n\n    return (\n      !settingContext ||\n      !settingContext.overlays.every((o) => c.overlays.some((oo) => oo === o))\n    );\n  });\n};\n\nconst getConfiguredContexts = (settings: Settings) => {\n  return contextAware.filter((c) => {\n    const settingContext = settings.contexts.find(\n      (sc) => sc.dtsFile === c.parser.uri\n    );\n\n    return (\n      !!settingContext &&\n      settingContext.overlays.every((o) => c.overlays.some((oo) => oo === o))\n    );\n  });\n};\n\nconst contextFullyOverlaps = async (a: ContextAware, b: ContextAware) => {\n  if (a === b) {\n    return true;\n  }\n\n  const contextAFiles = (await a.getOrderedParsers()).map((p) => p.uri);\n  const contextBFiles = (await b.getOrderedParsers()).map((p) => p.uri);\n\n  return contextAFiles.every((f) => contextBFiles.some((ff) => ff === f));\n};\n\nconst cleanUpAdhocContext = async (context: ContextAware) => {\n  const adhocContexts = getAdhocContexts(globalSettings);\n  const configContexts = await getConfiguredContexts(globalSettings);\n  const adhocContextFiles = await resolveContextFiles(adhocContexts);\n  const contextFiles = (await context.getOrderedParsers()).map((p) => p.uri);\n\n  if (contextAware.indexOf(context) === -1) {\n    return;\n  }\n\n  const sameChart = await Promise.all(\n    adhocContextFiles.flatMap((ac) => {\n      return [\n        ...configContexts,\n        ...adhocContexts.filter((a) => a !== ac.context),\n      ].map(async (cc) => ({\n        context: ac.context,\n        same: await contextFullyOverlaps(ac.context, cc),\n      }));\n    })\n  );\n\n  const contextToClean = adhocContextFiles\n    .filter(\n      (o) =>\n        sameChart.some((r) => r.context === o.context && r.same) ||\n        (o.context !== context &&\n          o.context.parser.uri === context.parser.uri &&\n          contextFiles.some((f) => o.files.indexOf(f) !== -1))\n    )\n    .map((o) => o.context);\n\n  if (contextToClean.length) {\n    contextToClean.forEach((c) => {\n      debounce.delete(c);\n      console.log(\n        `cleaning up context with id ${contextAware.indexOf(c)} and uri ${\n          c.parser.uri\n        }`\n      );\n    });\n    contextAware = contextAware.filter((c) => contextToClean.indexOf(c) === -1);\n  }\n};\n\n// Create a connection for the server, using Node's IPC as a transport.\n// Also include all preview / proposed LSP features.\nconst connection = createConnection(ProposedFeatures.all);\n\n// Create a simple text document manager.\nconst documents: TextDocuments<TextDocument> = new TextDocuments(TextDocument);\n\nlet hasConfigurationCapability = true;\nlet hasWorkspaceFolderCapability = false;\n\nconnection.onInitialize((params: InitializeParams) => {\n  const capabilities = params.capabilities;\n\n  // Does the client support the `workspace/configuration` request?\n  // If not, we fall back using global settings.\n  hasConfigurationCapability = !!(\n    capabilities.workspace && !!capabilities.workspace.configuration\n  );\n  hasWorkspaceFolderCapability = !!(\n    capabilities.workspace && !!capabilities.workspace.workspaceFolders\n  );\n\n  const result: InitializeResult = {\n    capabilities: {\n      textDocumentSync: TextDocumentSyncKind.Incremental,\n      renameProvider: {\n        prepareProvider: true,\n      },\n      completionProvider: {\n        resolveProvider: true,\n        triggerCharacters: [\"&\", \"=\", \" \"],\n      },\n      diagnosticProvider: {\n        interFileDependencies: true,\n        workspaceDiagnostics: true,\n      },\n      codeActionProvider: {\n        codeActionKinds: [CodeActionKind.QuickFix, CodeActionKind.SourceFixAll],\n      },\n      documentSymbolProvider: true,\n      semanticTokensProvider: {\n        legend: {\n          tokenTypes: tokenTypes as unknown as string[],\n          tokenModifiers: tokenModifiers as unknown as string[],\n        },\n        full: true,\n      },\n      documentLinkProvider: {\n        resolveProvider: false,\n      },\n      definitionProvider: true,\n      declarationProvider: true,\n      referencesProvider: true,\n      documentFormattingProvider: true,\n      hoverProvider: true,\n    },\n  };\n  if (hasWorkspaceFolderCapability) {\n    result.capabilities.workspace = {\n      workspaceFolders: {\n        supported: true,\n      },\n    };\n  }\n  return result;\n});\n\nconnection.onInitialized(() => {\n  if (hasConfigurationCapability) {\n    // Register for all configuration changes.\n    connection.client.register(DidChangeConfigurationNotification.type, {});\n  }\n  if (hasWorkspaceFolderCapability) {\n    connection.workspace.onDidChangeWorkspaceFolders((_event) => {\n      connection.console.log(\"Workspace folder change event received.\");\n    });\n  }\n});\n\ninterface Context {\n  includePaths?: string[];\n  dtsFile: string;\n  overlays: string[];\n  bindingType: BindingType;\n  zephyrBindings: string[];\n}\n\ninterface Settings {\n  defaultBindingType: BindingType;\n  defaultZephyrBindings: string[];\n  defaultIncludePaths: string[];\n  contexts: Context[];\n  preferredContext?: number;\n  lockRenameEdits: string[];\n}\n\n// The global settings, used when the `workspace/configuration` request is not supported by the client.\n// Please note that this is not the case when using this server with the client provided in this example\n// but could happen with other clients.\nconst defaultSettings: Settings = {\n  defaultBindingType: \"Zephyr\",\n  defaultZephyrBindings: [],\n  defaultIncludePaths: [],\n  contexts: [],\n  lockRenameEdits: [],\n};\nlet globalSettings: Settings = defaultSettings;\n\n// Cache the settings of all open documents\nconst documentSettings: Map<string, Thenable<Settings>> = new Map();\n\nlet init = false;\nconst initialSettingsProvided: Promise<void> = new Promise((resolve) => {\n  const t = setInterval(() => {\n    if (init) {\n      resolve();\n      clearInterval(t);\n    }\n  }, 100);\n});\nconnection.onDidChangeConfiguration((change) => {\n  init = true;\n  if (!change.settings) {\n    return;\n  }\n  console.log(\"onDidChangeConfiguration\", change);\n  if (hasConfigurationCapability) {\n    // Reset all cached document settings\n    documentSettings.clear();\n  }\n\n  const oldSettngs = globalSettings;\n\n  globalSettings = <Settings>{\n    ...defaultSettings,\n    ...change.settings?.deviceTree,\n  };\n\n  let adhocContexts = getAdhocContexts(oldSettngs);\n\n  contextAware = [];\n\n  debounce = new WeakMap<\n    ContextAware,\n    { abort: AbortController; promise: Promise<void> }\n  >();\n\n  globalSettings.contexts.forEach((context, i) => {\n    const newContext = new ContextAware(\n      context.dtsFile,\n      context.includePaths ?? globalSettings.defaultIncludePaths,\n      getBindingLoader(\n        context.zephyrBindings ?? globalSettings.defaultZephyrBindings,\n        context.bindingType ?? globalSettings.defaultBindingType\n      ),\n      context.overlays\n    );\n    contextAware.push(newContext);\n    console.log(`New context with id ${i} for ${context.dtsFile}`);\n  });\n\n  contextAware = [\n    ...contextAware,\n    ...adhocContexts.map((c, i) => {\n      console.log(\n        `New context with id ${i + contextAware.length} for ${c.parser.uri}`\n      );\n      return new ContextAware(\n        c.parser.uri,\n        globalSettings.defaultIncludePaths,\n        getBindingLoader(\n          globalSettings.defaultZephyrBindings,\n          globalSettings.defaultBindingType\n        )\n      );\n    }),\n  ];\n\n  adhocContexts = getAdhocContexts(globalSettings);\n  adhocContexts.forEach(cleanUpAdhocContext);\n  if (activeFileUri) {\n    updateActiveContext(activeFileUri);\n  }\n\n  connection.languages.diagnostics.refresh();\n});\n\n// Only keep settings for open documents\ndocuments.onDidClose((e) => {\n  documentSettings.delete(e.document.uri);\n});\n\nconnection.languages.diagnostics.on(async (params) => {\n  const uri = params.textDocument.uri.replace(\"file://\", \"\");\n  await allStable();\n  const context = await activeContext;\n\n  return {\n    kind: DocumentDiagnosticReportKind.Full,\n    items: context ? await getDiagnostics(context, uri) : [],\n  } satisfies DocumentDiagnosticReport;\n});\n\nconst syntaxIssueToMessage = (issue: SyntaxIssue) => {\n  switch (issue) {\n    case SyntaxIssue.VALUE:\n      return \"Expected Value\";\n    case SyntaxIssue.END_STATEMENT:\n      return \"Expected ';'\";\n    case SyntaxIssue.CURLY_OPEN:\n      return \"Expected '{'\";\n    case SyntaxIssue.CURLY_CLOSE:\n      return \"Expected '}'\";\n    case SyntaxIssue.OPEN_SQUARE:\n      return \"Expected '['\";\n    case SyntaxIssue.SQUARE_CLOSE:\n      return \"Expected ']'\";\n    case SyntaxIssue.PROPERTY_NAME:\n      return \"Expected property name\";\n    case SyntaxIssue.NODE_NAME:\n      return \"Expected node name\";\n    case SyntaxIssue.NODE_ADDRESS:\n      return \"Expected node address\";\n    case SyntaxIssue.NODE_DEFINITION:\n      return \"Expected node definition\";\n    case SyntaxIssue.PROPERTY_DEFINITION:\n      return \"Expected property definition\";\n    case SyntaxIssue.NUMERIC_VALUE:\n      return \"Expected numerical value\";\n    case SyntaxIssue.NODE_PATH:\n      return \"Expected node path\";\n    case SyntaxIssue.NODE_REF:\n      return \"Expected node ref\";\n    case SyntaxIssue.ROOT_NODE_NAME:\n      return \"Expected root node name\";\n    case SyntaxIssue.GT_SYM:\n      return \"Expected '>'\";\n    case SyntaxIssue.LT_SYM:\n      return \"Expected '<'\";\n    case SyntaxIssue.BYTESTRING:\n      return \"Expected bytes string \";\n    case SyntaxIssue.BYTESTRING_EVEN:\n      return \"Expected two digits in bytestring\";\n    case SyntaxIssue.DOUBLE_QUOTE:\n      return \"Expected '\\\"'\";\n    case SyntaxIssue.SINGLE_QUOTE:\n      return \"Expected '\\\\''\";\n    case SyntaxIssue.VALID_NODE_PATH:\n      return \"Expected valid node path\";\n    case SyntaxIssue.LABEL_NAME:\n      return \"Expected Label name\";\n    case SyntaxIssue.FORWARD_SLASH_START_PATH:\n      return \"Expected '/' in the state of a node path\";\n    case SyntaxIssue.BYTESTRING_HEX:\n      return \"Expected hex values are not allowed\";\n    case SyntaxIssue.MISSING_FORWARD_SLASH_END:\n      return \"Missing '/'\";\n    case SyntaxIssue.NO_STATEMENT:\n      return \"Found ';' without a statement\";\n    case SyntaxIssue.LABEL_ASSIGN_MISSING_COLON:\n      return \"Missing ':' for label assign\";\n    case SyntaxIssue.DELETE_INCOMPLETE:\n      return \"Did you mean /delete-node/ or /delete-property/\";\n    case SyntaxIssue.DELETE_NODE_INCOMPLETE:\n      return \"Did you mean /delete-node/\";\n    case SyntaxIssue.DELETE_PROPERTY_INCOMPLETE:\n      return \"Did you mean /delete-property/\";\n    case SyntaxIssue.UNKNOWN:\n      return \"Unknown syntax\";\n    case SyntaxIssue.EXPECTED_EXPRESSION:\n      return \"Expected expression\";\n    case SyntaxIssue.MISSING_ROUND_CLOSE:\n      return 'Expected \"(\"';\n    case SyntaxIssue.INVALID_INCLUDE_SYNTAX:\n      return \"Invalid include Syntax\";\n    case SyntaxIssue.MISSING_COMMA:\n      return 'Missing \",\"';\n    case SyntaxIssue.EXPECTED_IDENTIFIER:\n      return \"Expected Macro Identifier\";\n    case SyntaxIssue.EXPECTED_IDENTIFIER_FUNCTION_LIKE:\n      return \"Expected Macro Identifier or Function like Macro\";\n    case SyntaxIssue.WHITE_SPACE:\n      return \"White space is not allowed\";\n    case SyntaxIssue.EXPECTED_VALUE:\n      return \"Expected Value\";\n    case SyntaxIssue.PROPERTY_MUST_BE_IN_NODE:\n      return \"Properties can only be defined in a node.\";\n    case SyntaxIssue.PROPERTY_DELETE_MUST_BE_IN_NODE:\n      return \"Properties can only be deleted inside a node.\";\n  }\n};\n\nconst contextIssuesToMessage = (issue: Issue<ContextIssues>) => {\n  return issue.issues\n    .map((_issue) => {\n      switch (_issue) {\n        case ContextIssues.DUPLICATE_PROPERTY_NAME:\n          return `Property \"${issue.templateStrings[0]}\" is replaced by a later definition.`;\n        case ContextIssues.PROPERTY_DOES_NOT_EXIST:\n          return \"Cannot delete a property before it has been defined\";\n        case ContextIssues.DUPLICATE_NODE_NAME:\n          return \"Node name already defined\";\n        case ContextIssues.UNABLE_TO_RESOLVE_CHILD_NODE:\n          return `No node with that reference \"${issue.templateStrings[0]}\" has been defined`;\n        case ContextIssues.UNABLE_TO_RESOLVE_NODE_PATH:\n          return `No node with name \"${issue.templateStrings[0]}\" could be found in \"/${issue.templateStrings[1]}\".`;\n        case ContextIssues.LABEL_ALREADY_IN_USE:\n          return `Label name \"${issue.templateStrings[0]}\" already defined`;\n        case ContextIssues.DELETE_PROPERTY:\n          return `Property \"${issue.templateStrings[0]}\" was deleted.`;\n        case ContextIssues.DELETE_NODE:\n          return `Node \"${issue.templateStrings[0]}\" was deleted.`;\n        case ContextIssues.NODE_DOES_NOT_EXIST:\n          return \"Cannot delete a node before it has been defined\";\n      }\n    })\n    .join(\" or \");\n};\n\nconst contextIssuesToLinkedMessage = (issue: ContextIssues) => {\n  switch (issue) {\n    case ContextIssues.DUPLICATE_PROPERTY_NAME:\n      return \"Property name already defined.\";\n    case ContextIssues.PROPERTY_DOES_NOT_EXIST:\n      return \"Cannot delete a property before it has been defined\";\n    case ContextIssues.DUPLICATE_NODE_NAME:\n      return \"Node name already defined\";\n    case ContextIssues.UNABLE_TO_RESOLVE_CHILD_NODE:\n      return \"No node with that reference has been defined\";\n    case ContextIssues.LABEL_ALREADY_IN_USE:\n      return \"Label already defined here\";\n    case ContextIssues.NODE_DOES_NOT_EXIST:\n      return \"Cannot delete a node before it has been defined\";\n  }\n};\n\nconst standardTypeIssueIssuesToMessage = (issue: Issue<StandardTypeIssue>) => {\n  return issue.issues\n    .map((_issue) => {\n      switch (_issue) {\n        case StandardTypeIssue.EXPECTED_ENUM:\n          return `Only these value are allowed ${issue.templateStrings[0]}.`;\n        case StandardTypeIssue.EXPECTED_EMPTY:\n          return `INTRO should be empty`;\n        case StandardTypeIssue.EXPECTED_ONE:\n          return `INTRO can only be assigned one value`;\n        case StandardTypeIssue.EXPECTED_U32:\n          return `INTRO should be assigned a U32`;\n        case StandardTypeIssue.EXPECTED_U64:\n          return `INTRO should be assigned a U64`;\n        case StandardTypeIssue.EXPECTED_PROP_ENCODED_ARRAY:\n          return `INTRO should be assigned a 'property encoded array'`;\n        case StandardTypeIssue.EXPECTED_STRING:\n          return `INTRO should be assigned a string`;\n        case StandardTypeIssue.EXPECTED_STRINGLIST:\n          return `INTRO should be assigned a string list`;\n        case StandardTypeIssue.EXPECTED_COMPOSITE_LENGTH:\n          return `INTRO expects ${issue.templateStrings[1]} values`;\n        case StandardTypeIssue.REQUIRED:\n          return `INTRO is required.`;\n        case StandardTypeIssue.OMITTED:\n          return `INTRO should be omitted`;\n        case StandardTypeIssue.EXPECTED_PAIR:\n          return `INTRO must have pair`;\n        case StandardTypeIssue.MISMATCH_NODE_ADDRESS_REF_FIRST_VALUE:\n          return `INTRO first value must match node address`;\n        case StandardTypeIssue.EXPECTED_DEVICE_TYPE_CPU:\n          return `INTRO should be 'cpu'`;\n        case StandardTypeIssue.EXPECTED_DEVICE_TYPE_MEMORY:\n          return `INTRO should be 'memory'`;\n        case StandardTypeIssue.DEPRECATED:\n          return `INTRO is deprecated and should not be used'`;\n        case StandardTypeIssue.IGNORED:\n          return `INTRO ${issue.templateStrings[1]}'`;\n        case StandardTypeIssue.EXPECTED_UNIQUE_PHANDLE:\n          return `INTRO value must be unique in the entire device tree`;\n        case StandardTypeIssue.CELL_MISS_MATCH:\n          return `INTRO should have format ${issue.templateStrings[1]}`;\n        case StandardTypeIssue.PROPERTY_REQUIRES_OTHER_PROPERTY_IN_NODE:\n          return `INTRO requires property \"${issue.templateStrings[1]}\" in node path \"${issue.templateStrings[2]}\"`;\n        case StandardTypeIssue.INTERRUPTS_PARENT_NODE_NOT_FOUND:\n          return `Unable to resolve interrupt parent node`;\n        case StandardTypeIssue.INTERRUPTS_VALUE_CELL_MISS_MATCH:\n          return `INTRO expects ${issue.templateStrings[1]} interrupts cells`;\n        case StandardTypeIssue.MAP_ENTRY_INCOMPLETE:\n          return `INTRO should have format ${issue.templateStrings[1]}`;\n        case StandardTypeIssue.NODE_DISABLED:\n          return \"Node is diabled\";\n        case StandardTypeIssue.UNABLE_TO_RESOLVE_PHANDLE:\n          return `Unable to resolve handel`;\n        case StandardTypeIssue.UNABLE_TO_RESOLVE_PATH:\n          return `Unable to find \"${issue.templateStrings[0]}\" in ${issue.templateStrings[1]}`;\n        case StandardTypeIssue.EXPECTED_VALUE:\n          return issue.templateStrings[0];\n      }\n    })\n    .join(\" or \")\n    .replace(\"INTRO\", `Property \"${issue.templateStrings[0]}\"`)\n    .replaceAll(\"INTRO \", \"\");\n};\n\nconst standardTypeToLinkedMessage = (issue: StandardTypeIssue) => {\n  switch (issue) {\n    case StandardTypeIssue.PROPERTY_REQUIRES_OTHER_PROPERTY_IN_NODE:\n      return `Nodes`;\n    case StandardTypeIssue.INTERRUPTS_VALUE_CELL_MISS_MATCH:\n      return \"Property\";\n    case StandardTypeIssue.IGNORED:\n      return \"Ignored reason\";\n    case StandardTypeIssue.EXPECTED_UNIQUE_PHANDLE:\n      return \"Conflicting Properties\";\n    case StandardTypeIssue.EXPECTED_ONE:\n      return \"Additional value\";\n    case StandardTypeIssue.REQUIRED:\n      return `Nodes`;\n    case StandardTypeIssue.NODE_DISABLED:\n      return \"Disabled by\";\n    default:\n      return `TODO`;\n  }\n};\n\n// // The content of a text document has changed. This event is emitted\n// // when the text document first opened or when its content has changed.\ndocuments.onDidChangeContent(async (change) => {\n  console.log(\"onDidChangeContent\");\n  const uri = change.document.uri.replace(\"file://\", \"\");\n\n  getTokenizedDocumentProvider().renewLexer(uri, change.document.getText());\n\n  await initialSettingsProvided;\n\n  const contexts = await findContexts(contextAware, uri);\n\n  if (!contexts.length) {\n    const newContext = new ContextAware(\n      uri,\n      globalSettings.defaultIncludePaths,\n      getBindingLoader(\n        globalSettings.defaultZephyrBindings,\n        globalSettings.defaultBindingType\n      )\n    );\n    console.log(`New adhoc context with id ${newContext.id} for ${uri}`);\n    contextAware.push(newContext);\n    await newContext.parser.stable;\n    cleanUpAdhocContext(newContext);\n    updateActiveContext(uri);\n  } else {\n    contexts.forEach((context) => {\n      debounce.get(context.context)?.abort.abort();\n      const abort = new AbortController();\n      const promise = new Promise<void>((resolve) => {\n        setTimeout(async () => {\n          if (abort.signal.aborted) {\n            resolve();\n            return;\n          }\n          const t = performance.now();\n          issueCache.delete(context.context);\n          await context.context.revaluate(uri);\n          resolve();\n          console.log(\"revaluate\", performance.now() - t);\n        }, 50);\n      });\n\n      debounce.set(context.context, { abort, promise });\n    });\n  }\n});\n\nconnection.languages.diagnostics.onWorkspace(async () => {\n  await allStable();\n  const context = await activeContext;\n  if (!context) {\n    return {\n      items: [],\n    };\n  }\n\n  const orderedParsers = await context.getOrderedParsers();\n  const activeContextItems = await Promise.all(\n    orderedParsers.map(async (parser) => {\n      const items = await getDiagnostics(context, parser.uri);\n      return {\n        uri: `file://${parser.uri}`,\n        kind: DocumentDiagnosticReportKind.Full,\n        items,\n        version: documents.get(`file://${parser.uri}`)?.version ?? null,\n      } satisfies WorkspaceDocumentDiagnosticReport;\n    })\n  );\n\n  const otherContextItems = await Promise.all(\n    contextAware\n      .filter((c) => c !== context)\n      .flatMap(async (c) => {\n        const orderedParsers = await c.getOrderedParsers();\n        return await Promise.all(\n          orderedParsers.flatMap(async (parser) => {\n            return {\n              uri: `file://${parser.uri}`,\n              kind: DocumentDiagnosticReportKind.Full,\n              items: [],\n              version: documents.get(`file://${parser.uri}`)?.version ?? null,\n            } satisfies WorkspaceDocumentDiagnosticReport;\n          })\n        );\n      })\n  );\n\n  return {\n    items: [...activeContextItems, ...otherContextItems.flat()],\n  };\n});\n\nconst issueCache = new WeakMap<ContextAware, Map<string, Diagnostic[]>>();\n\nasync function getDiagnostics(\n  context: ContextAware,\n  uri: string\n): Promise<Diagnostic[]> {\n  const t = performance.now();\n\n  const contextIssue = issueCache.get(context);\n  if (contextIssue) {\n    const uriIssues = contextIssue.get(uri);\n    if (uriIssues) {\n      return uriIssues;\n    }\n  } else {\n    issueCache.set(context, new Map());\n  }\n\n  try {\n    const diagnostics: Diagnostic[] = [];\n\n    const d = debounce.get(context);\n    if (d?.abort.signal.aborted) return [];\n    await d?.promise;\n\n    const parser = await context.getParser(uri);\n    parser?.issues.forEach((issue) => {\n      const diagnostic: Diagnostic = {\n        severity: issue.severity,\n        range: toRange(issue.astElement),\n        message: issue.issues\n          ? issue.issues.map(syntaxIssueToMessage).join(\" or \")\n          : \"\",\n        source: \"device tree\",\n        data: {\n          firstToken: {\n            pos: issue.astElement.firstToken.pos,\n            tokens: issue.astElement.firstToken.tokens,\n            value: issue.astElement.firstToken.value,\n          },\n          lastToken: {\n            pos: issue.astElement.lastToken.pos,\n            tokens: issue.astElement.lastToken.tokens,\n            value: issue.astElement.lastToken.value,\n          },\n          issues: issue.issues,\n        } as CodeActionDiagnosticData,\n      };\n      diagnostics.push(diagnostic);\n    });\n\n    const contextIssues = (await context.getContextIssues()) ?? [];\n    contextIssues\n      .filter((issue) => issue.astElement.uri === uri)\n      .forEach((issue) => {\n        const diagnostic: Diagnostic = {\n          severity: issue.severity,\n          range: toRange(issue.astElement),\n          message: contextIssuesToMessage(issue),\n          source: \"device tree\",\n          tags: issue.tags,\n          relatedInformation: [\n            ...issue.linkedTo.map((element) => ({\n              message: issue.issues\n                .map(contextIssuesToLinkedMessage)\n                .join(\" or \"),\n              location: {\n                uri: `file://${element.uri!}`,\n                range: toRange(element),\n              },\n            })),\n          ],\n        };\n        diagnostics.push(diagnostic);\n      });\n\n    const runtime = await context.getRuntime();\n    runtime?.typesIssues\n      .filter((issue) => issue.astElement.uri === uri)\n      .forEach((issue) => {\n        const diagnostic: Diagnostic = {\n          severity: issue.severity,\n          range: toRange(issue.astElement),\n          message: standardTypeIssueIssuesToMessage(issue),\n          relatedInformation: [\n            ...issue.linkedTo.map((element) => ({\n              message: issue.issues\n                .map(standardTypeToLinkedMessage)\n                .join(\" or \"),\n              location: {\n                uri: `file://${element.uri!}`,\n                range: toRange(element),\n              },\n            })),\n          ],\n          source: \"device tree\",\n          tags: issue.tags,\n        };\n        diagnostics.push(diagnostic);\n      });\n\n    console.log(\"diagnostics\", uri, performance.now() - t);\n    issueCache.get(context)?.set(uri, diagnostics);\n    return diagnostics;\n  } catch (e) {\n    console.error(e);\n    throw e;\n  }\n}\n\nconnection.onDidChangeWatchedFiles((_change) => {\n  // Monitored files have change in VSCode\n  connection.console.log(\"We received a file change event\");\n});\n\n// This handler provides the initial list of the completion items.\nconnection.onCompletion(\n  async (\n    _textDocumentPosition: TextDocumentPositionParams\n  ): Promise<CompletionItem[]> => {\n    // The pass parameter contains the position of the text document in\n    // which code complete got requested. For the example we ignore this\n    // info and always provide the same completion items.\n\n    await allStable();\n\n    if (contextAware) {\n      return [\n        ...(await getCompletions(\n          _textDocumentPosition,\n          contextAware,\n          globalSettings.preferredContext\n        )),\n        ...(await getTypeCompletions(\n          _textDocumentPosition,\n          contextAware,\n          globalSettings.preferredContext\n        )),\n      ];\n    }\n\n    return [];\n  }\n);\n\n// This handler resolves additional information for the item selected in\n// the completion list.\nconnection.onCompletionResolve((item: CompletionItem): CompletionItem => {\n  // if (item.data === 1) {\n  // \titem.detail = 'TypeScript details';\n  // \titem.documentation = 'TypeScript documentation';\n  // } else if (item.data === 2) {\n  // \titem.detail = 'JavaScript details';\n  // \titem.documentation = 'JavaScript documentation';\n  // }\n  return item;\n});\n\n// Make the text document manager listen on the connection\n// for open, change and close text document events\ndocuments.listen(connection);\n\n// Listen on the connection\nconnection.listen();\n\nconst updateActiveContext = async (uri: string) => {\n  activeFileUri = uri;\n  await allStable();\n  const oldContext = await activeContext;\n  activeContext = findContext(\n    contextAware,\n    uri,\n    globalSettings.preferredContext\n  ).then((r) => r?.context);\n\n  const context = await activeContext;\n  if (oldContext !== context) {\n    console.log(\n      `(id: ${context?.id ?? -1}) activeContext:`,\n      context?.parser.uri\n    );\n    contextAware.forEach((c, i) => {\n      console.log(`Context with id ${c.id} for ${c.parser.uri}`);\n    });\n  }\n};\n\nconnection.onDocumentSymbol(async (h) => {\n  const uri = h.textDocument.uri.replace(\"file://\", \"\");\n  updateActiveContext(uri);\n\n  const context = await activeContext;\n  if (context) {\n    const d = debounce.get(context);\n    if (d?.abort.signal.aborted) return [];\n    await d?.promise;\n  }\n\n  const data = await context?.getParser(uri);\n  if (!data) return [];\n  return data.getDocumentSymbols();\n});\n\nconnection.languages.semanticTokens.on(async (h) => {\n  const uri = h.textDocument.uri.replace(\"file://\", \"\");\n\n  const tokensBuilder = new SemanticTokensBuilder();\n\n  await allStable();\n  const contextMeta = await findContext(\n    contextAware,\n    uri,\n    globalSettings.preferredContext\n  );\n\n  const data = await contextMeta?.context.getParser(uri);\n\n  if (!data) {\n    return { data: [] };\n  }\n  if (contextMeta) {\n    const d = debounce.get(contextMeta.context);\n    if (d?.abort.signal.aborted) return { data: [] };\n    await d?.promise;\n  }\n\n  data?.buildSemanticTokens(tokensBuilder);\n\n  return tokensBuilder.build();\n});\n\nconnection.onDocumentLinks(async (event) => {\n  const uri = event.textDocument.uri.replace(\"file://\", \"\");\n  await allStable();\n  const contextMeta = await findContext(\n    contextAware,\n    uri,\n    globalSettings.preferredContext\n  );\n  if (contextMeta) {\n    const d = debounce.get(contextMeta.context);\n    if (d?.abort.signal.aborted) return [];\n    await d?.promise;\n  }\n\n  return contextMeta?.context.getDocumentLinks(uri);\n});\n\nconnection.onPrepareRename(async (event) => {\n  await allStable();\n  return getPrepareRenameRequest(\n    event,\n    contextAware,\n    globalSettings.lockRenameEdits,\n    globalSettings.preferredContext\n  );\n});\n\nconnection.onRenameRequest(async (event) => {\n  await allStable();\n  return getRenameRequest(event, contextAware, globalSettings.preferredContext);\n});\n\nconnection.onReferences(async (event) => {\n  await allStable();\n  return getReferences(event, contextAware, globalSettings.preferredContext);\n});\n\nconnection.onDefinition(async (event) => {\n  await allStable();\n  return getDefinitions(event, contextAware, globalSettings.preferredContext);\n});\n\nconnection.onDeclaration(async (event) => {\n  await allStable();\n  return getDeclaration(event, contextAware, globalSettings.preferredContext);\n});\n\nconnection.onCodeAction((event) => {\n  return getCodeActions(event);\n});\n\nconnection.onDocumentFormatting(async (event) => {\n  await allStable();\n  return getDocumentFormatting(event, contextAware);\n});\n\nconnection.onHover(async (event) => {\n  await allStable();\n  return (\n    await getHover(event, contextAware, globalSettings.preferredContext)\n  ).at(0);\n});\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            const start = this.offsetAt(range.start);\n            const end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(changes, version) {\n        for (let change of changes) {\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                const range = getWellformedRange(change.range);\n                // update content\n                const startOffset = this.offsetAt(range.start);\n                const endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                const startLine = Math.max(range.start.line, 0);\n                const endLine = Math.max(range.end.line, 0);\n                let lineOffsets = this._lineOffsets;\n                const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                const diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        let lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            let mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        let line = low - 1;\n        return { line, character: offset - lineOffsets[line] };\n    }\n    offsetAt(position) {\n        let lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        let lineOffset = lineOffsets[position.line];\n        let nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n    static isIncremental(event) {\n        let candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    static isFull(event) {\n        let candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n}\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifying its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @param version the changes version for the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        let text = document.getText();\n        let sortedEdits = mergeSort(edits.map(getWellformedEdit), (a, b) => {\n            let diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = 0;\n        const spans = [];\n        for (const e of sortedEdits) {\n            let startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    const p = (data.length / 2) | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        let ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n    const result = isAtLineStart ? [textOffset] : [];\n    for (let i = 0; i < text.length; i++) {\n        let ch = text.charCodeAt(i);\n        if (ch === 13 /* CharCode.CarriageReturn */ || ch === 10 /* CharCode.LineFeed */) {\n            if (ch === 13 /* CharCode.CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction getWellformedRange(range) {\n    const start = range.start;\n    const end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    const range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range };\n    }\n    return textEdit;\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DiagnosticSeverity,\n  DiagnosticTag,\n  Position as vsCodePosition,\n} from \"vscode-languageserver\";\nimport { ASTBase } from \"./ast/base\";\nimport { Node } from \"./context/node\";\nimport { Property } from \"./context/property\";\nimport { Runtime } from \"./context/runtime\";\n\nexport type CodeActionDiagnosticData = {\n  issues: SyntaxIssue[];\n  firstToken: Omit<Token, \"prevToken\" | \"nextToken\">;\n  lastToken: Omit<Token, \"prevToken\" | \"nextToken\">;\n};\n\nexport enum StandardTypeIssue {\n  REQUIRED,\n  EXPECTED_EMPTY,\n  EXPECTED_STRING,\n  EXPECTED_STRINGLIST,\n  EXPECTED_COMPOSITE_LENGTH,\n  EXPECTED_U32,\n  EXPECTED_U64,\n  EXPECTED_PROP_ENCODED_ARRAY,\n  EXPECTED_ONE,\n  EXPECTED_ENUM,\n  EXPECTED_PAIR,\n  MISMATCH_NODE_ADDRESS_REF_FIRST_VALUE,\n  OMITTED,\n  EXPECTED_DEVICE_TYPE_CPU,\n  EXPECTED_DEVICE_TYPE_MEMORY,\n  DEPRECATED,\n  IGNORED,\n  PROPERTY_REQUIRES_OTHER_PROPERTY_IN_NODE,\n  INTERRUPTS_VALUE_CELL_MISS_MATCH,\n  INTERRUPTS_PARENT_NODE_NOT_FOUND,\n  EXPECTED_UNIQUE_PHANDLE,\n  CELL_MISS_MATCH,\n  MAP_ENTRY_INCOMPLETE,\n  NODE_DISABLED,\n  UNABLE_TO_RESOLVE_PHANDLE,\n  UNABLE_TO_RESOLVE_PATH,\n  EXPECTED_VALUE,\n}\n\nexport enum SyntaxIssue {\n  VALUE,\n  END_STATEMENT,\n  CURLY_OPEN,\n  CURLY_CLOSE,\n  OPEN_SQUARE,\n  SQUARE_CLOSE,\n  PROPERTY_NAME,\n  NODE_NAME,\n  NODE_ADDRESS,\n  NODE_DEFINITION,\n  PROPERTY_DEFINITION,\n  NUMERIC_VALUE,\n  NODE_PATH,\n  NODE_REF,\n  ROOT_NODE_NAME,\n  GT_SYM,\n  LT_SYM,\n  BYTESTRING,\n  BYTESTRING_EVEN,\n  DOUBLE_QUOTE,\n  SINGLE_QUOTE,\n  VALID_NODE_PATH,\n  LABEL_NAME,\n  FORWARD_SLASH_START_PATH,\n  BYTESTRING_HEX,\n  MISSING_FORWARD_SLASH_END,\n  UNKNOWN,\n  NO_STATEMENT,\n  LABEL_ASSIGN_MISSING_COLON,\n  DELETE_INCOMPLETE,\n  MISSING_ROUND_CLOSE,\n  EXPECTED_EXPRESSION,\n  INVALID_INCLUDE_SYNTAX,\n  MISSING_COMMA,\n  WHITE_SPACE,\n  EXPECTED_IDENTIFIER_FUNCTION_LIKE,\n  EXPECTED_IDENTIFIER,\n  EXPECTED_VALUE,\n  PROPERTY_MUST_BE_IN_NODE,\n  PROPERTY_DELETE_MUST_BE_IN_NODE,\n  DELETE_NODE_INCOMPLETE,\n  DELETE_PROPERTY_INCOMPLETE,\n}\n\nexport enum ContextIssues {\n  DUPLICATE_PROPERTY_NAME,\n  PROPERTY_DOES_NOT_EXIST,\n  DUPLICATE_NODE_NAME,\n  UNABLE_TO_RESOLVE_CHILD_NODE,\n  LABEL_ALREADY_IN_USE,\n  NODE_DOES_NOT_EXIST,\n  DELETE_PROPERTY,\n  DELETE_NODE,\n  UNABLE_TO_RESOLVE_NODE_PATH,\n}\n\nexport enum LexerToken {\n  ASSIGN_OPERATOR,\n  SEMICOLON,\n  CURLY_OPEN,\n  CURLY_CLOSE,\n  GT_SYM,\n  LT_SYM,\n  LOGICAL_NOT,\n  BIT_AND,\n  BIT_OR,\n  BIT_XOR,\n  BIT_NOT,\n  SQUARE_OPEN,\n  SQUARE_CLOSE,\n  FORWARD_SLASH,\n  BACK_SLASH,\n  ADD_OPERATOR,\n  NEG_OPERATOR,\n  MULTI_OPERATOR,\n  MODULUS_OPERATOR,\n  DIGIT,\n  HEX,\n  STRING,\n  DOUBLE_QUOTE,\n  SINGLE_QUOTE,\n  COMMA,\n  // EOL,\n\n  C_DEFINE,\n  C_INCLUDE,\n  C_LINE,\n  C_UNDEF,\n  C_ERROR,\n  C_PRAGMA,\n\n  C_DEFINED,\n\n  C_IF,\n  C_IFDEF,\n  C_IFNDEF,\n  C_ELIF,\n  C_ELSE,\n  C_ENDIF,\n\n  C_TRUE,\n  C_FALSE,\n  AMPERSAND,\n\n  UNKNOWN,\n  ROUND_OPEN,\n  ROUND_CLOSE,\n  QUESTION_MARK,\n  PERIOD,\n  HASH,\n  LETTERS,\n  UNDERSCORE,\n  AT,\n  COLON,\n}\n\nexport const tokenTypes = [\n  \"namespace\",\n  \"class\",\n  \"enum\",\n  \"interface\",\n  \"struct\",\n  \"typeParameter\",\n  \"type\",\n  \"parameter\",\n  \"variable\",\n  \"property\",\n  \"enumMember\",\n  \"decorator\",\n  \"event\",\n  \"function\",\n  \"method\",\n  \"macro\",\n  \"label\",\n  \"comment\",\n  \"string\",\n  \"keyword\",\n  \"number\",\n  \"regexp\",\n  \"operator\",\n] as const;\n\nexport type SemanticTokenType = (typeof tokenTypes)[number];\n\nexport const tokenModifiers = [\n  \"declaration\",\n  \"definition\",\n  \"readonly\",\n  \"static\",\n  \"deprecated\",\n  \"abstract\",\n  \"async\",\n  \"modification\",\n  \"documentation\",\n  \"defaultLibrary\",\n] as const;\n\nexport type SemanticTokenModifiers = (typeof tokenModifiers)[number];\n\nexport interface Position {\n  line: number;\n  col: number;\n  len: number;\n}\nexport interface Token {\n  prevToken?: Token;\n  nextToken?: Token;\n  tokens: LexerToken[];\n  pos: Position;\n  value: string;\n}\n\nexport interface TokenIndexes {\n  start: Token;\n  end: Token;\n}\n\nexport type BuildSemanticTokensPush = (\n  tokenType: number,\n  tokenModifiers: number,\n  tokenIndexes?: TokenIndexes\n) => void;\n\nexport type IssueTypes = SyntaxIssue | ContextIssues | StandardTypeIssue;\nexport interface Issue<T extends IssueTypes> {\n  issues: T[];\n  astElement: ASTBase;\n  severity?: DiagnosticSeverity;\n  tags?: DiagnosticTag[];\n  linkedTo: ASTBase[];\n  templateStrings: string[];\n}\n\nexport type SearchableResult = {\n  runtime: Runtime;\n  item: Node | Property | null;\n  ast: ASTBase;\n};\n\nexport interface Searchable {\n  getDeepestAstNode(\n    file: string,\n    position: vsCodePosition\n  ): SearchableResult | undefined;\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DiagnosticSeverity,\n  DiagnosticTag,\n  Position,\n  TextDocumentPositionParams,\n} from \"vscode-languageserver\";\nimport type { ASTBase } from \"./ast/base\";\nimport {\n  Issue,\n  IssueTypes,\n  SearchableResult,\n  SemanticTokenModifiers,\n  SemanticTokenType,\n  Token,\n  tokenModifiers,\n  tokenTypes,\n  TokenIndexes,\n  LexerToken,\n} from \"./types\";\nimport { ContextAware } from \"./runtimeEvaluator\";\n\nexport const toRange = (slxBase: ASTBase) => {\n  return {\n    start: {\n      line: slxBase.tokenIndexes?.start?.pos.line ?? 0,\n      character: slxBase.tokenIndexes?.start?.pos.col ?? 0,\n    },\n    end: {\n      line: slxBase.tokenIndexes?.end?.pos.line ?? 0,\n      character:\n        (slxBase.tokenIndexes?.end?.pos.col ?? 0) +\n        (slxBase.tokenIndexes?.end?.pos.len ?? 0),\n    },\n  };\n};\n\nexport const getTokenTypes = (type: SemanticTokenType) => {\n  return tokenTypes.findIndex((t) => t === type);\n};\n\nexport const getTokenModifiers = (type: SemanticTokenModifiers) => {\n  return tokenModifiers.findIndex((t) => t === type);\n};\n\nexport const positionInBetween = (\n  ast: ASTBase,\n  file: string,\n  position: Position\n): boolean => {\n  return !!(\n    ast.uri === file &&\n    ast.tokenIndexes?.start &&\n    ast.tokenIndexes?.end &&\n    (ast.tokenIndexes.start.pos.line < position.line ||\n      (ast.tokenIndexes.start.pos.line === position.line &&\n        ast.tokenIndexes.start.pos.col <= position.character)) &&\n    (ast.tokenIndexes.end.pos.line > position.line ||\n      (ast.tokenIndexes.end.pos.line === position.line &&\n        ast.tokenIndexes.end.pos.col + ast.tokenIndexes.end.pos.len >=\n          position.character))\n  );\n};\n\nexport const positionSameLineAndNotAfter = (\n  ast: ASTBase,\n  file: string,\n  position: Position\n): boolean => {\n  return !!(\n    ast.uri === file &&\n    ast.lastToken.value !== \";\" &&\n    ast.tokenIndexes?.start &&\n    ast.tokenIndexes?.end &&\n    (ast.tokenIndexes.start.pos.line === position.line ||\n      ast.tokenIndexes.end.pos.line === position.line) &&\n    position.character >=\n      ast.tokenIndexes.end.pos.col + ast.tokenIndexes.end.pos.len\n  );\n};\n\nexport const isLastTokenOnLine = (\n  tokens: Token[] | undefined,\n  ast: ASTBase,\n  position: Position\n) => {\n  if (!tokens) {\n    return false;\n  }\n  const lineTokens = tokens.filter((t) => t.pos.line === position.line);\n  const lastLineToken = lineTokens.at(-1);\n  if (lastLineToken && lastLineToken.pos.col >= position.character)\n    return false; // we should have matched positionInBetween\n  return ast.tokenIndexes?.end === lastLineToken;\n};\n\nexport const getAstOnLine = (\n  ast: ASTBase,\n  file: string,\n  position: Position\n) => {\n  const children = ast.children;\n  let deepestAstNode: ASTBase | undefined = ast;\n\n  deepestAstNode = children.find((c) =>\n    positionSameLineAndNotAfter(ast, file, position)\n  );\n\n  return deepestAstNode;\n};\n\nexport const getDeepestAstNodeInBetween = (\n  ast: ASTBase,\n  file: string,\n  position: Position\n) => {\n  let deepestAstNode: ASTBase | undefined = ast;\n  let next: ASTBase | undefined = ast;\n  while (next) {\n    deepestAstNode = next;\n    next = [...deepestAstNode.children]\n      .reverse()\n      .find((c) => positionInBetween(c, file, position));\n  }\n  return deepestAstNode;\n};\n\nexport const genIssue = <T extends IssueTypes>(\n  issue: T | T[],\n  slxBase: ASTBase,\n  severity: DiagnosticSeverity = DiagnosticSeverity.Error,\n  linkedTo: ASTBase[] = [],\n  tags: DiagnosticTag[] | undefined = undefined,\n  templateStrings: string[] = []\n): Issue<T> => ({\n  issues: Array.isArray(issue) ? issue : [issue],\n  astElement: slxBase,\n  severity,\n  linkedTo,\n  tags,\n  templateStrings,\n});\n\nexport const sortAstForScope = <T extends ASTBase>(ast: T[]) => {\n  const arrayCopy = [...ast];\n  return arrayCopy.sort((a, b) => {\n    if (a.sortKey === undefined || b.sortKey === undefined) {\n      throw new Error(\"Sort keys must be set\");\n    }\n\n    if (a.sortKey !== b.sortKey) {\n      return a.sortKey - b.sortKey;\n    }\n\n    if (!a.tokenIndexes?.end || !b.tokenIndexes?.end) {\n      throw new Error(\"Must have token indexes\");\n    }\n\n    if (a.tokenIndexes.end.pos.line !== b.tokenIndexes.end.pos.line) {\n      return a.tokenIndexes.end.pos.line - b.tokenIndexes.end.pos.line;\n    }\n\n    return a.tokenIndexes.end.pos.col - b.tokenIndexes.end.pos.col;\n  });\n};\n\nexport async function nodeFinder<T>(\n  location: TextDocumentPositionParams,\n  contexts: ContextAware[],\n  action: (\n    result: SearchableResult | undefined,\n    inScope: (ast: ASTBase) => boolean\n  ) => T[],\n  preferredContext?: number\n): Promise<T[]> {\n  const uri = location.textDocument.uri.replace(\"file://\", \"\");\n\n  const contextMeta = await findContext(contexts, uri, preferredContext);\n\n  if (!contextMeta) return [];\n\n  console.time(\"search\");\n  const runtime = await contextMeta.context.getRuntime();\n  const locationMeta = runtime.getDeepestAstNode(uri, location.position);\n  const sortKey = locationMeta?.ast?.sortKey;\n  console.timeEnd(\"search\");\n\n  const inScope = (ast: ASTBase) => {\n    const position = location.position;\n    if (ast.uri === uri) {\n      return !!(\n        ast.tokenIndexes?.end &&\n        (ast.tokenIndexes.end.pos.line < position.line ||\n          (ast.tokenIndexes.end.pos.line === position.line &&\n            ast.tokenIndexes.end.pos.col + ast.tokenIndexes.end.pos.len <=\n              position.character))\n      );\n    }\n\n    return sortKey !== undefined && ast.sortKey <= sortKey;\n  };\n\n  return action(locationMeta, inScope);\n}\n\nexport function createTokenIndex(start: Token, end?: Token): TokenIndexes {\n  return { start, end: end ?? start };\n}\n\nexport const validToken = (token: Token | undefined, expected: LexerToken) =>\n  token?.tokens.some((t) => t === expected);\n\nexport const validateValue = (expected: string) => (token: Token | undefined) =>\n  token?.value && expected === token.value\n    ? \"yes\"\n    : validateValueStartsWith(expected)(token);\nexport const validateToken =\n  (expected: LexerToken) => (token: Token | undefined) =>\n    token?.tokens.some((t) => t === expected) ? \"yes\" : \"no\";\nexport const validateValueStartsWith =\n  (expected: string) => (token: Token | undefined) =>\n    token?.value && expected.startsWith(token.value) ? \"partial\" : \"no\";\n\nexport const sameLine = (tokenA?: Token, tokenB?: Token) => {\n  return !!tokenA && !!tokenB && tokenA.pos.line === tokenB.pos.line;\n};\n\nexport const adjacentTokens = (tokenA?: Token, tokenB?: Token) => {\n  return (\n    !!tokenA &&\n    !!tokenB &&\n    sameLine(tokenA, tokenB) &&\n    tokenA.pos.col + tokenA.pos.len === tokenB.pos.col\n  );\n};\n\nexport const resolveContextFiles = async (contextAware: ContextAware[]) => {\n  return Promise.all(\n    contextAware.map(async (c, index) => ({\n      index,\n      context: c,\n      files: (await c.getOrderedParsers()).map((p) => p.uri),\n    }))\n  );\n};\n\nexport const findContext = async (\n  contextAware: ContextAware[],\n  uri: string,\n  preferredContext = 0\n) => {\n  const contextFiles = await resolveContextFiles(contextAware);\n\n  return contextFiles\n    .sort((a) => (a.index === preferredContext ? -1 : 0))\n    .find((c) => c.files.some((p) => p === uri));\n};\n\nexport const findContexts = async (\n  contextAware: ContextAware[],\n  uri: string\n) => {\n  const contextFiles = await resolveContextFiles(contextAware);\n  return contextFiles.filter((c) => c.files.some((p) => p === uri));\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getTokenModifiers, getTokenTypes, toRange } from \"../helpers\";\nimport type {\n  BuildSemanticTokensPush,\n  SemanticTokenModifiers,\n  SemanticTokenType,\n  Token,\n  TokenIndexes,\n} from \"../types\";\nimport { DocumentSymbol, SymbolKind } from \"vscode-languageserver\";\n\nexport class ASTBase {\n  protected semanticTokenType?: SemanticTokenType;\n  protected semanticTokenModifiers?: SemanticTokenModifiers;\n  protected _children: ASTBase[] = [];\n  public parentNode?: ASTBase;\n  protected docSymbolsMeta?: { name: string; kind: SymbolKind };\n  private _uri?: string;\n  private _sortKey?: number;\n\n  private _lastToken?: Token;\n  private _fisrtToken?: Token;\n\n  constructor(_tokenIndexes?: TokenIndexes) {\n    this._fisrtToken = _tokenIndexes?.start;\n    this._lastToken = _tokenIndexes?.end;\n  }\n\n  get sortKey() {\n    return this._sortKey ?? this.parentNode?.sortKey ?? -1;\n  }\n\n  set sortKey(value: number) {\n    this._sortKey ??= value;\n  }\n\n  get firstToken(): Token {\n    return this._fisrtToken ?? this._children[0].tokenIndexes.start;\n  }\n\n  set firstToken(token: Token | undefined) {\n    this._fisrtToken = token;\n  }\n\n  get lastToken(): Token {\n    return (\n      this._lastToken ?? this._children.at(-1)?.lastToken ?? this.firstToken\n    );\n  }\n\n  set lastToken(token: Token | undefined) {\n    this._lastToken = token;\n  }\n\n  get uri(): string | undefined {\n    return this._uri ?? this.parentNode?.uri;\n  }\n\n  set uri(uri: string | undefined) {\n    this._uri = uri;\n  }\n\n  get tokenIndexes(): TokenIndexes {\n    return {\n      start: this.firstToken,\n      end: this.lastToken,\n    };\n  }\n\n  getDocumentSymbols(): DocumentSymbol[] {\n    if (!this.docSymbolsMeta)\n      return this.children.flatMap((child) => child.getDocumentSymbols() ?? []);\n\n    const range = toRange(this);\n    return [\n      {\n        name: this.docSymbolsMeta.name ? this.docSymbolsMeta.name : \"__UNSET__\",\n        kind: this.docSymbolsMeta.kind,\n        range: range,\n        selectionRange: range,\n        children: [\n          ...this.children.flatMap((child) => child.getDocumentSymbols() ?? []),\n        ],\n      },\n    ];\n  }\n\n  buildSemanticTokens(push: BuildSemanticTokensPush) {\n    this._children.forEach((child) => child.buildSemanticTokens(push));\n\n    if (!this.semanticTokenType || !this.semanticTokenModifiers) {\n      return;\n    }\n\n    push(\n      getTokenTypes(this.semanticTokenType),\n      getTokenModifiers(this.semanticTokenModifiers),\n      this.tokenIndexes\n    );\n  }\n\n  get children() {\n    return this._children;\n  }\n\n  get allDescendants(): ASTBase[] {\n    return [\n      ...this._children,\n      ...this._children.flatMap((child) => child.allDescendants),\n    ];\n  }\n\n  protected addChild(child: ASTBase | null | undefined) {\n    if (child) {\n      child.parentNode = this;\n      child.uri = this.uri;\n      this.children.push(child);\n    }\n  }\n\n  protected insertAt(child: ASTBase | null, index: number) {\n    if (child) {\n      child.parentNode = this;\n      child.uri = this.uri;\n      this.children.splice(index, 0, child);\n    }\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BuildSemanticTokensPush, Token, TokenIndexes } from \"../../types\";\nimport { ASTBase } from \"../base\";\nimport { SymbolKind } from \"vscode-languageserver\";\nimport { getTokenModifiers, getTokenTypes, toRange } from \"../../helpers\";\nimport { DtcProperty } from \"./property\";\nimport { DeleteNode } from \"./deleteNode\";\nimport { LabelAssign } from \"./label\";\nimport { DeleteProperty } from \"./deleteProperty\";\nimport { LabelRef } from \"./labelRef\";\nimport { Node } from \"../../context/node\";\nimport { Keyword } from \"../keyword\";\nimport { Include } from \"../cPreprocessors/include\";\n\nexport class DtcBaseNode extends ASTBase {\n  public openScope?: Token;\n  public closeScope?: Token;\n\n  constructor() {\n    super();\n  }\n\n  get path(): string[] | undefined {\n    if (!this.pathName) return [\"__UNDEFINED__\"];\n    if (!this.parentNode || this instanceof DtcRootNode) return [this.pathName];\n    if (!(this.parentNode instanceof DtcBaseNode)) return undefined;\n    const parentPath = this.parentNode.path;\n    if (!parentPath) return [this.pathName];\n\n    return [...parentPath, this.pathName];\n  }\n\n  get pathName(): string | undefined {\n    return undefined;\n  }\n\n  get nodes() {\n    return this.children.filter((child) => child instanceof DtcBaseNode);\n  }\n\n  get deleteNodes() {\n    return this.children.filter((child) => child instanceof DeleteNode);\n  }\n\n  public addNodeChild(\n    child: DtcBaseNode | DeleteNode | DtcProperty | DeleteProperty | Include\n  ) {\n    this.addChild(child);\n  }\n\n  public insertIncludeAt(child: Include, index: number) {\n    this.insertAt(child, index);\n  }\n}\n\nexport class DtcRootNode extends DtcBaseNode {\n  constructor() {\n    super();\n    this.docSymbolsMeta = {\n      name: \"/\",\n      kind: SymbolKind.Class,\n    };\n  }\n  get properties() {\n    return this.children.filter((child) => child instanceof DtcProperty);\n  }\n\n  get deleteProperties() {\n    return this.children.filter((child) => child instanceof DeleteProperty);\n  }\n\n  get nodes() {\n    return this.children.filter(\n      (child) => child instanceof DtcChildNode\n    ) as DtcChildNode[];\n  }\n\n  get pathName() {\n    return \"/\";\n  }\n}\n\nexport class DtcRefNode extends DtcBaseNode {\n  private _labelReference: LabelRef | null = null;\n  public resolveNodePath?: string[];\n\n  constructor(public readonly labels: LabelAssign[] = []) {\n    super();\n    this.docSymbolsMeta = {\n      name: \"DTC Name\",\n      kind: SymbolKind.Namespace,\n    };\n    labels.forEach((label) => {\n      super.addChild(label);\n    });\n  }\n\n  set labelReference(labelReference: LabelRef | null) {\n    if (this._labelReference)\n      throw new Error(\"Only on label reference is allowed\");\n    this._labelReference = labelReference;\n    this.docSymbolsMeta = {\n      name: this.labelReference?.value ?? \"DTC Name\",\n      kind: SymbolKind.Namespace,\n    };\n    this.addChild(labelReference);\n  }\n\n  get path(): string[] | undefined {\n    if (this.resolveNodePath) {\n      return this.resolveNodePath;\n    }\n\n    return super.path;\n  }\n\n  get labelReference() {\n    return this._labelReference;\n  }\n\n  get nodes() {\n    return this.children.filter((child) => child instanceof DtcChildNode);\n  }\n\n  get pathName() {\n    return this.labelReference?.label\n      ? `&${this.labelReference?.label?.value}`\n      : undefined;\n  }\n\n  get properties() {\n    return this.children.filter((child) => child instanceof DtcProperty);\n  }\n\n  get deleteProperties() {\n    return this.children.filter((child) => child instanceof DeleteProperty);\n  }\n}\n\nexport class DtcChildNode extends DtcBaseNode {\n  private _name: NodeName | null = null;\n\n  constructor(\n    public readonly labels: LabelAssign[] = [],\n    public readonly omitIfNoRef?: Keyword\n  ) {\n    super();\n    this.docSymbolsMeta = {\n      name: \"DTC Name\",\n      kind: SymbolKind.Constructor,\n    };\n\n    if (omitIfNoRef) {\n      this.addChild(omitIfNoRef);\n    }\n\n    labels.forEach((label) => {\n      this.addChild(label);\n    });\n  }\n\n  set name(name: NodeName | null) {\n    if (this._name) throw new Error(\"Only on label reference is allowed\");\n    this._name = name;\n    this.docSymbolsMeta = {\n      name: this._name?.toString() ?? \"DTC Name\",\n      kind: SymbolKind.Constructor,\n    };\n    this.addChild(name);\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get nodes() {\n    return this.children.filter(\n      (child) => child instanceof DtcChildNode\n    ) as DtcChildNode[];\n  }\n\n  get pathName() {\n    return this._name?.toString();\n  }\n  get properties() {\n    return this.children.filter((child) => child instanceof DtcProperty);\n  }\n\n  get deleteProperties() {\n    return this.children.filter((child) => child instanceof DeleteProperty);\n  }\n}\n\nexport class NodeName extends ASTBase {\n  public linksTo?: Node;\n\n  constructor(\n    public readonly name: string,\n    tokenIndex: TokenIndexes,\n    public readonly address?: number\n  ) {\n    super(tokenIndex);\n    this.semanticTokenType = \"variable\";\n    this.semanticTokenModifiers = \"declaration\";\n  }\n\n  get value() {\n    return this.name;\n  }\n\n  toString() {\n    return this.address !== undefined\n      ? `${this.name}@${this.address.toString(16)}`\n      : this.name;\n  }\n\n  buildSemanticTokens(push: BuildSemanticTokensPush): void {\n    if (!this.tokenIndexes?.start || !this.tokenIndexes.start.value) return;\n\n    const nameNewStart = {\n      ...this.tokenIndexes.start,\n      pos: {\n        ...this.tokenIndexes.start.pos,\n        len: this.name.length,\n      },\n    };\n    push(getTokenTypes(\"type\"), getTokenModifiers(\"declaration\"), {\n      start: nameNewStart,\n      end: nameNewStart,\n    });\n    if (this.address !== undefined) {\n      const addressNewStart = {\n        ...this.tokenIndexes.start,\n        pos: {\n          line: this.tokenIndexes.start.pos.line,\n          col: this.tokenIndexes.start.pos.col + this.name.length + 1,\n          len: this.tokenIndexes.start.pos.len - this.name.length - 1,\n        },\n      };\n\n      const atSymbolNewStart = {\n        ...this.tokenIndexes.start,\n        pos: {\n          line: this.tokenIndexes.start.pos.line,\n          col: this.name.length + 2,\n          len: 1,\n        },\n      };\n\n      push(getTokenTypes(\"decorator\"), getTokenModifiers(\"declaration\"), {\n        start: atSymbolNewStart,\n        end: atSymbolNewStart,\n      });\n\n      push(getTokenTypes(\"number\"), getTokenModifiers(\"declaration\"), {\n        start: addressNewStart,\n        end: addressNewStart,\n      });\n    }\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TokenIndexes } from \"../../types\";\nimport { ASTBase } from \"../base\";\nimport { SymbolKind } from \"vscode-languageserver\";\nimport { LabelAssign } from \"./label\";\nimport { PropertyValues } from \"./values/values\";\nimport { StringValue } from \"./values/string\";\nimport { ArrayValues } from \"./values/arrayValue\";\nimport { NumberValue } from \"./values/number\";\nimport { ByteStringValue } from \"./values/byteString\";\n\nexport class PropertyName extends ASTBase {\n  constructor(public readonly name: string, tokenIndex: TokenIndexes) {\n    super(tokenIndex);\n    this.semanticTokenType = \"property\";\n    this.semanticTokenModifiers = \"declaration\";\n  }\n\n  toString() {\n    return this.name;\n  }\n}\n\nexport class DtcProperty extends ASTBase {\n  private _values: PropertyValues | null | undefined = undefined;\n\n  constructor(\n    public readonly propertyName: PropertyName | null,\n    public readonly labels: LabelAssign[] = []\n  ) {\n    super();\n    this.docSymbolsMeta = {\n      name: this.propertyName?.name ?? \"Unknown\",\n      kind: SymbolKind.Property,\n    };\n    this.labels.forEach((label) => this.addChild(label));\n    this.addChild(propertyName);\n  }\n\n  set values(values: PropertyValues | null | undefined) {\n    if (this._values) throw new Error(\"Only one property name is allowed\");\n    this._values = values;\n    this.addChild(values);\n  }\n\n  get values() {\n    return this._values;\n  }\n\n  get quickValues() {\n    return this.values?.values.map((v) => {\n      if (!v) {\n        return null;\n      }\n      if (v.value instanceof StringValue) {\n        return v.value.value;\n      }\n\n      if (v.value instanceof ArrayValues) {\n        return v.value.values.map((v) =>\n          v.value instanceof NumberValue ? v.value.value : NaN\n        );\n      }\n\n      if (v.value instanceof ByteStringValue) {\n        return v.value.values.map((v) => v.value?.value ?? NaN);\n      }\n\n      return NaN;\n    });\n  }\n\n  toString() {\n    return `${this.propertyName?.toString() ?? \"__UNSET__\"}${\n      this._values?.values.length\n        ? ` = ${this._values.values\n            .map((v) => v?.toString() ?? \"NULL\")\n            .join(\", \")}`\n        : \"\"\n    };`;\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ASTBase } from \"../../base\";\nimport { SymbolKind } from \"vscode-languageserver\";\nimport { TokenIndexes } from \"../../../types\";\n\nexport class StringValue extends ASTBase {\n  constructor(public readonly value: string, tokenIndexes: TokenIndexes) {\n    super(tokenIndexes);\n    this.semanticTokenType = \"string\";\n    this.semanticTokenModifiers = \"declaration\";\n    this.docSymbolsMeta = {\n      name: this.value,\n      kind: SymbolKind.String,\n    };\n  }\n\n  toString() {\n    return `\"${this.value.toString()}\"`;\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ASTBase } from \"../../base\";\nimport { SymbolKind } from \"vscode-languageserver\";\nimport { LabelRef } from \"../labelRef\";\nimport { NodePathRef } from \"./nodePath\";\nimport { NumberValue } from \"./number\";\nimport { LabeledValue } from \"./labeledValue\";\nimport { Expression } from \"../../cPreprocessors/expression\";\n\nexport class ArrayValues extends ASTBase {\n  constructor(\n    public readonly values: LabeledValue<\n      NumberValue | LabelRef | NodePathRef | Expression\n    >[]\n  ) {\n    super();\n    this.docSymbolsMeta = {\n      name: \"Cell Array\",\n      kind: SymbolKind.Array,\n    };\n    this.values.forEach((value) => this.addChild(value));\n  }\n\n  toString() {\n    return `<${this.values.map((v) => v.toString()).join(\" \")}>`;\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SymbolKind } from \"vscode-languageserver\";\nimport { Expression } from \"../../cPreprocessors/expression\";\nimport { TokenIndexes } from \"../../../types\";\n\nexport class NumberValue extends Expression {\n  constructor(public readonly value: number, tokenIndexes: TokenIndexes) {\n    super(tokenIndexes);\n    this.docSymbolsMeta = {\n      name: this.value.toString(),\n      kind: SymbolKind.Number,\n    };\n    this.semanticTokenType = \"number\";\n    this.semanticTokenModifiers = \"declaration\";\n  }\n\n  toString() {\n    return this.value.toString();\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ASTBase } from \"../base\";\nimport { Operator } from \"./operator\";\n\nexport abstract class Expression extends ASTBase {}\n\nexport class ComplexExpression extends Expression {\n  constructor(\n    public readonly expression: Expression,\n    public readonly join?: { operator: Operator; expression: Expression }\n  ) {\n    super();\n    this.addChild(expression);\n    if (join) {\n      this.addChild(join.operator);\n      this.addChild(join.expression);\n    }\n  }\n\n  addExpression(operator: Operator, expression: Expression) {\n    this.addChild(operator);\n    this.addChild(expression);\n  }\n\n  toString() {\n    return `(${this.children.map((c) => c.toString()).join(\" \")})`;\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ASTBase } from \"../../base\";\nimport { SymbolKind } from \"vscode-languageserver\";\nimport { LabeledValue } from \"./labeledValue\";\nimport { NumberValue } from \"./number\";\n\nexport class ByteStringValue extends ASTBase {\n  constructor(public readonly values: LabeledValue<NumberValue>[]) {\n    super();\n    this.docSymbolsMeta = {\n      name: \"Byte String Value\",\n      kind: SymbolKind.Array,\n    };\n    this.values.forEach((value) => this.addChild(value));\n  }\n\n  toString() {\n    return `[${this.values.map((v) => v.toString()).join(\" \")}]`;\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ASTBase } from \"../base\";\nimport { Keyword } from \"../keyword\";\nimport { SymbolKind } from \"vscode-languageserver\";\n\nexport class DeleteBase extends ASTBase {\n  constructor(name: string, public readonly keyword: Keyword) {\n    super();\n    this.addChild(keyword);\n    this.docSymbolsMeta = {\n      name,\n      kind: SymbolKind.Function,\n    };\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Keyword } from \"../keyword\";\nimport { NodeName } from \"./node\";\nimport { LabelRef } from \"./labelRef\";\nimport { DeleteBase } from \"./delete\";\nimport { NodePathRef } from \"./values/nodePath\";\n\nexport class DeleteNode extends DeleteBase {\n  private _nodeNameOrRef: NodeName | LabelRef | NodePathRef | null = null;\n\n  constructor(keyword: Keyword) {\n    super(\"Delete Node\", keyword);\n  }\n\n  set nodeNameOrRef(nodeNameOrRef: NodeName | LabelRef | NodePathRef | null) {\n    if (this._nodeNameOrRef)\n      throw new Error(\"Only one property name is allowed\");\n    this._nodeNameOrRef = nodeNameOrRef;\n    this.addChild(nodeNameOrRef);\n  }\n\n  get nodeNameOrRef() {\n    return this._nodeNameOrRef;\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Keyword } from \"../keyword\";\nimport { PropertyName } from \"./property\";\nimport { DeleteBase } from \"./delete\";\n\nexport class DeleteProperty extends DeleteBase {\n  private _propertyName: PropertyName | null = null;\n\n  constructor(keyword: Keyword) {\n    super(\"Delete Property\", keyword);\n  }\n\n  set propertyName(propertyName: PropertyName | null) {\n    if (this._propertyName)\n      throw new Error(\"Only only property name is allowed\");\n    this._propertyName = propertyName;\n    this.addChild(propertyName);\n  }\n\n  get propertyName() {\n    return this._propertyName;\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ASTBase } from \"../base\";\nimport { SymbolKind } from \"vscode-languageserver\";\nimport { Label } from \"./label\";\nimport { type Node } from \"../../context/node\";\n\nexport class LabelRef extends ASTBase {\n  public linksTo?: Node;\n\n  constructor(public readonly label: Label | null) {\n    super();\n    this.docSymbolsMeta = {\n      name: `&${this.label?.value ?? \"NULL\"}`,\n      kind: SymbolKind.Key,\n    };\n    this.addChild(label);\n  }\n\n  get value() {\n    return this.label?.value;\n  }\n\n  toString() {\n    return `&${this.label?.value ?? \"NULL\"}`;\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DtcChildNode,\n  DtcRefNode,\n  DtcRootNode,\n  NodeName,\n} from \"../ast/dtc/node\";\nimport { ContextIssues, Issue, SearchableResult } from \"../types\";\nimport { Property } from \"./property\";\nimport { DeleteProperty } from \"../ast/dtc/deleteProperty\";\nimport { DeleteNode } from \"../ast/dtc/deleteNode\";\nimport {\n  getDeepestAstNodeInBetween,\n  positionInBetween,\n  positionSameLineAndNotAfter,\n} from \"../helpers\";\nimport {\n  DiagnosticSeverity,\n  DiagnosticTag,\n  MarkupContent,\n  MarkupKind,\n  Position,\n} from \"vscode-languageserver\";\nimport { LabelAssign } from \"../ast/dtc/label\";\nimport { ASTBase } from \"../ast/base\";\nimport { DeleteBase } from \"../ast/dtc/delete\";\nimport { LabelRef } from \"../ast/dtc/labelRef\";\nimport { NumberValue } from \"../ast/dtc/values/number\";\nimport { ArrayValues } from \"../ast/dtc/values/arrayValue\";\nimport { getNodeNameOrNodeLabelRef } from \"../ast/helpers\";\nimport { getStandardType } from \"../dtsTypes/standardTypes\";\nimport { BindingLoader } from \"../dtsTypes/bindings/bindingLoader\";\nimport { NodeType } from \"../dtsTypes/types\";\n\nexport class Node {\n  public referencedBy: DtcRefNode[] = [];\n  public definitions: (DtcChildNode | DtcRootNode)[] = [];\n  private _properties: Property[] = [];\n  private _deletedProperties: { property: Property; by: DeleteProperty }[] = [];\n  private _deletedNodes: { node: Node; by: DeleteNode }[] = [];\n  public deletes: DeleteBase[] = [];\n  private _nodes: Node[] = [];\n  linkedNodeNamePaths: NodeName[] = [];\n  linkedRefLabels: LabelRef[] = [];\n\n  private _nodeTypes: NodeType[] = [getStandardType()];\n\n  constructor(\n    public readonly bindingLoader: BindingLoader,\n    public readonly name: string,\n    public readonly address?: number,\n    public readonly parent: Node | null = null\n  ) {\n    parent?.addNode(this);\n  }\n\n  get nodeTypes(): NodeType[] {\n    const childType = this.parent?.nodeTypes.at(0)?.childNodeType;\n\n    if (childType) {\n      return [childType];\n    }\n\n    return this._nodeTypes ?? [getStandardType()];\n  }\n\n  get nodeType(): NodeType | undefined {\n    return this.nodeTypes.find(\n      (t) => !t.onBus || this.parent?.nodeType?.bus?.some((b) => b === t.onBus)\n    );\n  }\n\n  public getReferenceBy(node: DtcRefNode): Node | undefined {\n    if (this.referencedBy.some((n) => n === node)) {\n      return this;\n    }\n\n    return [...this._nodes, ...this._deletedNodes.map((n) => n.node)]\n      .map((n) => n.getReferenceBy(node))\n      .find((n) => n);\n  }\n\n  get nodeNameOrLabelRef(): (NodeName | LabelRef)[] {\n    return getNodeNameOrNodeLabelRef([\n      ...this.definitions,\n      ...this.referencedBy,\n    ]);\n  }\n\n  getDeepestAstNode(\n    file: string,\n    position: Position\n  ): Omit<SearchableResult, \"runtime\"> | undefined {\n    const inNode = [...this.definitions, ...this.referencedBy].find((i) =>\n      positionInBetween(i, file, position)\n    );\n\n    if (inNode) {\n      const inDeletes = this.deletes\n        .map((p) => ({\n          item: this,\n          ast: getDeepestAstNodeInBetween(p, file, position),\n        }))\n        .find((i) => positionInBetween(i.ast, file, position));\n\n      if (inDeletes) {\n        return inDeletes;\n      }\n\n      const inProperty = [\n        ...this._properties.flatMap((p) => [p, ...p.allReplaced]),\n        ...this._deletedProperties.flatMap((d) => [\n          d.property,\n          ...d.property.allReplaced,\n        ]),\n      ]\n        .map((p) => ({\n          item: p,\n          ast: p.ast,\n        }))\n        .find((i) =>\n          i.ast.lastToken.value === \";\"\n            ? positionInBetween(i.ast, file, position)\n            : positionSameLineAndNotAfter(i.ast, file, position)\n        );\n\n      if (inProperty) {\n        return inProperty.item.getDeepestAstNode(file, position);\n      }\n\n      const inChildNode = [\n        ...this._nodes,\n        ...this._deletedNodes.map((d) => d.node),\n      ]\n        .map((n) => n.getDeepestAstNode(file, position))\n        .find((i) => i);\n\n      if (inChildNode) {\n        return inChildNode;\n      }\n\n      const deepestAstNode = getDeepestAstNodeInBetween(inNode, file, position);\n\n      return {\n        item: this,\n        ast: deepestAstNode,\n      };\n    }\n\n    return;\n  }\n\n  get labels(): LabelAssign[] {\n    return [\n      ...this.referencedBy.flatMap((r) => r.labels),\n      ...(\n        this.definitions.filter(\n          (def) => def instanceof DtcChildNode\n        ) as DtcChildNode[]\n      ).flatMap((def) => def.labels),\n    ];\n  }\n\n  get labelsMapped() {\n    return this.labels.map((l) => ({\n      label: l,\n      owner: this,\n    }));\n  }\n\n  get allBindingsProperties(): Property[] {\n    return [\n      ...this.properties.filter((p) => p.name === \"compatible\"),\n      ...this._nodes.flatMap((n) => n.allBindingsProperties),\n    ];\n  }\n\n  get allDescendantsLabels(): LabelAssign[] {\n    return [\n      ...this.labels,\n      ...this._nodes.flatMap((n) => n.allDescendantsLabels),\n    ];\n  }\n\n  get allDescendantsLabelsMapped(): {\n    label: LabelAssign;\n    owner: Property | Node | null;\n  }[] {\n    return [\n      ...this.labelsMapped,\n      ...this.properties.flatMap((p) => p.labelsMapped),\n      ...this._nodes.flatMap((n) => n.allDescendantsLabelsMapped),\n    ];\n  }\n\n  get issues(): Issue<ContextIssues>[] {\n    return [\n      ...this.properties.flatMap((p) => p.issues),\n      ...this._nodes.flatMap((n) => n.issues),\n      ...this._deletedNodes.flatMap((n) => n.node.issues),\n      ...this.deletedPropertiesIssues,\n      ...this.deletedNodesIssues,\n    ];\n  }\n\n  get deletedPropertiesIssues(): Issue<ContextIssues>[] {\n    return [\n      ...this._deletedProperties.flatMap((meta) => [\n        {\n          issues: [ContextIssues.DELETE_PROPERTY],\n          severity: DiagnosticSeverity.Hint,\n          astElement: meta.property.ast,\n          linkedTo: [meta.by],\n          tags: [DiagnosticTag.Deprecated],\n          templateStrings: [meta.property.name],\n        },\n        ...meta.property.allReplaced.map((p) => ({\n          issues: [ContextIssues.DELETE_PROPERTY],\n          severity: DiagnosticSeverity.Hint,\n          astElement: p.ast,\n          linkedTo: [meta.by],\n          tags: [DiagnosticTag.Deprecated],\n          templateStrings: [meta.property.name],\n        })),\n        ...meta.property.issues,\n      ]),\n    ];\n  }\n\n  get deletedNodesIssues(): Issue<ContextIssues>[] {\n    return this._deletedNodes.flatMap((meta) => [\n      ...[\n        ...(meta.node.definitions.filter(\n          (node) => node instanceof DtcChildNode\n        ) as DtcChildNode[]),\n        ...meta.node.referencedBy,\n      ].flatMap((node) => ({\n        issues: [ContextIssues.DELETE_NODE],\n        severity: DiagnosticSeverity.Hint,\n        astElement: node,\n        linkedTo: [meta.by],\n        tags: [DiagnosticTag.Deprecated],\n        templateStrings: [\n          node instanceof DtcChildNode\n            ? node.name!.toString()\n            : node.labelReference!.label!.value,\n        ],\n      })),\n    ]);\n  }\n\n  get path(): string[] {\n    return this.parent ? [...this.parent.path, this.fullName] : [this.fullName];\n  }\n\n  get properties() {\n    return this._properties;\n  }\n\n  get deletedProperties() {\n    return this._deletedProperties;\n  }\n\n  get nodes() {\n    return this._nodes;\n  }\n\n  get deletedNodes() {\n    return this._deletedNodes;\n  }\n\n  get propertyNames() {\n    return this._properties.map((property) => property.name);\n  }\n\n  hasNode(name: string, address?: number) {\n    return this._nodes.some(\n      (node) => node.name === name && node.address === address\n    );\n  }\n\n  hasProperty(name: string) {\n    return this._properties.some((property) => property.name === name);\n  }\n\n  getProperty(name: string) {\n    return this._properties.find((property) => property.name === name);\n  }\n\n  deleteNode(name: string, by: DeleteNode, address?: number) {\n    const index = this._nodes.findIndex(\n      (node) => node.name === name && address === node.address\n    );\n    if (index === -1) return;\n\n    this._deletedNodes.push({\n      node: this._nodes[index],\n      by,\n    });\n\n    this._nodes.splice(index, 1);\n  }\n\n  get root(): Node {\n    return this.parent ? this.parent.root : this;\n  }\n\n  getAllPhandle(id: number): Node[] {\n    const phandleValue =\n      this.getProperty(\"phandle\")?.ast.values?.values.at(0)?.value;\n\n    if (phandleValue instanceof ArrayValues) {\n      const value = phandleValue.values[0].value;\n      if (value instanceof NumberValue && value.value === id) {\n        return [this, ...this._nodes.flatMap((n) => n.getAllPhandle(id))];\n      }\n    }\n\n    return this._nodes.flatMap((n) => n.getAllPhandle(id));\n  }\n\n  getPhandle(id: number): Node | undefined {\n    const phandleValue =\n      this.getProperty(\"phandle\")?.ast.values?.values.at(0)?.value;\n\n    if (phandleValue instanceof ArrayValues) {\n      const value = phandleValue.values[0].value;\n      if (value instanceof NumberValue && value.value === id) {\n        return this;\n      }\n    }\n\n    return this._nodes.flatMap((n) => n.getPhandle(id)).find((n) => !!n);\n  }\n\n  getNode(name: string, address?: number, strict = true) {\n    const isAddressNeeded =\n      strict || this._nodes.filter((node) => node.name === name).length > 1;\n    const index = this._nodes.findIndex(\n      (node) =>\n        node.name === name && (!isAddressNeeded || node.address === address)\n    );\n    if (index === -1) return;\n\n    return this._nodes[index];\n  }\n\n  deleteProperty(name: string, by: DeleteProperty) {\n    const index = this._properties.findIndex(\n      (property) => property.name === name\n    );\n    if (index === -1) return;\n\n    this._deletedProperties.push({\n      property: this._properties[index],\n      by,\n    });\n\n    this._properties.splice(index, 1);\n  }\n\n  addNode(node: Node) {\n    this._nodes.push(node);\n  }\n\n  addProperty(property: Property) {\n    const index = this._properties.findIndex((p) => p.name === property.name);\n    if (index === -1) {\n      this._properties.push(property);\n    } else {\n      const replaced = this._properties.splice(index, 1)[0];\n      this._properties.push(property);\n      property.replaces = replaced;\n      replaced.replacedBy = property;\n    }\n\n    if (property.name === \"compatible\") {\n      this._nodeTypes = this.bindingLoader.getNodeTypes(this);\n    }\n  }\n\n  getChild(path: string[], strict = true): Node | undefined {\n    const copy = [...path];\n    copy.splice(0, 1);\n    const split = copy[0].split(\"@\");\n    const name = split[0];\n    const address =\n      split[1] !== undefined ? Number.parseInt(split[1], 16) : undefined;\n    const myChild = this.getNode(name, address, strict);\n    if (copy.length === 1 || !myChild) return myChild;\n\n    return myChild.getChild(copy);\n  }\n\n  getChildFromScope(\n    path: string[],\n    inScope: (ast: ASTBase) => boolean\n  ): Node | undefined {\n    if (path.length === 1 && path[0] === this.fullName) return this;\n    if (path[0] !== this.fullName) return undefined;\n    const copy = [...path];\n    copy.splice(0, 1);\n    const myChild = [\n      ...this._nodes,\n      ...this._deletedNodes.filter((n) => !inScope(n.by)).map((n) => n.node),\n    ].find((node) => node.fullName === copy[0]);\n    return myChild?.getChildFromScope(copy, inScope);\n  }\n\n  get fullName() {\n    if (this.address !== undefined) {\n      return `${this.name}@${this.address.toString(16)}`;\n    }\n\n    return this.name;\n  }\n\n  toString() {\n    return `${this.labels.map((l) => l.toString()).join(\" \")} ${\n      this.fullName\n    } {${this.properties.length ? \"\\n\\t\" : \"\"}${this.properties\n      .map((p) => p.toString())\n      .join(\"\\n\\t\")}${\n      this.nodes.length\n        ? `\\n\\t${this.nodes\n            .map((n) => `${n.fullName}{ /* ... */ };`)\n            .join(\"\\n\\t\")}`\n        : \"\"\n    } \n};`;\n  }\n\n  toMarkupContent(): MarkupContent {\n    return {\n      kind: MarkupKind.Markdown,\n      value: [\n        \"### Current State\",\n        \"```devicetree\",\n        this.toString(),\n        \"```\",\n        ...(this.nodeType?.description\n          ? [\"### Description\", this.nodeType?.description]\n          : []),\n      ].join(\"\\n\"),\n    };\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ASTBase } from \"./base\";\nimport { DeleteBase } from \"./dtc/delete\";\nimport { LabelRef } from \"./dtc/labelRef\";\nimport { DtcBaseNode, DtcChildNode, DtcRefNode, NodeName } from \"./dtc/node\";\nimport { DtcProperty } from \"./dtc/property\";\n\nexport const isDeleteChild = (ast: ASTBase): boolean => {\n  if (ast instanceof DeleteBase) {\n    return true;\n  }\n\n  if (ast instanceof DtcBaseNode) {\n    return false;\n  }\n\n  return ast.parentNode ? isDeleteChild(ast.parentNode) : false;\n};\n\nexport const isPropertyChild = (ast: ASTBase): boolean => {\n  if (ast instanceof DtcProperty) {\n    return true;\n  }\n\n  if (ast instanceof DtcBaseNode) {\n    return false;\n  }\n\n  return ast.parentNode ? isPropertyChild(ast.parentNode) : false;\n};\n\nexport const getNodeNameOrNodeLabelRef = (nodes: DtcBaseNode[]) => {\n  const filteredNodes = nodes.filter(\n    (n) => n instanceof DtcChildNode || n instanceof DtcRefNode\n  ) as (DtcChildNode | DtcRefNode)[];\n\n  return [\n    ...filteredNodes.map((n) =>\n      n instanceof DtcChildNode ? n.name : n.labelReference\n    ),\n  ].filter((a) => !!a) as (NodeName | LabelRef)[];\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { genIssue } from \"../helpers\";\nimport { type Node } from \"../context/node\";\nimport { Property } from \"../context/property\";\nimport { Issue, StandardTypeIssue } from \"../types\";\nimport { Runtime } from \"../context/runtime\";\nimport {\n  CompletionItem,\n  CompletionItemKind,\n  DiagnosticSeverity,\n  DiagnosticTag,\n  MarkupContent,\n  MarkupKind,\n} from \"vscode-languageserver\";\nimport { PropertyValue } from \"../ast/dtc/values/value\";\nimport { StringValue } from \"../ast/dtc/values/string\";\nimport { ASTBase } from \"../ast/base\";\nimport { ArrayValues } from \"../ast/dtc/values/arrayValue\";\nimport { LabelRef } from \"../ast/dtc/labelRef\";\nimport { NodePathRef } from \"../ast/dtc/values/nodePath\";\nimport { getNodeNameOrNodeLabelRef } from \"../ast/helpers\";\n\nexport enum PropertyType {\n  EMPTY,\n  U32,\n  U64,\n  STRING,\n  PROP_ENCODED_ARRAY,\n  STRINGLIST,\n  BYTESTRING,\n  UNKNOWN,\n  ANY,\n}\n\nexport interface Validate {\n  validate: (runtime: Runtime, node: Node) => Issue<StandardTypeIssue>[];\n}\n\nexport type RequirementStatus = \"required\" | \"omitted\" | \"optional\";\n\nexport type TypeConfig = { types: PropertyType[] };\nexport class PropertyNodeType<T = string | number> implements Validate {\n  public required: (node: Node) => RequirementStatus;\n  public values: (property: Property) => T[];\n  public hideAutoComplete = false;\n  public list = false;\n  public desctiption?: string[];\n  public examples?: string[];\n  public constValue?: number | string | number[] | string[];\n  public onHover = (): MarkupContent => {\n    return {\n      kind: MarkupKind.Markdown,\n      value: [\n        ...(this.desctiption\n          ? [\"### Desctiption\", this.desctiption.join(\"\\n\\n\")]\n          : []),\n        ...(this.examples ? [\"### Example\", this.examples.join(\"\\n\\n\")] : []),\n      ].join(\"\\n\"),\n    };\n  };\n\n  constructor(\n    public readonly name: string | ((n: string) => boolean),\n    public readonly type: TypeConfig[],\n    required:\n      | RequirementStatus\n      | ((node: Node) => RequirementStatus) = \"optional\",\n    public readonly def: T | undefined = undefined,\n    values: T[] | ((property: Property) => T[]) = [],\n    public additionalTypeCheck?: (\n      property: Property\n    ) => Issue<StandardTypeIssue>[]\n  ) {\n    if (typeof required !== \"function\") {\n      this.required = () => required;\n    } else {\n      this.required = required;\n    }\n\n    if (typeof values !== \"function\") {\n      this.values = () =>\n        def && values.indexOf(def) === -1 ? [def, ...values] : values;\n    } else {\n      this.values = values;\n    }\n  }\n\n  getNameMatch(name: string): boolean {\n    return typeof this.name === \"string\" ? this.name === name : this.name(name);\n  }\n\n  private validateProperty(\n    runtime: Runtime,\n    node: Node,\n    propertyName: string,\n    property?: Property\n  ): Issue<StandardTypeIssue>[] {\n    const required = this.required(node);\n    if (!property) {\n      if (required === \"required\") {\n        const childOrRefNode = runtime.getOrderedNodeAst(node);\n        const orderedTree = getNodeNameOrNodeLabelRef(childOrRefNode);\n\n        return [\n          genIssue<StandardTypeIssue>(\n            StandardTypeIssue.REQUIRED,\n            orderedTree[0],\n            DiagnosticSeverity.Error,\n            orderedTree.slice(1),\n            [],\n            [propertyName]\n          ),\n        ];\n      }\n\n      return [];\n    } else if (required === \"omitted\") {\n      return [\n        genIssue<StandardTypeIssue>(\n          StandardTypeIssue.OMITTED,\n          property.ast,\n          DiagnosticSeverity.Error,\n          undefined,\n          [],\n          [propertyName]\n        ),\n      ];\n    }\n\n    const propTypes = propertyValuesToPropertyType(property);\n    const issues: Issue<StandardTypeIssue>[] = [];\n\n    const checkType = (\n      expected: PropertyType[],\n      type: PropertyType,\n      ast: ASTBase | undefined | null\n    ) => {\n      ast ??= property.ast;\n\n      const typeIsValid =\n        expected.some((tt) => tt == type) ||\n        (expected.some((tt) => tt == PropertyType.STRINGLIST) &&\n          (type === PropertyType.STRING || type === PropertyType.STRINGLIST)) ||\n        (expected.some((tt) => tt == PropertyType.PROP_ENCODED_ARRAY) &&\n          (type === PropertyType.U32 || type === PropertyType.U64));\n\n      if (!typeIsValid) {\n        const issue: StandardTypeIssue[] = [];\n        expected.forEach((tt) => {\n          switch (tt) {\n            case PropertyType.EMPTY:\n              issue.push(StandardTypeIssue.EXPECTED_EMPTY);\n              break;\n            case PropertyType.STRING:\n              issue.push(StandardTypeIssue.EXPECTED_STRING);\n              break;\n            case PropertyType.STRINGLIST:\n              issue.push(StandardTypeIssue.EXPECTED_STRINGLIST);\n              break;\n            case PropertyType.U32:\n              issue.push(StandardTypeIssue.EXPECTED_U32);\n              break;\n            case PropertyType.U64:\n              issue.push(StandardTypeIssue.EXPECTED_U64);\n              break;\n            case PropertyType.PROP_ENCODED_ARRAY:\n              issue.push(StandardTypeIssue.EXPECTED_PROP_ENCODED_ARRAY);\n              break;\n          }\n        });\n\n        if (issue.length) {\n          issues.push(\n            genIssue(\n              issue,\n              ast,\n              DiagnosticSeverity.Error,\n              [],\n              [],\n              [property.name]\n            )\n          );\n        }\n      }\n    };\n\n    if (this.type[0].types.some((e) => e === PropertyType.ANY)) {\n      return [];\n    }\n\n    if (this.type.length > 1) {\n      const type = this.type;\n      if (!this.list && this.type.length !== propTypes.length) {\n        issues.push(\n          genIssue(\n            StandardTypeIssue.EXPECTED_COMPOSITE_LENGTH,\n            property.ast.values ?? property.ast,\n            DiagnosticSeverity.Error,\n            [],\n            [],\n            [propertyName, this.type.length.toString()]\n          )\n        );\n      } else {\n        propTypes.forEach((t, i) => {\n          if (type[0].types.every((tt) => tt !== t)) {\n            issues.push(\n              genIssue(\n                StandardTypeIssue.EXPECTED_STRINGLIST,\n                property.ast.values?.values[i] ?? property.ast\n              )\n            );\n          }\n        });\n      }\n    } else {\n      if (this.type[0].types.some((tt) => tt === PropertyType.STRINGLIST)) {\n        propTypes.some((t) =>\n          checkType(\n            [PropertyType.STRINGLIST],\n            t,\n            property.ast.values?.values[0]?.value\n          )\n        );\n      } else if (\n        this.list ||\n        (this.type.length === 1 &&\n          this.type[0].types\n            .filter((t) => t !== PropertyType.EMPTY)\n            .every((tt) => tt === PropertyType.PROP_ENCODED_ARRAY))\n      ) {\n        propTypes.some((t) =>\n          checkType(\n            this.type[0].types,\n            t,\n            property.ast.values?.values[0]?.value\n          )\n        );\n      } else if (\n        propTypes.length > 1 &&\n        this.type[0].types.some((tt) => tt !== PropertyType.EMPTY)\n      ) {\n        issues.push(\n          genIssue(\n            StandardTypeIssue.EXPECTED_ONE,\n            property.ast.propertyName ?? property.ast,\n            DiagnosticSeverity.Error,\n            (property.ast.values?.values.slice(1) ?? []).filter(\n              (v) => !!v\n            ) as PropertyValue[],\n            [],\n            [property.name]\n          )\n        );\n      } else if (propTypes.length === 1) {\n        checkType(\n          this.type[0].types,\n          propTypes[0],\n          property.ast.values?.values[0]?.value\n        );\n      }\n\n      // we have the right type\n      if (issues.length === 0) {\n        issues.push(...(this.additionalTypeCheck?.(property) ?? []));\n        if (\n          this.values(property).length &&\n          this.type[0].types.some((tt) => tt === PropertyType.STRING)\n        ) {\n          const currentValue = property.ast.values?.values[0]\n            ?.value as StringValue;\n          if (!this.values(property).some((v) => currentValue.value === v)) {\n            issues.push(\n              genIssue(\n                StandardTypeIssue.EXPECTED_ENUM,\n                property.ast.values?.values[0]?.value ?? property.ast,\n                DiagnosticSeverity.Error,\n                [],\n                [],\n                [\n                  this.values(property)\n                    .map((v) => `'${v}'`)\n                    .join(\" or \"),\n                ]\n              )\n            );\n          }\n        }\n      }\n    }\n\n    return issues;\n  }\n\n  validate(runtime: Runtime, node: Node): Issue<StandardTypeIssue>[] {\n    if (typeof this.name === \"string\") {\n      const property = node.getProperty(this.name);\n      return this.validateProperty(runtime, node, this.name, property);\n    }\n\n    const properties = node.properties.filter((p) => this.getNameMatch(p.name));\n    return properties.flatMap((p) =>\n      this.validateProperty(runtime, node, p.name, p)\n    );\n  }\n\n  getPropertyCompletionItems(property: Property): CompletionItem[] {\n    const currentValue = this.type.at(property.ast.values?.values.length ?? 0);\n    if (currentValue?.types.some((tt) => tt === PropertyType.STRING)) {\n      if (\n        property.ast.values?.values &&\n        property.ast.values.values?.length > 1\n      ) {\n        return [];\n      }\n\n      return this.values(property).map((v) => ({\n        label: `\"${v}\"`,\n        kind: CompletionItemKind.Variable,\n        sortText: v === this.def ? `A${v}` : `Z${v}`,\n      }));\n    }\n\n    if (\n      currentValue?.types.some(\n        (tt) => tt === PropertyType.U32 || tt === PropertyType.U64\n      )\n    ) {\n      return this.values(property).map((v) => ({\n        label: `<${v}>`,\n        kind: CompletionItemKind.Variable,\n        sortText: v === this.def ? `A${v}` : `Z${v}`,\n      }));\n    }\n\n    return [];\n  }\n}\n\nconst propertyValuesToPropertyType = (property: Property): PropertyType[] => {\n  return property.ast.values\n    ? property.ast.values.values.map((v) => propertyValueToPropertyType(v))\n    : [PropertyType.EMPTY];\n};\n\nconst propertyValueToPropertyType = (\n  value: PropertyValue | null\n): PropertyType => {\n  if (!value) {\n    return PropertyType.UNKNOWN;\n  }\n  if (value.value instanceof StringValue) {\n    return PropertyType.STRING;\n  }\n\n  if (value.value instanceof ArrayValues) {\n    if (value.value.values.length === 1) {\n      return PropertyType.U32;\n    } else if (value.value.values.length === 2) {\n      return PropertyType.U64;\n    } else {\n      return PropertyType.PROP_ENCODED_ARRAY;\n    }\n  }\n\n  if (value.value instanceof LabelRef || value.value instanceof NodePathRef) {\n    return PropertyType.U32;\n  }\n\n  return PropertyType.BYTESTRING;\n};\n\nexport class NodeType {\n  compatible?: string;\n  private _properties: PropertyNodeType[] = [];\n  cellsValues?: {\n    specifier: string;\n    values: string[];\n  }[];\n  _childNodeType?: NodeType;\n  bindingsPath?: string;\n  description?: string;\n  onBus?: string;\n  bus?: string[];\n\n  getIssue(runtime: Runtime, node: Node) {\n    const issue: Issue<StandardTypeIssue>[] = [];\n    const statusProperty = node.getProperty(\"status\");\n    const value = statusProperty?.ast.values?.values.at(0)?.value;\n    if (value instanceof StringValue) {\n      if (value.value === \"disabled\") {\n        [...node.definitions, ...node.referencedBy].forEach((n) =>\n          issue.push(\n            genIssue(\n              StandardTypeIssue.NODE_DISABLED,\n              n,\n              DiagnosticSeverity.Hint,\n              [\n                ...(statusProperty?.ast.parentNode\n                  ? [statusProperty?.ast.parentNode]\n                  : []),\n              ],\n              [DiagnosticTag.Unnecessary]\n            )\n          )\n        );\n        return issue;\n      }\n    }\n\n    return [\n      ...issue,\n      ...this.properties.flatMap((p) => p.validate(runtime, node)),\n    ];\n  }\n\n  get properties() {\n    return this._properties;\n  }\n\n  addProperty(property: PropertyNodeType | PropertyNodeType[]) {\n    if (Array.isArray(property)) {\n      property.forEach((p) => this._properties.push(p));\n    } else {\n      this._properties.push(property);\n    }\n    this._properties.sort((a) => {\n      return typeof a.name === \"string\" ? 1 : 0;\n    });\n  }\n\n  get childNodeType() {\n    return this._childNodeType;\n  }\n\n  set childNodeType(nodeType: NodeType | undefined) {\n    if (!nodeType) {\n      return;\n    }\n\n    nodeType.bindingsPath = this.bindingsPath;\n    this._childNodeType = nodeType;\n  }\n\n  getOnPropertyHover(name: string) {\n    const typeFound = this.properties.find((p) => p.getNameMatch(name));\n    return typeFound?.onHover.bind(typeFound)();\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SymbolKind } from \"vscode-languageserver\";\nimport { ASTBase } from \"../../base\";\nimport { NodeName } from \"../node\";\n\nexport class NodePath extends ASTBase {\n  private _pathParts: (NodeName | null)[] = [];\n\n  constructor() {\n    super();\n  }\n\n  addPath(part: NodeName | null, pathDivider?: ASTBase) {\n    this._pathParts.push(part);\n    if (pathDivider) {\n      this.addChild(pathDivider);\n    }\n    this.addChild(part);\n  }\n\n  get pathParts() {\n    return [...this._pathParts];\n  }\n\n  toString() {\n    return this._pathParts.map((p) => p?.toString() ?? \"<NULL>\").join(\"/\");\n  }\n}\n\nexport class NodePathRef extends ASTBase {\n  constructor(public readonly path: NodePath | null) {\n    super();\n    this.docSymbolsMeta = {\n      name: `/${this.path?.toString() ?? \"\"}`,\n      kind: SymbolKind.Namespace,\n    };\n    this.semanticTokenType = \"variable\";\n    this.semanticTokenModifiers = \"declaration\";\n    this.addChild(path);\n  }\n\n  toString() {\n    return `&${this.path?.toString() ?? \"NULL\"}`;\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ASTBase } from \"../../base\";\nimport { AllValueType } from \"../types\";\nimport { LabelAssign } from \"../label\";\n\nexport class PropertyValue extends ASTBase {\n  constructor(\n    public readonly value: AllValueType,\n    public readonly endLabels: LabelAssign[]\n  ) {\n    super();\n    this.addChild(value);\n    this.endLabels.forEach((label) => {\n      this.addChild(label);\n    });\n  }\n\n  toString() {\n    return `${[\n      this.value?.toString() ?? \"NULL\",\n      ...this.endLabels.map((l) => l.toString()),\n    ].join(\" \")}`;\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyValues } from \"../../ast/dtc/values/values\";\nimport { LabelRef } from \"../../ast/dtc/labelRef\";\nimport { ArrayValues } from \"../../ast/dtc/values/arrayValue\";\nimport { NodePathRef } from \"../../ast/dtc/values/nodePath\";\nimport { NumberValue } from \"../../ast/dtc/values/number\";\nimport { PropertyValue } from \"../../ast/dtc/values/value\";\nimport { Node } from \"../../context/node\";\nimport { Property } from \"../../context/property\";\nimport { PropertyType, TypeConfig } from \"../types\";\nimport { Expression } from \"../../ast/cPreprocessors/expression\";\n\nexport const flatNumberValues = (value: PropertyValues | null | undefined) => {\n  if (value?.values.some((v) => !(v?.value instanceof ArrayValues))) {\n    return undefined;\n  }\n\n  return (\n    (value?.values.flatMap((v) =>\n      (v!.value as ArrayValues).values.map((vv) => vv.value)\n    ) as (LabelRef | NodePathRef | NumberValue | Expression)[]) ?? []\n  );\n};\n\nexport const getU32ValueFromProperty = (\n  property: Property,\n  valueIndex: number,\n  arrayValueIndex: number\n) => {\n  const value = property.ast.values?.values.at(valueIndex)?.value;\n\n  if (value instanceof ArrayValues) {\n    const labeledValue = value.values.at(arrayValueIndex);\n\n    if (labeledValue?.value instanceof NumberValue) {\n      return labeledValue.value.value;\n    }\n  }\n};\n\nexport const resolvePhandleNode = (\n  value:\n    | (PropertyValue | (LabelRef | NodePathRef | NumberValue | Expression))\n    | undefined\n    | null,\n  root: Node,\n  index = 0\n) => {\n  if (value instanceof PropertyValue) {\n    if (value?.value instanceof ArrayValues) {\n      const linked = value.value.values.at(index);\n      if (linked?.value instanceof NumberValue) {\n        return root.getPhandle(linked.value.value);\n      }\n      if (linked?.value instanceof LabelRef) {\n        return linked.value.linksTo;\n      }\n\n      if (linked?.value instanceof NodePathRef) {\n        return linked.value.path?.pathParts.at(-1)?.linksTo;\n      }\n    }\n  } else {\n    if (value instanceof NumberValue) {\n      return root.getPhandle(value.value);\n    }\n    if (value instanceof LabelRef) {\n      return value.linksTo;\n    }\n\n    if (value instanceof NodePathRef) {\n      return value.path?.pathParts.at(-1)?.linksTo;\n    }\n  }\n};\n\nexport const getInterruptInfo = (\n  node: Node\n): {\n  node: Node;\n  value?: number;\n  cellsProperty?: Property;\n} => {\n  const cellsProperty = node.getProperty(\"#interrupt-cells\");\n  const cellsValue = cellsProperty?.ast.values?.values.at(0)?.value;\n\n  if (cellsValue instanceof ArrayValues) {\n    const value = cellsValue.values.at(0)?.value;\n    if (value instanceof NumberValue) {\n      return {\n        cellsProperty,\n        node,\n        value: value.value,\n      };\n    }\n  }\n\n  return { cellsProperty, node };\n};\n\nexport const generateOrTypeObj = (\n  type: PropertyType | PropertyType[]\n): TypeConfig[] => {\n  if (Array.isArray(type)) {\n    return [{ types: type }];\n  }\n\n  return [{ types: [type] }];\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj } from \"./helpers\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"compatible\",\n    generateOrTypeObj(PropertyType.STRINGLIST)\n  );\n  prop.desctiption = [\n    `The compatible property value consists of one or more strings that define the specific programming model for the device. This list of strings should be used by a client program for device driver selection. The property value consists of a concatenated list of null terminated strings, from most specific to most general. They allow a device to express its compatibility with a family of similar devices, potentially allowing a single device driver to match against several devices.`,\n    `The recommended format is \"manufacturer, model\", where manufacturer is a string describing the name of the manufacturer (such as a stock ticker symbol), and model specifies the model number.`,\n    `The compatible string should consist only of lowercase letters, digits and dashes, and should start with a letter. A single comma is typically only used following a vendor prefix. Underscores should not be used.`,\n  ];\n  prop.examples = [\n    '```devicetree\\ncompatible = \"fsl,mpc8641\", \"ns16550\";\\n```',\n    `In this example, an operating system would first try to locate a device driver that supported fsl, mpc8641. If a driver was not found, it would then try to locate a driver that supported the more general ns 16550 device type.`,\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StringValue } from \"../../ast/dtc/values/string\";\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj } from \"./helpers\";\nimport { StandardTypeIssue } from \"../../types\";\nimport { genIssue } from \"../../helpers\";\nimport { DiagnosticSeverity } from \"vscode-languageserver\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"device_type\",\n    generateOrTypeObj(PropertyType.STRING),\n    (node) => {\n      return node.name === \"cpu\" || node.name === \"memory\"\n        ? \"optional\"\n        : \"omitted\";\n    },\n    undefined,\n    (property) => {\n      if (property.parent.name === \"cpu\" || property.parent.name === \"memory\") {\n        return [property.parent.name];\n      }\n      return [];\n    },\n    (property) => {\n      if (property.parent.name === \"cpu\" || property.parent.name === \"memory\") {\n        const value = property.ast.values?.values.at(0)?.value;\n        if (\n          value instanceof StringValue &&\n          value.value !== property.parent.name\n        ) {\n          return property.parent.name === \"cpu\"\n            ? [\n                genIssue(\n                  StandardTypeIssue.EXPECTED_DEVICE_TYPE_CPU,\n                  property.ast,\n                  DiagnosticSeverity.Error,\n                  [],\n                  [],\n                  [property.name]\n                ),\n              ]\n            : [\n                genIssue(\n                  StandardTypeIssue.EXPECTED_DEVICE_TYPE_MEMORY,\n                  property.ast,\n                  DiagnosticSeverity.Error,\n                  [],\n                  [],\n                  [property.name]\n                ),\n              ];\n        }\n      }\n      return [];\n    }\n  );\n  prop.desctiption = [\n    \"The device_type property was used in IEEE 1275 to describe the device's FCode programming model. Because DTSpec does not have FCode, new use of the property is deprecated, and it should be included only on cpu and memory nodes for compatibility with IEEE 1275-derived devicetrees.\",\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj } from \"./helpers\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"#interrupt-cells\",\n    generateOrTypeObj(PropertyType.U32)\n  );\n  prop.desctiption = [\n    \"The #interrupt-cells property defines the number of cells required to encode an interrupt specifier for an interrupt domain.\",\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj } from \"./helpers\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"interrupt-controller\",\n    generateOrTypeObj(PropertyType.EMPTY),\n    \"optional\"\n  );\n  prop.desctiption = [\n    \"The presence of an interrupt-controller property defines a node as an interrupt controller node.\",\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj } from \"./helpers\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"interrupt-parent\",\n    generateOrTypeObj(PropertyType.U32)\n  );\n  prop.desctiption = [\n    \"Because the hierarchy of the nodes in the interrupt tree might not match the devicetree, the interrupt-parent property is available to make the definition of an interrupt parent explicit. The value is the phandle to the interrupt parent. If this property is missing from a device, its interrupt parent is assumed to be its devicetree parent.\",\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Issue, StandardTypeIssue } from \"../../types\";\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj, resolvePhandleNode } from \"./helpers\";\nimport { genIssue } from \"../../helpers\";\nimport { DiagnosticSeverity } from \"vscode-languageserver\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"interrupts\",\n    generateOrTypeObj(PropertyType.PROP_ENCODED_ARRAY),\n    \"optional\",\n    undefined,\n    [],\n    (property) => {\n      const issues: Issue<StandardTypeIssue>[] = [];\n\n      const node = property.parent;\n      const interruptParent = node.getProperty(\"interrupt-parent\");\n      const root = node.root;\n      const parentInterruptNode = interruptParent\n        ? resolvePhandleNode(interruptParent?.ast.values?.values.at(0), root)\n        : node.parent;\n\n      if (!parentInterruptNode) {\n        if (!interruptParent) {\n          issues.push(\n            genIssue(\n              StandardTypeIssue.PROPERTY_REQUIRES_OTHER_PROPERTY_IN_NODE,\n              property.ast,\n              DiagnosticSeverity.Error,\n              [...property.parent.nodeNameOrLabelRef],\n              [],\n              [\n                property.name,\n                \"interrupt-parent\",\n                `/${property.parent.path.slice(1).join(\"/\")}`,\n              ]\n            )\n          );\n          return issues;\n        } else {\n          issues.push(\n            genIssue(\n              StandardTypeIssue.INTERRUPTS_PARENT_NODE_NOT_FOUND,\n              interruptParent.ast.values?.values.at(0)?.value ??\n                interruptParent.ast\n            )\n          );\n          return issues;\n        }\n      }\n\n      return issues;\n    }\n  );\n  prop.desctiption = [\n    \"The interrupts property of a device node defines the interrupt or interrupts that are generated by the device.The value of the interrupts property consists of an arbitrary number of interrupt specifiers. The format of an interrupt specifier is defined by the binding of the interrupt domain root.\",\n    \"interrupts is overridden by the interrupts-extended property and normally only one or the other should be used.\",\n  ];\n  prop.examples = [\n    \"A common definition of an interrupt specifier in an open PIC-compatible interrupt domain consists of two cells; an interrupt number and level/sense information. See the following example, which defines a single interrupt specifier, with an interrupt number of OxA and level/sense encoding of 8.\",\n    \"```devicetree\\ninterrupts = <0xA 8>;\\n```\",\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Issue, StandardTypeIssue } from \"../../types\";\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport {\n  flatNumberValues,\n  generateOrTypeObj,\n  getInterruptInfo,\n  resolvePhandleNode,\n} from \"./helpers\";\nimport { genIssue } from \"../../helpers\";\nimport { DiagnosticSeverity } from \"vscode-languageserver\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"interrupts-extended\",\n    generateOrTypeObj(PropertyType.PROP_ENCODED_ARRAY),\n    \"optional\",\n    undefined,\n    [],\n    (property) => {\n      const issues: Issue<StandardTypeIssue>[] = [];\n\n      const node = property.parent;\n      const interrupts = node.getProperty(\"interrupts\");\n\n      if (interrupts) {\n        issues.push(\n          genIssue(\n            StandardTypeIssue.IGNORED,\n            interrupts.ast,\n            DiagnosticSeverity.Warning,\n            [property.ast],\n            [],\n            [interrupts.name, \"is ignored when 'interrupts-extended' is used\"]\n          )\n        );\n      }\n\n      const interruptParent = node.getProperty(\"interrupt-parent\");\n      if (interruptParent) {\n        issues.push(\n          genIssue(\n            StandardTypeIssue.IGNORED,\n            interruptParent.ast,\n            DiagnosticSeverity.Warning,\n            [property.ast],\n            [],\n            [\n              interruptParent.name,\n              \"is ignored when 'interrupts-extended' is used \",\n            ]\n          )\n        );\n      }\n\n      const root = node.root;\n\n      const values = flatNumberValues(property.ast.values);\n      if (!values?.length) {\n        return [];\n      }\n\n      let i = 0;\n      while (i < values.length) {\n        const phandleNode = resolvePhandleNode(values[i], root);\n\n        if (!phandleNode) {\n          issues.push(\n            genIssue(\n              StandardTypeIssue.INTERRUPTS_PARENT_NODE_NOT_FOUND,\n              values[i],\n              DiagnosticSeverity.Error\n            )\n          );\n          return issues;\n        }\n\n        const interruptCells = getInterruptInfo(phandleNode);\n\n        if (!interruptCells.cellsProperty) {\n          issues.push(\n            genIssue(\n              StandardTypeIssue.PROPERTY_REQUIRES_OTHER_PROPERTY_IN_NODE,\n              property.ast,\n              DiagnosticSeverity.Error,\n              [...interruptCells.node.nodeNameOrLabelRef],\n              [],\n              [\n                property.name,\n                \"#interrupt-cells\",\n                `/${interruptCells.node.path.slice(1).join(\"/\")}`,\n              ]\n            )\n          );\n          return issues;\n        }\n\n        const remaining = values.length - i - 1;\n\n        if (interruptCells.value == null) {\n          return issues;\n        }\n\n        if (interruptCells.value != null && interruptCells.value > remaining) {\n          issues.push(\n            genIssue(\n              StandardTypeIssue.INTERRUPTS_VALUE_CELL_MISS_MATCH,\n              values[i],\n              DiagnosticSeverity.Error,\n              [interruptCells.cellsProperty.ast],\n              [],\n              [property.name, interruptCells.value.toString()]\n            )\n          );\n          return issues;\n        }\n\n        i += interruptCells.value + 1;\n      }\n\n      return issues;\n    }\n  );\n  prop.desctiption = [\n    \"The interrupts-extended property lists the interrupts) generated by a device. interrupts-extended should be used instead of interrupts when a device is connected to multiple interrupt controllers as it encodes a parent phandle with each interrupt specifier.\",\n    \"The interrupts and interrupts-extended properties are mutually exclusive. A device node should use one or the other, but not both. Using both is only permissible when required for compatibility with software that does not understand interrupts-extended. If both interrupts-extended and interrupts are present then interrupts-extended takes precedence.\",\n  ];\n  prop.examples = [\n    \"This example shows how a device with two interrupt outputs connected to two separate interrupt controllers would describe the connection using an interrupts-extended property. pic is an interrupt controller with an #interrupt-cells specifier of 2, while gic is an interrupt controller with an #interrupts-cells specifier of 1.\",\n    \"```devicetree\\ninterrupts-extended = <&pic OXA 8>, <&gic Oxda>;\\n```\",\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj } from \"./helpers\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"dma-noncoherent\",\n    generateOrTypeObj(PropertyType.EMPTY)\n  );\n  prop.desctiption = [\n    \"For architectures which are by default coherent for 1/O, the dma-noncoherent property is used to indicate a device is not capable of coherent DMA operations. Some architectures have non-coherent DMA by default and this property is not applicable.\",\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj } from \"./helpers\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"dma-coherent\",\n    generateOrTypeObj(PropertyType.EMPTY)\n  );\n  prop.desctiption = [\n    \"For architectures which are by default non-coherent for I/O, the dma-coherent property is used to indicate a device is capable of coherent DMA operations. Some architectures have coherent DMA by default and this property is not applicable.\",\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport {\n  flatNumberValues,\n  generateOrTypeObj,\n  getU32ValueFromProperty,\n} from \"./helpers\";\nimport { genIssue } from \"../../helpers\";\nimport { Issue, StandardTypeIssue } from \"../../types\";\nimport { DiagnosticSeverity } from \"vscode-languageserver\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"dma-ranges\",\n    generateOrTypeObj([PropertyType.EMPTY, PropertyType.PROP_ENCODED_ARRAY]),\n    \"optional\",\n    undefined,\n    [],\n    (property) => {\n      const issues: Issue<StandardTypeIssue>[] = [];\n\n      const values = flatNumberValues(property.ast.values);\n      if (!values?.length) {\n        return [];\n      }\n\n      const sizeCellProperty = property.parent?.getProperty(\"#size-cells\");\n      const childBusAddress = property.parent?.getProperty(\"#address-cells\");\n      const parentdBusAddress =\n        property.parent.parent?.getProperty(\"#address-cells\");\n\n      const sizeCellValue = sizeCellProperty\n        ? getU32ValueFromProperty(sizeCellProperty, 0, 0) ?? 1\n        : 1;\n\n      const childBusAddressValue = childBusAddress\n        ? getU32ValueFromProperty(childBusAddress, 0, 0) ?? 2\n        : 2;\n      const parentdBusAddressValue = parentdBusAddress\n        ? getU32ValueFromProperty(parentdBusAddress, 0, 0) ?? 2\n        : 2;\n\n      if (\n        values.length %\n          (childBusAddressValue + parentdBusAddressValue + sizeCellValue) !==\n        0\n      ) {\n        issues.push(\n          genIssue(\n            StandardTypeIssue.CELL_MISS_MATCH,\n            values[\n              values.length -\n                (values.length %\n                  (childBusAddressValue +\n                    parentdBusAddressValue +\n                    sizeCellValue))\n            ],\n            DiagnosticSeverity.Error,\n            [],\n            [],\n            [\n              property.name,\n              `<${[\n                ...Array.from(\n                  { length: childBusAddressValue },\n                  () => \"child-bus-address\"\n                ),\n                ...Array.from(\n                  { length: parentdBusAddressValue },\n                  () => \"parent-bus-address\"\n                ),\n                ...Array.from(\n                  { length: parentdBusAddressValue },\n                  () => \"length\"\n                ),\n              ].join(\" \")}>`,\n            ]\n          )\n        );\n      }\n\n      return issues;\n    }\n  );\n  prop.desctiption = [\n    `The dma-ranges property is used to describe the direct memory access (DMA) structure of a memory-mapped bus whose devicetree parent can be accessed from DMA operations originating from the bus. It provides a means of defining a mapping or translation between the physical address space of the bus and the physical address space of the parent of the bus.`,\n    \"The format of the value of the dma-ranges property is an arbitrary number of triplets of (child-bus-address, parent-bus-address, length). Each triplet specified describes a contiguous DMA address range.\",\n    \"- The child-bus-address is a physical address within the child bus' address space. The number of cells to represent the address depends on the bus and can be determined from the #address-cells of this node (the node in which the dma-ranges property appears).\",\n    \"- The parent-bus-address is a physical address within the parent bus' address space. The number of cells to represent the parent address is bus dependent and can be determined from the #address-cells property of the node that defines the parent's address space.\",\n    \"- The length specifies the size of the range in the child's address space. The number of cells to represent the size can be determined from the #size-cells of this node (the node in which the dma-ranges property appears).\",\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { genIssue } from \"../../helpers\";\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport {\n  flatNumberValues,\n  generateOrTypeObj,\n  getU32ValueFromProperty,\n} from \"./helpers\";\nimport { Issue, StandardTypeIssue } from \"../../types\";\nimport { DiagnosticSeverity } from \"vscode-languageserver\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"ranges\",\n    generateOrTypeObj([PropertyType.EMPTY, PropertyType.PROP_ENCODED_ARRAY]),\n    \"optional\",\n    undefined,\n    [],\n    (property) => {\n      const issues: Issue<StandardTypeIssue>[] = [];\n\n      const values = flatNumberValues(property.ast.values);\n      if (!values?.length) {\n        return [];\n      }\n\n      const sizeCellProperty = property.parent?.getProperty(\"#size-cells\");\n      const childBusAddress = property.parent?.getProperty(\"#address-cells\");\n      const parentdBusAddress =\n        property.parent.parent?.getProperty(\"#address-cells\");\n\n      const sizeCellValue = sizeCellProperty\n        ? getU32ValueFromProperty(sizeCellProperty, 0, 0) ?? 1\n        : 1;\n\n      const childBusAddressValue = childBusAddress\n        ? getU32ValueFromProperty(childBusAddress, 0, 0) ?? 2\n        : 2;\n      const parentdBusAddressValue = parentdBusAddress\n        ? getU32ValueFromProperty(parentdBusAddress, 0, 0) ?? 2\n        : 2;\n\n      if (\n        values.length %\n          (childBusAddressValue + parentdBusAddressValue + sizeCellValue) !==\n        0\n      ) {\n        issues.push(\n          genIssue(\n            StandardTypeIssue.CELL_MISS_MATCH,\n            values[\n              values.length -\n                (values.length %\n                  (childBusAddressValue +\n                    parentdBusAddressValue +\n                    sizeCellValue))\n            ],\n            DiagnosticSeverity.Error,\n            [],\n            [],\n            [\n              property.name,\n              `<${[\n                ...Array.from(\n                  { length: childBusAddressValue },\n                  () => \"child-bus-address\"\n                ),\n                ...Array.from(\n                  { length: parentdBusAddressValue },\n                  () => \"parent-bus-address\"\n                ),\n                ...Array.from(\n                  { length: parentdBusAddressValue },\n                  () => \"length\"\n                ),\n              ].join(\" \")}>`,\n            ]\n          )\n        );\n      }\n\n      return issues;\n    }\n  );\n  prop.desctiption = [\n    `The ranges property provides a means of defining a mapping or translation between the address space of the bus (the child address space) and the address space of the bus node's parent (the parent address space).`,\n    \"The format of the value of the ranges property is an arbitrary number of triplets of (child-bus-address, parent-bus-address, length)\",\n    \"- The child-bus-address is a physical address within the child bus' address space. The number of cells to represent the address is bus dependent and can be determined from the #address-cells of this node (the node in which the ranges property appears).\",\n    \"- The parent-bus-address is a physical address within the parent bus' address space. The number of cells to represent the parent address is bus dependent and can be determined from the #address-cells property of the node that defines the parent's address space.\",\n    \"- The length specifies the size of the range in the child's address space. The number of cells to represent the size can be determined from the #size-cells of this node (the node in which the ranges property appears).\",\n    \"If the property is defined with an < empty> value, it specifies that the parent and child address space is identical, and no address translation is required.\",\n    \"If the property is not present in a bus node, it is assumed that no mapping exists between children of the node and the parent address space.\",\n  ];\n  prop.examples = [\n    \"Address Translation Example:\",\n    [\n      \"```devicetree\",\n      `soc {\n\\tcompatible = \"simple-bus\";\n\\t#address-cells = <1>;\n\\t#size-cells = <1>;\n\\tranges = <0x0 0xe0000000 0x00100000>;\n\\t\\tserial@4600 {\n\\t\\tdevice_type = \"serial\";\n\\t\\tcompatible = \"ns16550\";\n\\t\\treg = <0x4600 0x100>;\n\\t\\tclock-frequency = <0>;\n\\t\\tinterrupts = <0xA 0x8>;\n\\t\\tinterrupt-parent = <&ipic>;\n\\t};\n};`,\n      \"```\",\n    ].join(\"\\n\"),\n    \"The soc node specifies a ranges property of\",\n    [\"```devicetree\", `<Ox0 Oxe0000000 0x00100000>;`, \"```\"].join(\"\\n\"),\n    \"This property value specifies that for a 1024 KB range of address space, a child node addressed at physical OxO maps to a parent address of physical 0xe0000000. With this mapping, the serial device node can be addressed by a load or store at address 0xe0004600, an offset of 0x4600 (specified in reg) plus the 0xe0000000 mapping specified in ranges.\",\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj } from \"./helpers\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"virtual-reg\",\n    generateOrTypeObj(PropertyType.U32)\n  );\n  prop.desctiption = [\n    `The virtual-res property specifies an effective address that maps to the first physical address specified in the reg property of the device node. This property enables boot programs to provide client programs with virtual-to-physical mappings that have been set up.`,\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Issue, StandardTypeIssue } from \"../../types\";\nimport { genIssue } from \"../../helpers\";\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport {\n  flatNumberValues,\n  generateOrTypeObj,\n  getU32ValueFromProperty,\n} from \"./helpers\";\nimport { DiagnosticSeverity } from \"vscode-languageserver\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"reg\",\n    generateOrTypeObj(PropertyType.PROP_ENCODED_ARRAY),\n    (node) => {\n      return node.address !== undefined ? \"required\" : \"omitted\";\n    },\n    undefined,\n    [],\n    (property) => {\n      const issues: Issue<StandardTypeIssue>[] = [];\n\n      const values = flatNumberValues(property.ast.values);\n      if (!values?.length) {\n        return [];\n      }\n\n      const sizeCellProperty =\n        property.parent.parent?.getProperty(\"#size-cells\");\n      const addressCellProperty =\n        property.parent.parent?.getProperty(\"#address-cells\");\n\n      const sizeCell = sizeCellProperty\n        ? getU32ValueFromProperty(sizeCellProperty, 0, 0) ?? 1\n        : 1;\n      const addressCell = addressCellProperty\n        ? getU32ValueFromProperty(addressCellProperty, 0, 0) ?? 2\n        : 2;\n\n      if (values.length % (sizeCell + addressCell) !== 0) {\n        issues.push(\n          genIssue(\n            StandardTypeIssue.CELL_MISS_MATCH,\n            values[values.length - (values.length % (sizeCell + addressCell))],\n            DiagnosticSeverity.Error,\n            [],\n            [],\n            [\n              property.name,\n              `<${[\n                ...Array.from({ length: addressCell }, () => \"address\"),\n                ...Array.from({ length: sizeCell }, () => \"cell\"),\n              ].join(\" \")}>`,\n            ]\n          )\n        );\n        return issues;\n      }\n\n      for (let i = 0; i < values.length; i += sizeCell + addressCell) {\n        const buffer = new ArrayBuffer(addressCell * 4);\n        const view = new DataView(buffer);\n\n        values\n          .slice(0, addressCell)\n          .map((_, i) => getU32ValueFromProperty(property, 0, i) ?? 0)\n          .forEach((c, i) => {\n            view.setUint32(i * 4, c);\n          });\n\n        if (\n          property.parent.address &&\n          ((addressCell === 2 &&\n            view.getBigUint64(0) !== BigInt(property.parent.address)) ||\n            (addressCell === 1 &&\n              view.getUint32(0) !== property.parent.address))\n        ) {\n          issues.push(\n            genIssue(\n              StandardTypeIssue.MISMATCH_NODE_ADDRESS_REF_FIRST_VALUE,\n              property.ast,\n              DiagnosticSeverity.Error,\n              [],\n              [],\n              [property.name]\n            )\n          );\n        }\n      }\n\n      return issues;\n    }\n  );\n  prop.desctiption = [\n    `The reg property describes the address of the device's resources within the address space defined by its parent bus. Most commonly this means the offsets and lengths of memory-mapped IO register blocks, but may have a different meaning on some bus types. Addresses in the address space defined by the root node are CPU real addresses.`,\n    `The value is a <prop-encoded-array>, composed of an arbitrary number of pairs of address and length, <ad-dress length>. The number of <u32> cells required to specify the address and length are bus-specific and are specified by the #address-cells and #size-cells properties in the parent of the device node. If the parent node specifies a value of 0 for #size-cells, the length field in the value of reg shall be omitted.`,\n  ];\n  prop.examples = [\n    \"Suppose a device within a system-on-a-chip had two blocks of registers, a 32-byte block at offset 0x3000 in the SOC and a 256-byte block at offset OxFE00. The reg property would be encoded as follows (assuming #address-cells and #size-cells values of 1):\",\n    \"```devicetree\\nreg = <0x3000 0x20 0xFE00 0x100>;\\n```\",\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj } from \"./helpers\";\n\nexport default () =>\n  new PropertyNodeType(\n    \"#size-cells\",\n    generateOrTypeObj(PropertyType.U32),\n    \"optional\",\n    1\n  );\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj } from \"./helpers\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"#address-cells\",\n    generateOrTypeObj(PropertyType.U32),\n    \"optional\",\n    2\n  );\n\n  prop.desctiption = [\n    `The #address-cells and #size-cells properties may be used in any device node that has children in the devicetree hierarchy and describes how child device nodes should be addressed. The #address-cells property defines the number of <u32> cells used to encode the address field in a child node's reg property. The #size-cells property defines the number of <u32 > cells used to encode the size field in a child node's reg property.`,\n    `The #address-cells and #size-cells properties are not inherited from ancestors in the devicetree. They shall be explicitly defined.`,\n    `A DTSpec-compliant boot program shall supply #address-cells and #size-cells on all nodes that have children.`,\n    `If missing, a client program should assume a default value of 2 for #address-cells, and a value of 1 for #size-cells.`,\n  ];\n  prop.examples = [\n    \"See the following devicetree excerpt:\",\n    [\n      \"```devicetree\",\n      `SOC {\n\\t#address-cells = <1>;\n\\t\\t#size-cells = <1>;\n\\t\\tserial@4600 {\n\\t\\tcompatible = \"ns16550\";\n\\t\\treg = <0x4600 0x100>;\n\\t\\tclock-frequency = <0>;\n\\t\\tinterrupts = <0xA 0x8>;\n\\t\\tinterrupt-parent = <&ipic>;\n\\t};\n};`,\n      \"```\",\n    ].join(\"\\n\"),\n    \"In this example, the #address-cells and #size-cells properties of the soc node are both set to 1. This setting specifies that one cell is required to represent an address and one cell is required to represent the size of nodes that are children of this node.\",\n    \"The serial device reg property necessarily follows this specification set in the parent (soc) node\u2014 the address is represented by a single cell (0x4600), and the size is represented by a single cell (0x100).\",\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj } from \"./helpers\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"status\",\n    generateOrTypeObj(PropertyType.STRING),\n    \"optional\",\n    \"okay\",\n    [\"okay\", \"disabled\", \"reserved\", \"fail\", \"fail-sss\"]\n  );\n  prop.desctiption = [\n    `The status property indicates the operational status of a device.\n   The lack of a status property should betreated as if the property existed with the value of \"okay\"`,\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StandardTypeIssue } from \"../../types\";\nimport { genIssue } from \"../../helpers\";\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj, getU32ValueFromProperty } from \"./helpers\";\nimport { DiagnosticSeverity } from \"vscode-languageserver\";\nimport { ASTBase } from \"../../ast/base\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"phandle\",\n    generateOrTypeObj(PropertyType.U32),\n    \"optional\",\n    undefined,\n    [],\n    (property) => {\n      const phandelValue = getU32ValueFromProperty(property, 0, 0);\n      if (phandelValue) {\n        const nodes = property.parent.root.getAllPhandle(phandelValue);\n        if (nodes.length > 1 && nodes.at(-1) === property.parent) {\n          return [\n            genIssue(\n              StandardTypeIssue.EXPECTED_UNIQUE_PHANDLE,\n              property.ast.values?.values.at(0) ?? property.ast,\n              DiagnosticSeverity.Error,\n              nodes\n                .slice(0, -1)\n                .flatMap((n) => n.getProperty(\"phandle\")?.ast)\n                .filter((a) => !!a) as ASTBase[],\n              [],\n              [property.name]\n            ),\n          ];\n        }\n      }\n      return [];\n    }\n  );\n  prop.desctiption = [\n    `The phandle property specifies a numerical identifier for a node that is unique within the devicetree. The phandle property value is used by other nodes that need to refer to the node associated with the property.`,\n  ];\n  prop.examples = [\n    \"See the following devicetree excerpt:\",\n    [\n      \"```devicetree\",\n      `pic@10000000 {\n\\tphandle = <1>;\n\\tinterrupt-controller;\n\\treg = <0x10000000 0x100>;\n};`,\n      \"```\",\n    ].join(\"\\n\"),\n    \"A phandle value of 1 is defined. Another device node could reference the pic node with a phandle value of 1:\",\n    [\n      \"```devicetree\",\n      `another-device-node {\n\\tinterrupt-parent = <1>;\n};`,\n      \"```\",\n    ].join(\"\\n\"),\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj } from \"./helpers\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"model\",\n    generateOrTypeObj(PropertyType.STRING)\n  );\n  prop.desctiption = [\n    `The model property value is a <string> that specifies the manufacturer's model number of the device.`,\n    `The recommended format is: \"manufacturer, model\" , where manufacturer is a string describing the name of the manufacturer (such as a stock ticker symbol), and model specifies the model number.`,\n  ];\n  prop.examples = ['```devicetree\\nmodel = \"{sl, MPC8349EMITX\" ;\\n```'];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { genIssue } from \"../../helpers\";\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj } from \"./helpers\";\nimport { StandardTypeIssue } from \"../../types\";\nimport { DiagnosticSeverity, DiagnosticTag } from \"vscode-languageserver\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"name\",\n    generateOrTypeObj(PropertyType.STRING),\n    \"optional\",\n    undefined,\n    [],\n    (property) => [\n      genIssue(\n        StandardTypeIssue.DEPRECATED,\n        property.ast,\n        DiagnosticSeverity.Warning,\n        [],\n        [DiagnosticTag.Deprecated],\n        [property.name]\n      ),\n    ]\n  );\n  prop.hideAutoComplete = true;\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Issue, StandardTypeIssue } from \"../../types\";\nimport { PropertyNodeType, PropertyType as PropertyType } from \"../types\";\nimport {\n  flatNumberValues,\n  generateOrTypeObj,\n  resolvePhandleNode,\n  getU32ValueFromProperty,\n} from \"./helpers\";\nimport { genIssue } from \"../../helpers\";\nimport { DiagnosticSeverity } from \"vscode-languageserver\";\nimport { ArrayValues } from \"../../ast/dtc/values/arrayValue\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"interrupt-map\",\n    generateOrTypeObj(PropertyType.PROP_ENCODED_ARRAY),\n    \"optional\",\n    undefined,\n    [],\n    (property) => {\n      const issues: Issue<StandardTypeIssue>[] = [];\n      const node = property.parent;\n      const root = property.parent.root;\n\n      const values = flatNumberValues(property.ast.values);\n      if (!values?.length) {\n        return [];\n      }\n\n      const childAddressCells = node.getProperty(\"#address-cells\");\n      const childInterruptSpecifier = node.getProperty(\"#interrupt-cells\");\n\n      if (!childAddressCells) {\n        issues.push(\n          genIssue(\n            StandardTypeIssue.PROPERTY_REQUIRES_OTHER_PROPERTY_IN_NODE,\n            property.ast,\n            DiagnosticSeverity.Error,\n            [...node.nodeNameOrLabelRef],\n            [],\n            [\n              property.name,\n              \"#address-cells\",\n              `/${node.path.slice(1).join(\"/\")}`,\n            ]\n          )\n        );\n      }\n\n      if (!childInterruptSpecifier) {\n        issues.push(\n          genIssue(\n            StandardTypeIssue.PROPERTY_REQUIRES_OTHER_PROPERTY_IN_NODE,\n            property.ast,\n            DiagnosticSeverity.Error,\n            [...node.nodeNameOrLabelRef],\n            [],\n            [\n              property.name,\n              \"#interrupt-cells\",\n              `/${node.path.slice(1).join(\"/\")}`,\n            ]\n          )\n        );\n      }\n\n      if (issues.length) {\n        return issues;\n      }\n\n      let i = 0;\n      while (i < values.length) {\n        const childAddressCellsValue = getU32ValueFromProperty(\n          childAddressCells!,\n          0,\n          0\n        );\n\n        const childInterruptSpecifierValue = getU32ValueFromProperty(\n          childInterruptSpecifier!,\n          0,\n          0\n        );\n\n        if (\n          childAddressCellsValue == null ||\n          childInterruptSpecifierValue == null\n        ) {\n          return issues;\n        }\n\n        let entryEndIndex = 0;\n\n        i += childAddressCellsValue + childInterruptSpecifierValue;\n\n        if (values.length < i + 1) {\n          const expLen =\n            childAddressCellsValue + childInterruptSpecifierValue + 1;\n          issues.push(\n            genIssue(\n              StandardTypeIssue.MAP_ENTRY_INCOMPLETE,\n              values[values.length - 1],\n              DiagnosticSeverity.Error,\n              [],\n              [],\n              [\n                property.name,\n                `after the last value of ${[\n                  ...Array.from(\n                    { length: childAddressCellsValue },\n                    () => \"ChildAddress\"\n                  ),\n                  ...Array.from(\n                    { length: childInterruptSpecifierValue },\n                    () => \"ChildInterruptSpecifier\"\n                  ),\n                  \"InterruptParent ParentUnitAddress... ParentInterruptSpecifier...\",\n                ]\n                  .slice(\n                    (values.length - entryEndIndex) % expLen === 0\n                      ? expLen\n                      : (values.length - entryEndIndex) % expLen\n                  )\n                  .join(\" \")}`,\n              ]\n            )\n          );\n          break;\n        }\n        const interruptParent = resolvePhandleNode(values[i], root);\n        if (!interruptParent) {\n          issues.push(\n            genIssue(\n              StandardTypeIssue.INTERRUPTS_PARENT_NODE_NOT_FOUND,\n              values[i],\n              DiagnosticSeverity.Error\n            )\n          );\n          break;\n        }\n\n        const parentUnitAddress = interruptParent.getProperty(\"#address-cells\");\n        const parentInterruptSpecifier =\n          interruptParent.getProperty(\"#interrupt-cells\");\n\n        if (!parentUnitAddress) {\n          issues.push(\n            genIssue(\n              StandardTypeIssue.PROPERTY_REQUIRES_OTHER_PROPERTY_IN_NODE,\n              values[i],\n              DiagnosticSeverity.Error,\n              [...interruptParent.nodeNameOrLabelRef],\n              [],\n              [\n                property.name,\n                \"#address-cells\",\n                `/${node.path.slice(1).join(\"/\")}`,\n              ]\n            )\n          );\n        }\n\n        if (!parentInterruptSpecifier) {\n          issues.push(\n            genIssue(\n              StandardTypeIssue.PROPERTY_REQUIRES_OTHER_PROPERTY_IN_NODE,\n              values[i],\n              DiagnosticSeverity.Error,\n              [...interruptParent.nodeNameOrLabelRef],\n              [],\n              [\n                property.name,\n                \"#interrupt-cells\",\n                `/${node.path.slice(1).join(\"/\")}`,\n              ]\n            )\n          );\n        }\n\n        if (issues.length) {\n          break;\n        }\n\n        i++;\n\n        const parentUnitAddressValue = getU32ValueFromProperty(\n          parentUnitAddress!,\n          0,\n          0\n        );\n        const parentInterruptSpecifierValue = getU32ValueFromProperty(\n          parentInterruptSpecifier!,\n          0,\n          0\n        );\n\n        if (\n          parentUnitAddressValue == null ||\n          parentInterruptSpecifierValue == null\n        ) {\n          break;\n        }\n\n        i += parentUnitAddressValue + parentInterruptSpecifierValue;\n        if (values.length < i) {\n          const expLen =\n            childAddressCellsValue +\n            childInterruptSpecifierValue +\n            1 +\n            parentUnitAddressValue +\n            parentInterruptSpecifierValue;\n          issues.push(\n            genIssue(\n              StandardTypeIssue.MAP_ENTRY_INCOMPLETE,\n              values[values.length - 1],\n              DiagnosticSeverity.Error,\n              [],\n              [],\n              [\n                property.name,\n                `after the last value of ${[\n                  ...Array.from(\n                    { length: childAddressCellsValue },\n                    () => \"ChildAddress\"\n                  ),\n                  ...Array.from(\n                    { length: childInterruptSpecifierValue },\n                    () => \"ChildInterruptSpecifier\"\n                  ),\n                  \"InterruptParent\",\n                  ...Array.from(\n                    { length: parentUnitAddressValue },\n                    () => \"ParentUnitAddress\"\n                  ),\n                  ...Array.from(\n                    { length: parentInterruptSpecifierValue },\n                    () => \"ParentInterruptSpecifier\"\n                  ),\n                ]\n                  .slice(\n                    (values.length - entryEndIndex) % expLen === 0\n                      ? expLen\n                      : (values.length - entryEndIndex) % expLen\n                  )\n                  .join(\" \")}`,\n              ]\n            )\n          );\n          break;\n        }\n        entryEndIndex = i;\n      }\n\n      if (!property.ast.values) {\n        return [];\n      }\n\n      for (let ii = 0; ii < property.ast.values.values.length; ii++) {\n        const values = property.ast.values.values.at(ii);\n\n        if (!values) {\n          continue;\n        }\n\n        if (issues.length) {\n          return issues;\n        }\n\n        const childAddressCellsValue = getU32ValueFromProperty(\n          childAddressCells!,\n          0,\n          0\n        );\n\n        const childInterruptSpecifierValue = getU32ValueFromProperty(\n          childInterruptSpecifier!,\n          0,\n          0\n        );\n\n        if (\n          childAddressCellsValue == null ||\n          childInterruptSpecifierValue == null\n        ) {\n          return issues;\n        }\n\n        if (!(values.value instanceof ArrayValues)) {\n          return issues;\n        }\n      }\n\n      return issues;\n    }\n  );\n  prop.desctiption = [\n    \"An interrupt-map is a property on a nexus node that bridges one interrupt domain with a set of parent interrupt domains and specifies how interrupt specifiers in the child domain are mapped to their respective parent domains.\",\n    \"The interrupt map is a table where each row is a mapping entry consisting of five components: child unit address, child interrupt specifier, interrupt-parent, parent unit address, parent interrupt specifier.\",\n    \"- child unit address: The unit address of the child node being mapped. The number of 32-bit cells required to specify this is described by the #address-cells property of the bus node on which the child is located.\",\n    \"- child interrupt specifier: The interrupt specifier of the child node being mapped. The number of 32-bit cells required to specify this component is described by the #interrupt-cells property of this node-the nexus node containing the interrupt-map property.\",\n    \"- interrupt-parent: A single <phandle > value that points to the interrupt parent to which the child domain is being mapped.\",\n    \"- parent unit address: The unit address in the domain of the interrupt parent. The number of 32-bit cells required to specify this address is described by the #address-cells property of the node pointed to by the interrupt-parent field.\",\n    \"- parent interrupt specifier: The interrupt specifier in the parent domain. The number of 32-bit cells required to specify this component is described by the #interrupt-cells property of the node pointed to by the interrupt-parent field.\",\n    \"Lookups are performed on the interrupt mapping table by matching a unit-address/interrupt specifier pair against the child components in the interrupt-map. Because some fields in the unit interrupt specifier may not be relevant, a mask is applied before the lookup is done. This mask is defined in the interrupt-map-mask property\",\n    \"Note: Both the child node and the interrupt parent node are required to have #address-cells and #interrupt-cells properties defined. If a unit address component is not required ,#address-cells shall be explicitly defined to be zero.\",\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj } from \"./helpers\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    \"interrupt-map-mask\",\n    generateOrTypeObj(PropertyType.PROP_ENCODED_ARRAY)\n  );\n  prop.desctiption = [\n    \"An interrupt-map-mask property is specified for a nexus node in the interrupt tree. This property specifies a mask that is ANDed with the incoming unit interrupt specifier being looked up in the table specified in the interrupt-mapproperty.\",\n  ];\n\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Issue, StandardTypeIssue } from \"../../types\";\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport {\n  flatNumberValues,\n  generateOrTypeObj,\n  resolvePhandleNode,\n  getU32ValueFromProperty,\n} from \"./helpers\";\nimport { genIssue } from \"../../helpers\";\nimport { DiagnosticSeverity } from \"vscode-languageserver\";\nimport { ArrayValues } from \"../../ast/dtc/values/arrayValue\";\n\nexport default () => {\n  const prop = new PropertyNodeType(\n    (name) => {\n      if (name.startsWith(\"interrupt-\")) {\n        return false;\n      }\n\n      return !!name.match(/^[A-Z-a-z]+-map$/);\n    },\n    generateOrTypeObj(PropertyType.PROP_ENCODED_ARRAY),\n    \"optional\",\n    undefined,\n    [],\n    (property) => {\n      const specifier = property.name.split(\"-map\", 1)[0];\n\n      const issues: Issue<StandardTypeIssue>[] = [];\n      const node = property.parent;\n      const root = property.parent.root;\n      const childSpecifierCells = node.getProperty(`#${specifier}-cells`);\n\n      if (!childSpecifierCells) {\n        issues.push(\n          genIssue(\n            StandardTypeIssue.PROPERTY_REQUIRES_OTHER_PROPERTY_IN_NODE,\n            property.ast,\n            DiagnosticSeverity.Error,\n            [...node.nodeNameOrLabelRef],\n            [],\n            [\n              property.name,\n              `#${specifier}-cells`,\n              `/${node.path.slice(1).join(\"/\")}`,\n            ]\n          )\n        );\n        return issues;\n      }\n\n      const childSpecifierCellsValue = getU32ValueFromProperty(\n        childSpecifierCells,\n        0,\n        0\n      );\n\n      if (childSpecifierCellsValue == null) {\n        return issues;\n      }\n\n      const values = flatNumberValues(property.ast.values);\n      if (!values?.length) {\n        return [];\n      }\n\n      let i = 0;\n      let entryEndIndex = 0;\n      while (i < values.length) {\n        i += childSpecifierCellsValue;\n\n        if (values.length < i + 1) {\n          const expLen = childSpecifierCellsValue + 1;\n          issues.push(\n            genIssue(\n              StandardTypeIssue.MAP_ENTRY_INCOMPLETE,\n              values[values.length - 1],\n              DiagnosticSeverity.Error,\n              [],\n              [],\n              [\n                property.name,\n                `after the last value of ${[\n                  ...Array.from(\n                    { length: childSpecifierCellsValue },\n                    () => \"ChildSpecifier\"\n                  ),\n                  \"SpecifierParent ParentSpecifier...\",\n                ]\n                  .slice(\n                    (values.length - entryEndIndex) % expLen === 0\n                      ? expLen\n                      : (values.length - entryEndIndex) % expLen\n                  )\n                  .join(\" \")}`,\n              ]\n            )\n          );\n          break;\n        }\n        const specifierParent = resolvePhandleNode(values[i], root);\n        if (!specifierParent) {\n          issues.push(\n            genIssue(\n              StandardTypeIssue.INTERRUPTS_PARENT_NODE_NOT_FOUND,\n              values[i],\n              DiagnosticSeverity.Error\n            )\n          );\n          break;\n        }\n\n        const parentSpecifierAddress = specifierParent.getProperty(\n          `#${specifier}-cells`\n        );\n\n        if (!parentSpecifierAddress) {\n          issues.push(\n            genIssue(\n              StandardTypeIssue.PROPERTY_REQUIRES_OTHER_PROPERTY_IN_NODE,\n              values[i],\n              DiagnosticSeverity.Error,\n              [...specifierParent.nodeNameOrLabelRef],\n              [],\n              [\n                property.name,\n                `#${specifier}-cells`,\n                `/${node.path.slice(1).join(\"/\")}`,\n              ]\n            )\n          );\n          return issues;\n        }\n\n        i++;\n\n        const parentUnitAddressValue = getU32ValueFromProperty(\n          parentSpecifierAddress,\n          0,\n          0\n        );\n\n        if (parentUnitAddressValue == null) {\n          break;\n        }\n\n        i += parentUnitAddressValue;\n        if (values.length < i) {\n          const expLen = childSpecifierCellsValue + 1 + parentUnitAddressValue;\n          issues.push(\n            genIssue(\n              StandardTypeIssue.MAP_ENTRY_INCOMPLETE,\n              values[values.length - 1],\n              DiagnosticSeverity.Error,\n              [],\n              [],\n              [\n                property.name,\n                `after the last value of ${[\n                  ...Array.from(\n                    { length: childSpecifierCellsValue },\n                    () => \"ChildSpecifier\"\n                  ),\n                  \"InterruptParent\",\n                  ...Array.from(\n                    { length: parentUnitAddressValue },\n                    () => \"ParentSpecifier\"\n                  ),\n                ]\n                  .slice(\n                    (values.length - entryEndIndex) % expLen === 0\n                      ? expLen\n                      : (values.length - entryEndIndex) % expLen\n                  )\n                  .join(\" \")}`,\n              ]\n            )\n          );\n          break;\n        }\n        entryEndIndex = i;\n      }\n\n      return issues;\n    }\n  );\n  prop.desctiption = [\n    \"A `\u2039specifier>-map` is a property in a nexus node that bridges one specifier domain with a set of parent specifier domains and describes how specifiers in the child domain are mapped to their respective parent domains.\",\n    \"The map is a table where each row is a mapping entry consisting of three components: child specifier, specifier parent, and parent specifier.\",\n    \"- child specifier The specifier of the child node being mapped. The number of 32-bit cells required to specify this component is described by the `#<specifier>-cells` property of this node-the nexus node containing the \u2039specifier>-map property.\",\n    \"- Specifier parent A single <phandle > value that points to the specifier parent to which the child domain is being mapped.\",\n    \"- Parent specifier: The specifier in the parent domain. The number of 32-bit cells required to specify this component is described by the `#<specifier>-cells` property of the specifier parent node.\",\n    \"Lookups are performed on the mapping table by matching a specifier against the child specifier in the map. Because some fields in the specifier may not be relevant or need to be modified, a mask is applied before the lookup is done. This mask is defined in the `<specifier>-map-mask` property\",\n    \"Similarly, when the specifier is mapped, some fields in the unit specifier may need to be kept unmodified and passed through from the child node to the parent node. In this case, a `<specifier>-map-pass-thru` property may be specified to apply a mask to the child specifier and copy any bits that match to the parent unit specifier.\",\n  ];\n  prop.list = true;\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj } from \"./helpers\";\n\nexport default () => {\n  const prop = new PropertyNodeType((name) => {\n    if (name.startsWith(\"interrupt-\")) {\n      return false;\n    }\n\n    return !!name.match(/^[A-Z-a-z]+-map-mask$/);\n  }, generateOrTypeObj(PropertyType.PROP_ENCODED_ARRAY));\n\n  prop.desctiption = [\n    \"A `<specifier>-map-mask` property may be specified for a nexus node. This property specifies a mask that is ANDed with the child unit specifier being looked up in the table specified in the `<specifier>-map` property. If this propertyis notspecified, the maskis assumedto be a mask with all bits set.\",\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj } from \"./helpers\";\n\nexport default () => {\n  const prop = new PropertyNodeType((name) => {\n    if (name.startsWith(\"interrupt-\")) {\n      return false;\n    }\n\n    return !!name.match(/^[A-Z-a-z]+-map-pass-thru$/);\n  }, generateOrTypeObj(PropertyType.PROP_ENCODED_ARRAY));\n  prop.desctiption = [\n    \"A `<specifier>-map-pass-thru` property may be specified for a nexus node. This property specifies a mask that is applied to the child unit specifier being looked up in the table specified in the `<specifier>-map` property. Any matching bits in the child unit specifier are copied over to the parent specifier. If this property is not specified, the mask isassumedtobe amaskwithno bits set.\",\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyNodeType, PropertyType } from \"../types\";\nimport { generateOrTypeObj } from \"./helpers\";\n\nexport default () => {\n  const prop = new PropertyNodeType((name) => {\n    if (\n      name.startsWith(\"#address-\") ||\n      name.startsWith(\"#interrupt-\") ||\n      name.startsWith(\"#size-\")\n    ) {\n      return false;\n    }\n\n    return !!name.match(/^#[A-Z-a-z]+-cells$/);\n  }, generateOrTypeObj(PropertyType.U32));\n  prop.list = true;\n  prop.desctiption = [\n    \"The `#<specifier>-cells` propertydefines the number of cells required to encode a specifier for adomain.\",\n  ];\n  return prop;\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { type Node } from \"../context/node\";\nimport compatible from \"./standardTypes/compatible\";\nimport deviceType from \"./standardTypes/deviceType\";\nimport interruptCells from \"./standardTypes/interruptCells\";\nimport interruptController from \"./standardTypes/interruptController\";\nimport interruptParent from \"./standardTypes/interruptParent\";\nimport interrupts from \"./standardTypes/interrupts\";\nimport interruptsExtended from \"./standardTypes/interruptsExtended\";\nimport { NodeType } from \"./types\";\nimport dmaNoncoherent from \"./standardTypes/dmaNoncoherent\";\nimport dmaCoherent from \"./standardTypes/dmaCoherent\";\nimport dmaRanges from \"./standardTypes/dmaRanges\";\nimport ranges from \"./standardTypes/ranges\";\nimport virtualReg from \"./standardTypes/virtualReg\";\nimport reg from \"./standardTypes/reg\";\nimport sizeCells from \"./standardTypes/sizeCells\";\nimport addressCells from \"./standardTypes/addressCells\";\nimport status from \"./standardTypes/status\";\nimport phandle from \"./standardTypes/phandle\";\nimport model from \"./standardTypes/model\";\nimport name from \"./standardTypes/name\";\nimport interruptMap from \"./standardTypes/interruptMap\";\nimport interruptMapMask from \"./standardTypes/interruptMapMask\";\nimport nexusSpecifierMap from \"./standardTypes/nexusSpecifierMap\";\nimport nexusSpecifierMapMask from \"./standardTypes/nexusSpecifierMapMask\";\nimport nexusSpecifierMapPassThru from \"./standardTypes/nexusSpecifierMapPassThru\";\nimport nexusSpecifierCells from \"./standardTypes/nexusSpecifierCells\";\n\nexport function getStandardType() {\n  const standardType = new NodeType();\n  standardType.addProperty([\n    compatible(),\n    model(),\n    phandle(),\n    status(),\n    addressCells(),\n    sizeCells(),\n    reg(),\n    virtualReg(),\n    ranges(),\n    dmaRanges(),\n    dmaCoherent(),\n    dmaNoncoherent(),\n    name(),\n    deviceType(),\n    interrupts(),\n    interruptParent(),\n    interruptsExtended(),\n    interruptCells(),\n    interruptController(),\n    interruptMap(),\n    interruptMapMask(),\n    nexusSpecifierMap(),\n    nexusSpecifierMapMask(),\n    nexusSpecifierMapPassThru(),\n    nexusSpecifierCells(),\n  ]);\n  return standardType;\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DtcProperty } from \"../ast/dtc/property\";\nimport { ContextIssues, Issue, SearchableResult } from \"../types\";\nimport {\n  DiagnosticSeverity,\n  DiagnosticTag,\n  Position,\n} from \"vscode-languageserver\";\nimport { getDeepestAstNodeInBetween } from \"../helpers\";\nimport { LabelAssign } from \"../ast/dtc/label\";\nimport { type Node } from \"./node\";\n\nexport class Property {\n  replaces?: Property;\n  replacedBy?: Property;\n  constructor(public readonly ast: DtcProperty, public readonly parent: Node) {}\n\n  getDeepestAstNode(\n    file: string,\n    position: Position\n  ): Omit<SearchableResult, \"runtime\"> {\n    return {\n      item: this,\n      ast: getDeepestAstNodeInBetween(this.ast, file, position),\n    };\n  }\n\n  get name() {\n    return this.ast.propertyName?.name ?? \"[UNSET]\";\n  }\n\n  get labels(): LabelAssign[] {\n    return this.ast.allDescendants.filter(\n      (c) => c instanceof LabelAssign\n    ) as LabelAssign[];\n  }\n\n  get labelsMapped(): {\n    label: LabelAssign;\n    owner: Property | null;\n  }[] {\n    return this.labels.map((l) => ({\n      label: l,\n      owner: this.ast.labels.some((ll) => ll === l) ? this : null,\n    }));\n  }\n\n  get issues(): Issue<ContextIssues>[] {\n    return this.replacedIssues;\n  }\n\n  get replacedIssues(): Issue<ContextIssues>[] {\n    return [\n      ...(this.replaces?.replacedIssues ?? []),\n      ...(this.replaces\n        ? [\n            {\n              issues: [ContextIssues.DUPLICATE_PROPERTY_NAME],\n              severity: DiagnosticSeverity.Hint,\n              astElement: this.replaces.ast,\n              linkedTo: [this.ast],\n              tags: [DiagnosticTag.Unnecessary],\n              templateStrings: [this.name],\n            },\n          ]\n        : []),\n    ];\n  }\n\n  get allReplaced(): Property[] {\n    return this.replaces ? [this.replaces, ...this.replaces.allReplaced] : [];\n  }\n\n  toString() {\n    return this.ast.toString();\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SymbolKind } from \"vscode-languageserver\";\nimport { ASTBase } from \"../base\";\nimport { BuildSemanticTokensPush, TokenIndexes } from \"../../types\";\nimport { LabelRef } from \"./labelRef\";\nimport { getTokenModifiers, getTokenTypes } from \"../../helpers\";\nimport { Node } from \"../../context/node\";\n\nexport class LabelAssign extends ASTBase {\n  public lastLinkedTo?: Node;\n\n  constructor(public readonly label: Label, tokenIndex: TokenIndexes) {\n    super(tokenIndex);\n    this.docSymbolsMeta = {\n      name: this.label.value,\n      kind: SymbolKind.Constant,\n    };\n    this.semanticTokenType = \"variable\";\n    this.semanticTokenModifiers = \"declaration\";\n    this.addChild(label);\n  }\n\n  toString() {\n    return `${this.label.value}:`;\n  }\n}\n\nexport class Label extends ASTBase {\n  constructor(public readonly value: string, tokenIndex: TokenIndexes) {\n    super(tokenIndex);\n    this.docSymbolsMeta = {\n      name: this.value,\n      kind: SymbolKind.Variable,\n    };\n    this.semanticTokenType = \"variable\";\n    this.semanticTokenModifiers = \"declaration\";\n  }\n\n  buildSemanticTokens(push: BuildSemanticTokensPush): void {\n    const parent = this.parentNode;\n    if (!(parent instanceof LabelRef && parent.linksTo)) {\n      super.buildSemanticTokens(push);\n      return;\n    }\n\n    push(getTokenTypes(\"type\"), getTokenModifiers(\"declaration\"), {\n      start: this.firstToken,\n      end: this.lastToken,\n    });\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DtcBaseNode, DtcRefNode, DtcRootNode } from \"../ast/dtc/node\";\nimport {\n  ContextIssues,\n  Issue,\n  Searchable,\n  SearchableResult,\n  StandardTypeIssue,\n} from \"../types\";\nimport { Property } from \"./property\";\nimport { DeleteNode } from \"../ast/dtc/deleteNode\";\nimport {\n  genIssue,\n  getDeepestAstNodeInBetween,\n  isLastTokenOnLine,\n  positionInBetween,\n  sortAstForScope,\n} from \"../helpers\";\nimport { DiagnosticSeverity, Position } from \"vscode-languageserver\";\nimport { LabelAssign } from \"../ast/dtc/label\";\nimport { Node } from \"./node\";\nimport { getTokenizedDocumentProvider } from \"../providers/tokenizedDocument\";\nimport { BindingLoader } from \"../dtsTypes/bindings/bindingLoader\";\n\nexport class Runtime implements Searchable {\n  public roots: DtcRootNode[] = [];\n  public references: DtcRefNode[] = [];\n  public unlinkedDeletes: DeleteNode[] = [];\n  public unlinkedRefNodes: DtcRefNode[] = [];\n  public globalDeletes: DeleteNode[] = [];\n  public rootNode: Node = new Node(this.bindingLoader, \"/\");\n\n  constructor(public readonly bindingLoader: BindingLoader) {}\n\n  public labelsUsedCache = new Map<string, string[]>();\n\n  getDeepestAstNode(\n    file: string,\n    position: Position\n  ): SearchableResult | undefined {\n    const dtcNode = [\n      ...this.roots,\n      ...this.references,\n      ...this.unlinkedDeletes,\n      ...this.unlinkedRefNodes,\n      ...this.globalDeletes,\n    ].find(\n      (i) =>\n        positionInBetween(i, file, position) ||\n        isLastTokenOnLine(\n          getTokenizedDocumentProvider().requestTokens(file, false),\n          i,\n          position\n        )\n    );\n\n    if (dtcNode instanceof DtcRefNode) {\n      const refByNode = this.rootNode.getReferenceBy(dtcNode);\n      const result = refByNode?.getDeepestAstNode(file, position);\n      if (result) {\n        return { ...result, runtime: this };\n      }\n      return {\n        item: null,\n        runtime: this,\n        ast: getDeepestAstNodeInBetween(dtcNode, file, position),\n      };\n    } else if (dtcNode instanceof DtcRootNode && dtcNode.path) {\n      const result = this.rootNode.getDeepestAstNode(file, position);\n      return result ? { ...result, runtime: this } : undefined;\n    } else if (dtcNode) {\n      // unlinkedDeletes\n      return {\n        runtime: this,\n        item: null,\n        ast: getDeepestAstNodeInBetween(dtcNode, file, position),\n      };\n    }\n\n    return;\n  }\n\n  resolvePath(path: string[], allLabels?: LabelAssign[]): string[] | undefined {\n    if (!path.at(0)?.startsWith(\"&\")) {\n      return path;\n    }\n\n    const fromCache = this.labelsUsedCache.get(path[0].slice(1));\n    if (fromCache) {\n      return fromCache;\n    }\n\n    allLabels ??= this.rootNode.allDescendantsLabels;\n\n    const label = allLabels.find(\n      (l) =>\n        l.label.value === path.at(0)?.slice(1) &&\n        l.parentNode instanceof DtcBaseNode\n    );\n\n    return label?.lastLinkedTo?.path;\n  }\n\n  get issues(): Issue<ContextIssues>[] {\n    return [...this.labelIssues(), ...this.rootNode.issues];\n  }\n\n  private labelIssues() {\n    const issues: Issue<ContextIssues>[] = [];\n\n    const lablesUsed = new Map<\n      string,\n      {\n        label: LabelAssign;\n        owner: Property | Node | null;\n        skip?: boolean;\n      }[]\n    >();\n\n    this.rootNode.allDescendantsLabelsMapped.forEach((item) => {\n      if (!lablesUsed.has(item.label.label.value)) {\n        lablesUsed.set(item.label.label.value, [item]);\n      } else {\n        lablesUsed.get(item.label.label.value)?.push(item);\n      }\n    });\n\n    Array.from(lablesUsed).forEach((pair) => {\n      const otherOwners = pair[1];\n      if (otherOwners.length > 1) {\n        const firstLabeledNode = otherOwners.find(\n          (o) => o.owner instanceof Node\n        );\n\n        const allSameOwner = otherOwners.every(\n          (owner) => owner && owner.owner === firstLabeledNode?.owner\n        );\n\n        if (!allSameOwner || !firstLabeledNode) {\n          const conflits = otherOwners.filter(\n            (owner) => !(owner && owner.owner === firstLabeledNode?.owner)\n          );\n\n          issues.push(\n            genIssue(\n              ContextIssues.LABEL_ALREADY_IN_USE,\n              otherOwners.at(0)!.label,\n              DiagnosticSeverity.Error,\n              otherOwners.slice(1).map((o) => o.label),\n              [],\n              [otherOwners.at(0)!.label.label.value]\n            )\n          );\n        }\n      }\n    });\n\n    return issues;\n  }\n\n  get typesIssues() {\n    const getIssue = (node: Node): Issue<StandardTypeIssue>[] => {\n      return [\n        ...(node.nodeTypes.at(0)?.getIssue(this, node) ?? []),\n        ...node.nodes.flatMap((n) => getIssue(n)),\n      ];\n    };\n\n    return getIssue(this.rootNode);\n  }\n\n  getOrderedNodeAst(node: Node) {\n    return sortAstForScope([...node.definitions, ...node.referencedBy]);\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { readFileSync } from \"fs\";\nimport { Token } from \"../types\";\nimport { Lexer } from \"../lexer\";\n\nlet tokenizedDocumentProvider: TokenizedDocumentProvider | undefined;\n\nclass TokenizedDocumentProvider {\n  private fileMap = new Map<string, Lexer>();\n\n  renewLexer(uri: string, text?: string): Token[] {\n    text ??= readFileSync(uri).toString();\n    const lexer = new Lexer(text);\n    this.fileMap.set(uri, lexer);\n    return [...lexer.tokens];\n  }\n\n  requestTokens(uri: string, renewIfNotFound: boolean): Token[] {\n    const tokens = this.fileMap.get(uri)?.tokens;\n    if (!tokens && renewIfNotFound) {\n      return [...this.renewLexer(uri)];\n    }\n    return [...(tokens ?? [])];\n  }\n}\n\nexport function getTokenizedDocumentProvider(): TokenizedDocumentProvider {\n  tokenizedDocumentProvider ??= new TokenizedDocumentProvider();\n  return tokenizedDocumentProvider;\n}\n\nexport function resetTokenizedDocumentProvider() {\n  tokenizedDocumentProvider = new TokenizedDocumentProvider();\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LexerToken, Position, Token } from \"./types\";\n\nexport class Lexer {\n  inComment = false;\n  lineNumber = 0;\n  columnNumber = 0;\n  lines: string[];\n  lineNumberOfEscapedChars = 0;\n  numberOfEscapedCharsLastString = 0;\n  private _tokens: Token[] = [];\n\n  get tokens() {\n    return this._tokens;\n  }\n\n  constructor(private text: string) {\n    this.lines = this.text\n      .replace(\"\\r\\n\", \"\\n\")\n      .split(/\\n/)\n      .map((line) => `${line}\\n`);\n    this.lines[this.lines.length - 1] = this.lines[this.lines.length - 1].slice(\n      0,\n      -1\n    );\n    if (text.endsWith(\"\\n\")) {\n      this.lines.splice(-1, 1);\n    }\n    this.lexIt();\n  }\n\n  private isWhiteSpace() {\n    return !!this.currentChar?.match(/\\s/);\n  }\n\n  get endOfFile() {\n    return this.isOnLastLine && this.isOnLastCharOfLine;\n  }\n\n  get isOnLastLine() {\n    return this.lineNumber === this.lines.length - 1;\n  }\n\n  get isOnLastCharOfLine() {\n    return this.lines[this.lineNumber].length <= this.columnNumber;\n  }\n\n  private moveToNextLine() {\n    if (this.isOnLastLine) return false;\n\n    this.columnNumber = 0;\n    this.lineNumberOfEscapedChars = 0;\n    this.lineNumber++;\n\n    if (this.lines[this.lineNumber].length === 0) {\n      this.moveToNextLine();\n    }\n\n    return true;\n  }\n\n  private moveOnLine() {\n    if (this.isOnLastCharOfLine) {\n      return this.moveToNextLine();\n    }\n\n    this.columnNumber++;\n\n    if (this.isOnLastCharOfLine) {\n      this.moveToNextLine();\n    }\n    return true;\n  }\n\n  private move(): boolean {\n    if (this.endOfFile) return false;\n\n    return this.moveOnLine();\n  }\n\n  private get currentChar() {\n    return this.endOfFile\n      ? null\n      : this.lines[this.lineNumber].at(this.columnNumber);\n  }\n  static isSyntaxChar(char?: string | null) {\n    return (\n      char === \"^\" ||\n      char === \"~\" ||\n      char === \"|\" ||\n      char === \"!\" ||\n      char === \"\\\\\" ||\n      char === \"<\" ||\n      char === \">\" ||\n      char === \";\" ||\n      char === \"=\" ||\n      char === \"/\" ||\n      char === \"{\" ||\n      char === \"}\" ||\n      char === \"[\" ||\n      char === \"]\" ||\n      char === \"(\" ||\n      char === \")\" ||\n      char === \"*\" ||\n      char === \"%\" ||\n      char === \"&\" ||\n      char === \".\" ||\n      char === \":\" ||\n      char === \"+\" ||\n      char === \"@\" ||\n      char === \"-\" ||\n      char === \"_\" ||\n      char === \",\" ||\n      char === \"x\" ||\n      char === \"?\"\n    );\n  }\n  private getWord(): string {\n    let word = \"\";\n    while (\n      !this.isWhiteSpace() &&\n      ((word.length && !Lexer.isSyntaxChar(this.currentChar)) || !word.length)\n    ) {\n      word += this.currentChar ?? \"\";\n\n      if (word.length === 1 && Lexer.isSyntaxChar(this.currentChar)) {\n        this.move();\n        break;\n      }\n\n      const currLine = this.lineNumber;\n\n      if (!this.move() || this.lineNumber !== currLine) {\n        return word;\n      }\n    }\n\n    if (word === \"/\" && this.currentChar === \"*\") {\n      this.inComment = true;\n    } else if (this.inComment && word === \"*\" && this.currentChar === \"/\") {\n      this.inComment = false;\n    }\n\n    return word;\n  }\n\n  private getString(quote: string): string {\n    let string = quote;\n    this.numberOfEscapedCharsLastString = 0;\n\n    while (this.currentChar !== quote) {\n      string += this.currentChar ?? \"\";\n      if (this.currentChar === \"\\\\\") {\n        const prevLine = this.lineNumber;\n        if (this.move()) {\n          this.lineNumberOfEscapedChars++;\n          this.numberOfEscapedCharsLastString++;\n          if (prevLine === this.lineNumber) {\n            // escaped char\n            string += this.currentChar ?? \"\";\n          }\n        } else {\n          return string;\n        }\n      }\n\n      if (!this.move()) {\n        // EOF\n        return string;\n      }\n    }\n\n    this.move();\n\n    string += quote;\n    return string;\n  }\n\n  private lexIt() {\n    while (!this.endOfFile) {\n      this.whiteSpace();\n\n      if (this.endOfFile) {\n        break;\n      }\n\n      const word = this.getWord();\n      if (word) {\n        this.process(word);\n      }\n    }\n  }\n\n  private process(word: string): boolean {\n    // order is important!!\n    const tokenFound =\n      this.isString(word) ||\n      // -----\n      this.isCDefine(word) ||\n      this.isCInclude(word) ||\n      this.isCLine(word) ||\n      this.isCUndef(word) ||\n      this.isCError(word) ||\n      this.isCPragma(word) ||\n      this.isCDefined(word) ||\n      this.isCIfDef(word) ||\n      this.isCIfNDef(word) ||\n      this.isCIf(word) ||\n      this.isCElIf(word) ||\n      this.isCElse(word) ||\n      this.isCEndIf(word) ||\n      this.isCFalse(word) ||\n      this.isCTrue(word) ||\n      this.isDigit(word) ||\n      this.isHexDigit(word) ||\n      this.isLetters(word) ||\n      // single char words\n      this.isComma(word) ||\n      this.isBitwiseNot(word) ||\n      this.isBitwiseXOr(word) ||\n      this.isBitwiseOr(word) ||\n      this.isLogicalNot(word) ||\n      this.isGtSym(word) ||\n      this.isLtSym(word) ||\n      this.isSemicolon(word) ||\n      this.isColon(word) ||\n      this.isAssignOperator(word) ||\n      this.isForwardSlash(word) ||\n      this.isRoundOpen(word) ||\n      this.isRoundClose(word) ||\n      this.isCurlyOpen(word) ||\n      this.isCurlyClose(word) ||\n      this.isSquareOpen(word) ||\n      this.isSquareClose(word) ||\n      this.isBackSlash(word) ||\n      this.isMultiplicationOperator(word) ||\n      this.isModulusOperator(word) ||\n      this.isAmpersand(word) ||\n      this.isNegateOperator(word) ||\n      this.isAddOperator(word) ||\n      this.isQuestionMark(word) ||\n      this.isPeriod(word) ||\n      this.isHash(word) ||\n      this.isUnderScore(word) ||\n      this.isAt(word) ||\n      this.unknownToken(word);\n\n    if (!tokenFound) {\n      throw new Error(\n        `Lexer is not complete!!! Could not find token for \"${word}\"`\n      );\n    }\n\n    const token = this._tokens.at(-1);\n    if (\n      tokenFound &&\n      !token?.tokens.some((t) => t === LexerToken.STRING) &&\n      token &&\n      token.pos.len < word.length\n    ) {\n      return this.process(word.slice(token.pos.len));\n    }\n\n    return true;\n  }\n\n  private whiteSpace() {\n    while (this.isWhiteSpace()) {\n      this.move();\n    }\n  }\n\n  private pushToken(token: Token) {\n    const prevToken = this._tokens.at(-1);\n\n    token.prevToken = prevToken;\n\n    if (prevToken) {\n      prevToken.nextToken = token;\n    }\n\n    this._tokens.push(token);\n  }\n\n  private isLetters(word: string) {\n    const match = word.match(/^[A-Za-z]+/);\n    if (match?.[0]) {\n      this.pushToken({\n        tokens: [LexerToken.LETTERS],\n        value: match?.[0],\n        pos: this.generatePos(word, match?.[0]),\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isDigit(word: string) {\n    const match = word.match(/^[0-9]/);\n    if (match?.[0]) {\n      this.pushToken({\n        tokens: [LexerToken.HEX, LexerToken.DIGIT],\n        value: match[0],\n        pos: this.generatePos(word, match[0]),\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isHexDigit(word: string) {\n    const match = word.match(/^[A-Fa-f]/);\n    if (match?.[0]) {\n      this.pushToken({\n        tokens: [LexerToken.HEX, LexerToken.LETTERS],\n        value: match[0],\n        pos: this.generatePos(word, match[0]),\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isCurlyOpen(word: string) {\n    const expected = \"{\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.CURLY_OPEN],\n        pos: this.generatePos(word, expected),\n        value: \"{\",\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isCurlyClose(word: string) {\n    const expected = \"}\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.CURLY_CLOSE],\n        pos: this.generatePos(word, expected),\n        value: \"}\",\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isSemicolon(word: string) {\n    const expected = \";\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.SEMICOLON],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isColon(word: string) {\n    const expected = \":\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.COLON],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isHash(word: string) {\n    const expected = \"#\";\n    if (word.startsWith(expected)) {\n      this.pushToken({\n        tokens: [LexerToken.HASH],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private unknownToken(word: string) {\n    this.pushToken({\n      tokens: [LexerToken.UNKNOWN],\n      pos: this.generatePos(word, \" \"),\n      value: word,\n    });\n    return true;\n  }\n\n  private isAssignOperator(word: string) {\n    const expected = \"=\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.ASSIGN_OPERATOR],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isGtSym(word: string) {\n    const expected = \">\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.GT_SYM],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isLtSym(word: string) {\n    const expected = \"<\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.LT_SYM],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isLogicalNot(word: string) {\n    const expected = \"!\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.LOGICAL_NOT],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isBitwiseOr(word: string) {\n    const expected = \"|\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.BIT_OR],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isBitwiseXOr(word: string) {\n    const expected = \"^\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.BIT_XOR],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isAmpersand(word: string) {\n    const expected = \"&\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.AMPERSAND, LexerToken.BIT_AND],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isBitwiseNot(word: string) {\n    const expected = \"~\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.BIT_NOT],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isRoundOpen(word: string) {\n    const expected = \"(\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.ROUND_OPEN],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n\n      return true;\n    }\n    return false;\n  }\n\n  private isRoundClose(word: string) {\n    const expected = \")\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.ROUND_CLOSE],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isSquareOpen(word: string) {\n    const expected = \"[\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.SQUARE_OPEN],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isSquareClose(word: string) {\n    const expected = \"]\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.SQUARE_CLOSE],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isComma(word: string) {\n    const expected = \",\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.COMMA],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private rewind(word: string) {\n    // word is always on the same line so if col < word len throw\n    if (this.columnNumber + 1 < word.length) {\n      throw new Error(\"Error while rewinding\");\n    }\n\n    this.columnNumber -= word.length;\n  }\n\n  private isString(word: string) {\n    if (this.inComment) return false;\n\n    const match = word.match(/^[\"']/);\n    if (match?.[0]) {\n      // rewind to beginning of string just after \"\n      this.rewind(word.slice(1));\n      const line = this.lineNumber;\n      const col = this.columnNumber;\n      const string = this.getString(match[0]);\n      this.pushToken({\n        tokens: [LexerToken.STRING],\n        value: string,\n        pos: {\n          col: col - 1, // we have already moved ....\n          line,\n          len: string.length + this.numberOfEscapedCharsLastString,\n        },\n      });\n\n      return true;\n    }\n    return false;\n  }\n\n  private isForwardSlash(word: string) {\n    const expected = \"/\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.FORWARD_SLASH],\n        pos: this.generatePos(word, expected),\n        value: \"/\",\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isBackSlash(word: string) {\n    const expected = \"\\\\\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.BACK_SLASH],\n        pos: this.generatePos(word, expected),\n        value: \"\\\\\",\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isAddOperator(word: string) {\n    const expected = \"+\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.ADD_OPERATOR],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isQuestionMark(word: string) {\n    const expected = \"?\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.QUESTION_MARK],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isPeriod(word: string) {\n    const expected = \".\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.PERIOD],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isNegateOperator(word: string) {\n    const expected = \"-\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.NEG_OPERATOR],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isUnderScore(word: string) {\n    const expected = \"_\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.UNDERSCORE],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isAt(word: string) {\n    const expected = \"@\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.AT],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isMultiplicationOperator(word: string) {\n    const expected = \"*\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.MULTI_OPERATOR],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isModulusOperator(word: string) {\n    const expected = \"%\";\n    if (word === expected) {\n      this.pushToken({\n        tokens: [LexerToken.MODULUS_OPERATOR],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isCDefine(word: string) {\n    const expected = \"#define\";\n    if (word.toLowerCase() === expected) {\n      this.pushToken({\n        tokens: [LexerToken.C_DEFINE],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isCInclude(word: string) {\n    const expected = \"#include\";\n    if (word.toLowerCase() === expected) {\n      this.pushToken({\n        tokens: [LexerToken.C_INCLUDE],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isCLine(word: string) {\n    const expected = \"#line\";\n    if (word.toLowerCase() === expected) {\n      this.pushToken({\n        tokens: [LexerToken.C_LINE],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isCUndef(word: string) {\n    const expected = \"#undef\";\n    if (word.toLowerCase() === expected) {\n      this.pushToken({\n        tokens: [LexerToken.C_UNDEF],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isCError(word: string) {\n    const expected = \"#error\";\n    if (word.toLowerCase() === expected) {\n      this.pushToken({\n        tokens: [LexerToken.C_ERROR],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isCPragma(word: string) {\n    const expected = \"#pragma\";\n    if (word.toLowerCase() === expected) {\n      this.pushToken({\n        tokens: [LexerToken.C_PRAGMA],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isCDefined(word: string) {\n    const expected = \"#defined\";\n    if (word.toLowerCase() === expected) {\n      this.pushToken({\n        tokens: [LexerToken.C_DEFINED],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isCIf(word: string) {\n    const expected = \"#if\";\n    if (word.toLowerCase() === expected) {\n      this.pushToken({\n        tokens: [LexerToken.C_IF],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isCIfDef(word: string) {\n    const expected = \"#ifdef\";\n    if (word.toLowerCase() === expected) {\n      this.pushToken({\n        tokens: [LexerToken.C_IFDEF],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isCIfNDef(word: string) {\n    const expected = \"#ifndef\";\n    if (word.toLowerCase() === expected) {\n      this.pushToken({\n        tokens: [LexerToken.C_IFNDEF],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isCElIf(word: string) {\n    const expected = \"#elif\";\n    if (word.toLowerCase() === expected) {\n      this.pushToken({\n        tokens: [LexerToken.C_ELIF],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isCElse(word: string) {\n    const expected = \"#else\";\n    if (word.toLowerCase() === expected) {\n      this.pushToken({\n        tokens: [LexerToken.C_ELSE],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isCEndIf(word: string) {\n    const expected = \"#endif\";\n    if (word.toLowerCase() === expected) {\n      this.pushToken({\n        tokens: [LexerToken.C_ENDIF],\n        pos: this.generatePos(word, expected),\n        value: expected,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isCTrue(word: string) {\n    const expects = \"true\";\n    if (word == expects) {\n      this.pushToken({\n        tokens: [LexerToken.C_TRUE],\n        value: expects,\n        pos: this.generatePos(word, expects),\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private isCFalse(word: string) {\n    const expects = \"false\";\n    if (word == expects) {\n      this.pushToken({\n        tokens: [LexerToken.C_FALSE],\n        value: expects,\n        pos: this.generatePos(word, expects),\n      });\n      return true;\n    }\n    return false;\n  }\n\n  private generatePos(word: string, expected: string): Position {\n    return {\n      line: this.lineNumber,\n      col: this.columnNumber - word.length + this.lineNumberOfEscapedChars,\n      len: expected.length,\n    };\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TokenIndexes } from \"../types\";\nimport { ASTBase } from \"./base\";\n\nexport class Keyword extends ASTBase {\n  constructor(tokenIndexes?: TokenIndexes) {\n    super(tokenIndexes);\n    this.semanticTokenType = \"keyword\";\n    this.semanticTokenModifiers = \"declaration\";\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ASTBase } from \"../../base\";\nimport { SymbolKind } from \"vscode-languageserver\";\nimport { LabelAssign } from \"../label\";\nimport { PropertyValue } from \"./value\";\n\nexport class PropertyValues extends ASTBase {\n  constructor(\n    public readonly values: (PropertyValue | null)[],\n    public readonly labels: LabelAssign[]\n  ) {\n    super();\n    this.docSymbolsMeta = {\n      name: \"Values\",\n      kind: SymbolKind.String,\n    };\n    this.labels.forEach((label) => {\n      this.addChild(label);\n    });\n    this.values.forEach((value) => this.addChild(value));\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ASTBase } from '../base';\nimport { Keyword } from '../keyword';\nimport { SymbolKind } from 'vscode-languageserver';\n\nexport class DtsDocumentVersion extends ASTBase {\n\tconstructor(public readonly keyword: Keyword) {\n\t\tsuper();\n\t\tthis.addChild(keyword);\n\t\tthis.docSymbolsMeta = {\n\t\t\tname: 'DTS Douument version',\n\t\t\tkind: SymbolKind.Function,\n\t\t};\n\t}\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ASTBase } from \"../../base\";\nimport { LabelAssign } from \"../label\";\n\nexport class LabeledValue<T extends ASTBase> extends ASTBase {\n  constructor(\n    public readonly value: T | null,\n    public readonly labels: LabelAssign[]\n  ) {\n    super();\n    this.labels.forEach((label) => {\n      this.addChild(label);\n    });\n    this.addChild(this.value);\n  }\n\n  toString() {\n    return `${this.labels.map((l) => l.toString()).join(\" \")}${\n      this.value?.toString() ?? \"NULL\"\n    }`;\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocumentSymbol, SymbolKind } from \"vscode-languageserver\";\nimport { CIdentifier } from \"./cIdentifier\";\nimport { Expression } from \"./expression\";\nimport { toRange } from \"../../helpers\";\nimport { TokenIndexes } from \"../../types\";\n\nexport class CMacroCallParam extends Expression {\n  constructor(\n    public readonly value: string,\n    tokenIndexes: TokenIndexes,\n    index: number\n  ) {\n    super(tokenIndexes);\n    this.docSymbolsMeta = {\n      name: `param${index + 1}`,\n      kind: SymbolKind.Variable,\n    };\n    this.semanticTokenType = \"variable\";\n    this.semanticTokenModifiers = \"declaration\";\n  }\n}\n\nexport class CMacroCall extends Expression {\n  constructor(\n    public readonly functionName: CIdentifier,\n    public readonly params: CMacroCallParam[]\n  ) {\n    super();\n    this.addChild(functionName);\n    this.params.forEach((p) => this.addChild(p));\n  }\n\n  getDocumentSymbols(): DocumentSymbol[] {\n    return [\n      {\n        name: this.functionName.name,\n        kind: SymbolKind.Function,\n        range: toRange(this),\n        selectionRange: toRange(this),\n        children: this.params.flatMap((p) => p.getDocumentSymbols()),\n      },\n    ];\n  }\n\n  toString() {\n    return `${this.functionName.toString()}(${this.params\n      .map((p) => p.toString())\n      .join(\",\")})`;\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SymbolKind } from \"vscode-languageserver\";\nimport { Expression } from \"./expression\";\nimport { TokenIndexes } from \"../../types\";\n\nexport class CIdentifier extends Expression {\n  constructor(public readonly name: string, tokenIndexes: TokenIndexes) {\n    super(tokenIndexes);\n    this.docSymbolsMeta = {\n      name: this.name.toString(),\n      kind: SymbolKind.Variable,\n    };\n    this.semanticTokenType = \"macro\";\n    this.semanticTokenModifiers = \"declaration\";\n  }\n\n  toString() {\n    return this.name;\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TokenIndexes } from \"../../types\";\nimport { ASTBase } from \"../base\";\n\nexport enum OperatorType {\n  BIT_AND = \"&\",\n  BIT_OR = \"|\",\n  BIT_NOT = \"!\",\n  BIT_XOR = \"^\",\n  BIT_RIGHT_SHIFT = \"<<\",\n  BIT_LEFT_SHIFT = \">>\",\n  ARITHMETIC_ADD = \"+\",\n  ARITHMETIC_DIVIDE = \"/\",\n  ARITHMETIC_MODULES = \"%\",\n  ARITHMETIC_MULTIPLE = \"*\",\n  ARITHMETIC_SUBTRACT = \"-\",\n  BOOLEAN_GT = \">\",\n  BOOLEAN_AND = \"&&\",\n  BOOLEAN_GT_EQUAL = \">=\",\n  BOOLEAN_LT_EQUAL = \"<=\",\n  BOOLEAN_NOT_EQ = \"==\",\n  BOOLEAN_OR = \"||\",\n  C_CONCAT = \"##\",\n}\n\nexport class Operator extends ASTBase {\n  constructor(\n    public readonly operator: OperatorType,\n    tokenIndexe: TokenIndexes\n  ) {\n    super(tokenIndexe);\n    this.semanticTokenType = \"operator\";\n    this.semanticTokenModifiers = \"declaration\";\n  }\n\n  toString() {\n    return this.operator;\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocumentSymbol, SemanticTokensBuilder } from \"vscode-languageserver\";\nimport { Issue, LexerToken, SyntaxIssue, Token, TokenIndexes } from \"./types\";\nimport {\n  adjacentTokens,\n  createTokenIndex,\n  genIssue,\n  validateToken,\n  validToken,\n} from \"./helpers\";\nimport { ASTBase } from \"./ast/base\";\nimport { Parser } from \"./parser\";\nimport { CIdentifier } from \"./ast/cPreprocessors/cIdentifier\";\nimport { Operator, OperatorType } from \"./ast/cPreprocessors/operator\";\n\nexport abstract class BaseParser {\n  positionStack: number[] = [];\n  issues: Issue<SyntaxIssue>[] = [];\n  childParsers: Parser[] = [];\n\n  protected parsing: Promise<void>;\n\n  public abstract get uri(): string;\n  public abstract get tokens(): Token[];\n  protected abstract parse(): Promise<void>;\n  public abstract reparse(): Promise<void>;\n\n  constructor() {\n    this.parsing = new Promise<void>((resolve) => {\n      setTimeout(() => {\n        this.parse().then(resolve);\n      });\n    });\n  }\n\n  protected reset() {\n    this.positionStack = [];\n    this.issues = [];\n    this.childParsers = [];\n  }\n\n  get allParsers(): Parser[] {\n    return this instanceof Parser\n      ? [this, ...this.childParsers.flatMap((p) => p.orderedParsers)]\n      : this.childParsers.flatMap((p) => p.orderedParsers);\n  }\n\n  get orderedParsers(): Parser[] {\n    return (\n      this instanceof Parser\n        ? [this, ...this.childParsers.flatMap((p) => p.orderedParsers)]\n        : this.childParsers.flatMap((p) => p.orderedParsers)\n    ).reverse();\n  }\n\n  get stable() {\n    return this.parsing;\n  }\n\n  get done() {\n    return this.peekIndex() >= this.tokens.length;\n  }\n\n  protected get moveToNextToken() {\n    const token = this.currentToken;\n    this.moveStackIndex();\n    return token;\n  }\n\n  protected enqueueToStack() {\n    this.positionStack.push(this.peekIndex());\n  }\n\n  protected popStack() {\n    this.positionStack.pop();\n  }\n\n  protected mergeStack() {\n    const value = this.positionStack.pop();\n\n    if (value === undefined) {\n      /* istanbul ignore next */\n      throw new Error(\"Index out of bounds\");\n    }\n\n    this.positionStack[this.positionStack.length - 1] = value;\n  }\n\n  protected peekIndex(depth = 1) {\n    const peek = this.positionStack.at(-1 * depth);\n    if (peek === undefined) {\n      /* istanbul ignore next */\n      throw new Error(\"Index out of bounds\");\n    }\n\n    return peek;\n  }\n\n  protected get currentToken() {\n    return this.tokens.at(this.peekIndex());\n  }\n\n  protected get prevToken() {\n    const index = this.peekIndex() - 1;\n    if (index === -1) {\n      return;\n    }\n\n    return this.tokens[index];\n  }\n\n  protected moveStackIndex() {\n    if (this.positionStack[this.positionStack.length - 1] === undefined) {\n      /* istanbul ignore next */\n      throw new Error(\"Index out of bounds\");\n    }\n\n    this.positionStack[this.positionStack.length - 1]++;\n  }\n\n  protected checkConcurrentTokens(\n    cmps: ((\n      token: Token | undefined,\n      index?: number\n    ) => \"yes\" | \"no\" | \"partial\")[]\n  ) {\n    this.enqueueToStack();\n\n    const tokens: Token[] = [];\n\n    cmps.every((cmp) => {\n      const token = this.currentToken;\n      const result = cmp(token);\n      let continueLoop = false;\n\n      if (result !== \"no\" && token) {\n        tokens.push(token);\n        this.moveToNextToken;\n        continueLoop = adjacentTokens(token, this.currentToken);\n      }\n      return result === \"yes\" && continueLoop;\n    });\n\n    this.mergeStack();\n    return tokens;\n  }\n\n  protected consumeAnyConcurrentTokens(\n    cmps: ((\n      token: Token | undefined,\n      index?: number\n    ) => \"yes\" | \"no\" | \"partial\")[]\n  ) {\n    this.enqueueToStack();\n\n    const tokens: Token[] = [];\n\n    let token: Token | undefined;\n    let continueLoop = true;\n    while (\n      cmps.some((cmp) => cmp(this.currentToken) === \"yes\" && continueLoop)\n    ) {\n      tokens.push(this.currentToken!);\n      token = this.currentToken;\n      this.moveToNextToken;\n      continueLoop = adjacentTokens(token, this.currentToken);\n    }\n\n    this.mergeStack();\n    return tokens;\n  }\n\n  abstract get allAstItems(): ASTBase[];\n\n  getDocumentSymbols(): DocumentSymbol[] {\n    return this.allAstItems.flatMap((o) => o.getDocumentSymbols());\n  }\n\n  buildSemanticTokens(tokensBuilder: SemanticTokensBuilder) {\n    const result: {\n      line: number;\n      char: number;\n      length: number;\n      tokenType: number;\n      tokenModifiers: number;\n    }[] = [];\n    const push = (\n      tokenType: number,\n      tokenModifiers: number,\n      tokenIndexes?: TokenIndexes\n    ) => {\n      if (!tokenIndexes?.start || !tokenIndexes?.end) return;\n\n      const lengthEnd =\n        tokenIndexes.end.pos.col -\n        tokenIndexes.start.pos.col +\n        tokenIndexes.end.pos.len;\n      result.push({\n        line: tokenIndexes.start.pos.line,\n        char: tokenIndexes.start.pos.col,\n        length:\n          tokenIndexes.end === tokenIndexes.start\n            ? tokenIndexes.end.pos.len\n            : lengthEnd,\n        tokenType,\n        tokenModifiers,\n      });\n    };\n\n    this.allAstItems.forEach((a) => a.buildSemanticTokens(push));\n\n    result\n      .sort((a, b) => (a.line === b.line ? a.char - b.char : a.line - b.line))\n      .forEach((r) =>\n        tokensBuilder.push(\n          r.line,\n          r.char,\n          r.length,\n          r.tokenType,\n          r.tokenModifiers\n        )\n      );\n  }\n\n  protected processCIdentifier(): CIdentifier | undefined {\n    this.enqueueToStack();\n\n    const valid = this.consumeAnyConcurrentTokens(\n      [LexerToken.DIGIT, LexerToken.LETTERS, LexerToken.UNDERSCORE].map(\n        validateToken\n      )\n    );\n\n    if (!valid.length) {\n      this.popStack();\n      return undefined;\n    }\n\n    const name = valid.map((v) => v.value).join(\"\");\n\n    if (!name.match(/^[_A-Za-z]/)) {\n      this.popStack();\n      return;\n    }\n\n    const identifier = new CIdentifier(\n      name,\n      createTokenIndex(valid[0], valid.at(-1))\n    );\n\n    this.mergeStack();\n    return identifier;\n  }\n\n  protected isOperator(): Operator | undefined {\n    this.enqueueToStack();\n    const start = this.moveToNextToken;\n\n    if (!start) {\n      this.popStack();\n      return;\n    }\n\n    let end = start;\n\n    let operator: OperatorType | undefined;\n    if (validToken(start, LexerToken.AMPERSAND)) {\n      operator = OperatorType.BIT_AND;\n      if (validToken(this.currentToken, LexerToken.AMPERSAND)) {\n        operator = OperatorType.BOOLEAN_AND;\n        end = this.moveToNextToken;\n      }\n    } else if (validToken(start, LexerToken.BIT_NOT)) {\n      operator = OperatorType.BIT_NOT;\n      if (validToken(this.currentToken, LexerToken.ASSIGN_OPERATOR)) {\n        operator = OperatorType.BOOLEAN_NOT_EQ;\n        end = this.moveToNextToken;\n      }\n    } else if (validToken(start, LexerToken.BIT_OR)) {\n      operator = OperatorType.BIT_OR;\n      if (validToken(this.currentToken, LexerToken.BIT_OR)) {\n        operator = OperatorType.BOOLEAN_OR;\n        end = this.moveToNextToken;\n      }\n    } else if (validToken(start, LexerToken.BIT_XOR)) {\n      operator = OperatorType.BIT_XOR;\n    } else if (validToken(start, LexerToken.GT_SYM)) {\n      operator = OperatorType.BOOLEAN_GT;\n      if (validToken(this.currentToken, LexerToken.GT_SYM)) {\n        operator = OperatorType.BIT_RIGHT_SHIFT;\n        end = this.moveToNextToken;\n      } else if (validToken(this.currentToken, LexerToken.ASSIGN_OPERATOR)) {\n        operator = OperatorType.BOOLEAN_GT_EQUAL;\n        end = this.moveToNextToken;\n      }\n    } else if (validToken(start, LexerToken.LT_SYM)) {\n      operator = OperatorType.BOOLEAN_GT;\n      if (validToken(this.currentToken, LexerToken.LT_SYM)) {\n        operator = OperatorType.BIT_LEFT_SHIFT;\n        end = this.moveToNextToken;\n      } else if (validToken(this.currentToken, LexerToken.ASSIGN_OPERATOR)) {\n        operator = OperatorType.BOOLEAN_LT_EQUAL;\n        end = this.moveToNextToken;\n      }\n    } else if (validToken(start, LexerToken.ADD_OPERATOR)) {\n      operator = OperatorType.ARITHMETIC_ADD;\n    } else if (validToken(start, LexerToken.NEG_OPERATOR)) {\n      operator = OperatorType.ARITHMETIC_SUBTRACT;\n    } else if (validToken(start, LexerToken.MULTI_OPERATOR)) {\n      operator = OperatorType.ARITHMETIC_MULTIPLE;\n    } else if (validToken(start, LexerToken.FORWARD_SLASH)) {\n      operator = OperatorType.ARITHMETIC_DIVIDE;\n    } else if (validToken(start, LexerToken.MODULUS_OPERATOR)) {\n      operator = OperatorType.ARITHMETIC_MODULES;\n    } else if (validToken(start, LexerToken.HASH)) {\n      if (validToken(this.currentToken, LexerToken.HASH)) {\n        operator = OperatorType.C_CONCAT;\n        end = this.moveToNextToken;\n      }\n    }\n\n    if (operator) {\n      const node = new Operator(operator, createTokenIndex(start, end));\n      this.mergeStack();\n      return node;\n    }\n    this.popStack();\n    return;\n  }\n\n  protected parseScopedBlock(\n    isOpen: (token?: Token) => boolean,\n    isClose: (token?: Token) => boolean,\n    isSplit?: (token?: Token) => boolean\n  ): Block | undefined {\n    this.enqueueToStack();\n\n    const start = this.moveToNextToken;\n    if (!start || !isOpen(start)) {\n      this.popStack();\n      return;\n    }\n\n    const items: BlockItem[] = [];\n    const split: Token[][] = [];\n    split[0] = [];\n\n    while (!isClose(this.currentToken)) {\n      const token = this.moveToNextToken;\n\n      if (isSplit?.(token)) {\n        split[split.length] = [];\n      }\n\n      if (token) {\n        items.push(token);\n        split[split.length - 1].push(token);\n      }\n\n      if (isOpen(this.currentToken)) {\n        const nestedBlock = this.parseScopedBlock(isOpen, isClose, isSplit);\n        if (nestedBlock) {\n          items.push(nestedBlock);\n          split[split.length - 1].push(\n            nestedBlock.startToken,\n            ...nestedBlock.splitTokens.flat(),\n            nestedBlock.endToken\n          );\n        }\n      }\n    }\n\n    const end = this.moveToNextToken;\n\n    const block: Block = {\n      startToken: start,\n      items,\n      splitTokens: split,\n      endToken: end,\n    };\n\n    this.mergeStack();\n    return block;\n  }\n\n  protected moveEndOfLine = (line: number, report = true) => {\n    if (this.currentToken?.pos.line !== line) {\n      return;\n    }\n\n    const start = this.currentToken;\n    let end: Token | undefined = start;\n    while (this.currentToken?.pos.line === line) {\n      end = this.moveToNextToken;\n    }\n\n    if (report) {\n      const node = new ASTBase(createTokenIndex(start, end));\n      this.issues.push(genIssue(SyntaxIssue.UNKNOWN, node));\n    }\n\n    return end;\n  };\n\n  getTokenIndex(token?: Token) {\n    return token ? this.tokens.findIndex((item) => item === token) : -1;\n  }\n}\n\nexport type BlockItem = Token | Block;\nexport interface Block {\n  startToken: Token;\n  items: BlockItem[];\n  splitTokens: Token[][];\n  endToken: Token;\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ASTBase } from \"../base\";\nimport { TokenIndexes } from \"../../types\";\n\nexport class Comment extends ASTBase {\n  constructor(tokenIndexes: TokenIndexes) {\n    super(tokenIndexes);\n    this.semanticTokenType = \"comment\";\n    this.semanticTokenModifiers = \"documentation\";\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LexerToken, Token } from \"./types\";\nimport { adjacentTokens, createTokenIndex, validToken } from \"./helpers\";\nimport { Comment } from \"./ast/dtc/comment\";\nimport { BaseParser } from \"./baseParser\";\nimport { ASTBase } from \"./ast/base\";\nimport { getTokenizedDocumentProvider } from \"./providers/tokenizedDocument\";\n\nexport class CommentsParser extends BaseParser {\n  comments: Comment[] = [];\n  public tokens: Token[] = [];\n\n  constructor(public readonly uri: string) {\n    super();\n  }\n\n  private cleanUpComments() {\n    const tokensUsed: number[] = [];\n    for (let i = 0; i < this.tokens.length; i++) {\n      const result =\n        CommentsParser.processBlockComments(this.tokens, i) ||\n        CommentsParser.processLineComments(this.tokens, i);\n      if (result) {\n        i = result.index;\n        tokensUsed.push(...result.tokenUsed);\n        this.comments.push(...result.comments);\n      }\n    }\n    tokensUsed.reverse().forEach((i) => this.tokens.splice(i, 1));\n  }\n\n  get allAstItems(): ASTBase[] {\n    return this.comments;\n  }\n\n  protected reset() {\n    super.reset();\n    this.comments = [];\n  }\n\n  public reparse() {\n    this.reset();\n    return this.parse();\n  }\n\n  protected async parse() {\n    this.tokens = getTokenizedDocumentProvider().requestTokens(this.uri, true);\n    this.cleanUpComments();\n  }\n\n  private static processBlockComments(tokens: Token[], index: number) {\n    const tokenUsed: number[] = [];\n\n    const move = () => {\n      tokenUsed.push(index++);\n      return tokens[index];\n    };\n\n    const currentToken = () => {\n      return tokens[index];\n    };\n\n    const prevToken = () => {\n      return tokens[index - 1];\n    };\n\n    const firstToken = currentToken();\n    let token = firstToken;\n    if (!firstToken || !validToken(firstToken, LexerToken.FORWARD_SLASH)) {\n      return;\n    }\n\n    token = move();\n\n    if (\n      !validToken(token, LexerToken.MULTI_OPERATOR) ||\n      firstToken.pos.line !== token.pos.line ||\n      firstToken.pos.col + 1 !== token.pos.col\n    ) {\n      return;\n    }\n\n    const isEndComment = (): boolean => {\n      if (!validToken(prevToken(), LexerToken.MULTI_OPERATOR)) {\n        return false;\n      }\n\n      if (\n        !validToken(currentToken(), LexerToken.FORWARD_SLASH) ||\n        !adjacentTokens(prevToken(), currentToken())\n      ) {\n        return false;\n      }\n\n      return true;\n    };\n\n    // we have a comment start\n    let lastLine = token.pos.line;\n    let start = firstToken;\n    const comments: Comment[] = [];\n    token = move();\n    do {\n      if (currentToken()?.pos.line !== lastLine) {\n        const node = new Comment(createTokenIndex(start, prevToken()));\n        comments.push(node);\n\n        lastLine = currentToken().pos.line ?? 0;\n\n        start = currentToken();\n      }\n      token = move();\n    } while (index < tokens.length && !isEndComment());\n\n    const node = new Comment(createTokenIndex(start, currentToken()));\n    comments.push(node);\n\n    move();\n    return {\n      comments,\n      tokenUsed,\n      index: index - 1,\n    };\n  }\n\n  private static processLineComments(tokens: Token[], index: number) {\n    const tokenUsed: number[] = [];\n\n    if (\n      !validToken(tokens[index], LexerToken.FORWARD_SLASH) ||\n      tokens.length === index + 1 ||\n      !validToken(tokens[index + 1], LexerToken.FORWARD_SLASH)\n    ) {\n      return;\n    }\n\n    const comments: Comment[] = [];\n\n    while (tokens[index].pos.line === tokens.at(index + 1)?.pos.line) {\n      tokenUsed.push(index++);\n    }\n\n    tokenUsed.push(index++);\n\n    const lastToken = tokens[tokenUsed.at(-1)!];\n    const node = new Comment(\n      createTokenIndex(tokens[tokenUsed[0]], tokens[tokenUsed.at(-1)!])\n    );\n\n    comments.push(node);\n\n    return {\n      comments,\n      tokenUsed,\n      index: index - 1,\n    };\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CIdentifier } from \"./cIdentifier\";\nimport { FunctionDefinition } from \"./functionDefinition\";\nimport { Keyword } from \"../keyword\";\nimport { ASTBase } from \"../base\";\nimport { LexerToken, Token, TokenIndexes } from \"../../types\";\nimport { validToken } from \"../../helpers\";\n\nexport class CMacroContent extends ASTBase {\n  constructor(tokenIndexes: TokenIndexes, public readonly content: Token[]) {\n    super(tokenIndexes);\n  }\n\n  toString() {\n    const allDataTokens = this.content.filter(\n      (t) => !validToken(t, LexerToken.BACK_SLASH)\n    );\n\n    return allDataTokens\n      .map((p, i) => {\n        let v = p.value;\n        if (p.pos.line === allDataTokens.at(i + 1)?.pos.line) {\n          v = v.padEnd(allDataTokens[i + 1].pos.col - p.pos.col, \" \");\n        } else if (allDataTokens.at(i + 1)) {\n          v = v.padEnd(v.length + 1, \" \");\n        }\n        return v;\n      })\n      .join(\"\");\n  }\n}\n\nexport class CMacro extends ASTBase {\n  constructor(\n    public readonly keyword: Keyword,\n    public readonly identifier: CIdentifier | FunctionDefinition,\n    public readonly content?: CMacroContent\n  ) {\n    super();\n    this.addChild(keyword);\n    this.addChild(this.identifier);\n    if (this.content) {\n      this.addChild(this.content);\n    }\n  }\n\n  get name() {\n    return this.identifier instanceof CIdentifier\n      ? this.identifier.name\n      : this.identifier.functionName.name;\n  }\n\n  toString() {\n    return [\n      this.identifier.toString(),\n      ...(this.content ? [this.content?.toString()] : []),\n    ].join(\" \");\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocumentSymbol, SymbolKind } from 'vscode-languageserver';\nimport { CIdentifier } from './cIdentifier';\nimport { toRange } from '../../helpers';\nimport { ASTBase } from '../base';\nimport { Keyword } from '../keyword';\n\nexport class Variadic extends Keyword {\n\ttoString() {\n\t\treturn '...';\n\t}\n}\n\nexport class FunctionDefinition extends ASTBase {\n\tconstructor(\n\t\tpublic readonly functionName: CIdentifier,\n\t\tpublic readonly params: (CIdentifier | Variadic)[]\n\t) {\n\t\tsuper();\n\t\tthis.addChild(functionName);\n\t\tthis.params.forEach((p) => this.addChild(p));\n\t}\n\n\tgetDocumentSymbols(): DocumentSymbol[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tname: this.functionName.name,\n\t\t\t\tkind: SymbolKind.Function,\n\t\t\t\trange: toRange(this),\n\t\t\t\tselectionRange: toRange(this),\n\t\t\t\tchildren: this.params.flatMap((p) => p.getDocumentSymbols()),\n\t\t\t},\n\t\t];\n\t}\n\n\ttoString() {\n\t\treturn `${this.functionName}(${this.params.map((p) => p.toString()).join(',')})`;\n\t}\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ASTBase } from '../base';\nimport { CIdentifier } from './cIdentifier';\nimport { Keyword } from '../keyword';\nimport { CMacro } from './macro';\nimport { Token, TokenIndexes } from '../../types';\n\nexport class CPreprocessorContent extends ASTBase {\n\tconstructor(tokenIndexes: TokenIndexes) {\n\t\tsuper(tokenIndexes);\n\t}\n}\n\nexport abstract class CIfBase extends ASTBase {\n\tconstructor(\n\t\tpublic readonly keyword: Keyword,\n\t\tpublic readonly content: CPreprocessorContent | null\n\t) {\n\t\tsuper();\n\t\tthis.addChild(keyword);\n\t}\n}\n\nexport class CIfDef extends CIfBase {\n\tconstructor(\n\t\tkeyword: Keyword,\n\t\tpublic readonly identifier: CIdentifier | null,\n\t\tcontent: CPreprocessorContent | null\n\t) {\n\t\tsuper(keyword, content);\n\t\tthis.addChild(identifier);\n\t\tthis.addChild(content);\n\t}\n\n\tuseBlock(macros: Map<string, CMacro>) {\n\t\treturn this.identifier && macros.has(this.identifier.name);\n\t}\n}\n\nexport class CIfNotDef extends CIfDef {\n\tuseBlock(macros: Map<string, CMacro>) {\n\t\treturn this.identifier && !macros.has(this.identifier.name);\n\t}\n}\n\nexport class CElse extends CIfBase {}\n\nexport class CEndIf extends Keyword {}\n\nexport class IfDefineBlock extends ASTBase {\n\tconstructor(\n\t\tpublic readonly ifDef: CIfDef | CIfNotDef,\n\t\tpublic readonly endIf: CEndIf | null,\n\t\tpublic readonly elseOption?: CElse\n\t) {\n\t\tsuper();\n\t\tthis.addChild(ifDef);\n\t\tif (elseOption) this.addChild(elseOption);\n\t\tthis.addChild(endIf);\n\t}\n\n\tgetInValidTokenRange(macros: Map<string, CMacro>, tokens: Token[]) {\n\t\tconst invalidRange: { start: number; end: number }[] = [];\n\n\t\tconst getIndex = (token: Token) => tokens.findIndex((t) => t === token);\n\n\t\tif (!this.ifDef.identifier?.name) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tstart: getIndex(this.tokenIndexes.start),\n\t\t\t\t\tend: getIndex(this.tokenIndexes.end),\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\n\t\tinvalidRange.push({\n\t\t\tstart: getIndex(this.ifDef.tokenIndexes.start),\n\t\t\tend: getIndex(this.ifDef.identifier.tokenIndexes.end),\n\t\t});\n\n\t\tconst useMainBlock = this.ifDef.useBlock(macros);\n\t\tif (!useMainBlock && this.ifDef.content) {\n\t\t\tinvalidRange.push({\n\t\t\t\tstart: getIndex(this.ifDef.content.tokenIndexes.start),\n\t\t\t\tend: getIndex(this.ifDef.content.tokenIndexes.end),\n\t\t\t});\n\t\t}\n\n\t\tif (this.elseOption) {\n\t\t\tinvalidRange.push({\n\t\t\t\tstart: getIndex(this.elseOption.tokenIndexes.start),\n\t\t\t\tend: getIndex(this.elseOption.keyword.tokenIndexes.end),\n\t\t\t});\n\n\t\t\tif (useMainBlock && this.elseOption.content) {\n\t\t\t\tinvalidRange.push({\n\t\t\t\t\tstart: getIndex(this.elseOption.content.tokenIndexes.start),\n\t\t\t\t\tend: getIndex(this.elseOption.content.tokenIndexes.end),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (this.endIf) {\n\t\t\tinvalidRange.push({\n\t\t\t\tstart: getIndex(this.endIf.tokenIndexes.start),\n\t\t\t\tend: getIndex(this.endIf.tokenIndexes.end),\n\t\t\t});\n\t\t}\n\n\t\treturn invalidRange;\n\t}\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LexerToken, SyntaxIssue, Token } from \"./types\";\nimport {\n  createTokenIndex,\n  genIssue,\n  sameLine,\n  validateToken,\n  validToken,\n} from \"./helpers\";\nimport { ASTBase } from \"./ast/base\";\nimport { Keyword } from \"./ast/keyword\";\nimport { Include, IncludePath } from \"./ast/cPreprocessors/include\";\nimport { existsSync } from \"fs\";\nimport { resolve, dirname } from \"path\";\nimport { BaseParser, Block } from \"./baseParser\";\nimport { Parser } from \"./parser\";\nimport { getTokenizedDocumentProvider } from \"./providers/tokenizedDocument\";\nimport { CommentsParser } from \"./commentsParser\";\nimport { CMacro, CMacroContent } from \"./ast/cPreprocessors/macro\";\nimport { CIdentifier } from \"./ast/cPreprocessors/cIdentifier\";\nimport {\n  FunctionDefinition,\n  Variadic,\n} from \"./ast/cPreprocessors/functionDefinition\";\nimport {\n  CElse,\n  CIfDef,\n  CIfNotDef,\n  CPreprocessorContent,\n  IfDefineBlock,\n} from \"./ast/cPreprocessors/ifDefine\";\n\nexport class CPreprocessorParser extends BaseParser {\n  private commentsParser: CommentsParser;\n  public tokens: Token[] = [];\n  private nodes: ASTBase[] = [];\n  private macroSnapShot: Map<string, CMacro> = new Map<string, CMacro>();\n\n  // tokens must be filtered out from comments by now\n  constructor(\n    public readonly uri: string,\n    private incudes: string[],\n    public macros: Map<string, CMacro> = new Map<string, CMacro>()\n  ) {\n    super();\n    this.commentsParser = new CommentsParser(this.uri);\n    Array.from(macros).forEach(([k, m]) => this.macroSnapShot.set(k, m));\n  }\n\n  protected reset() {\n    super.reset();\n    this.macros.clear();\n    Array.from(this.macroSnapShot).forEach(([k, m]) => this.macros.set(k, m));\n    this.nodes = [];\n  }\n\n  public async reparse(): Promise<void> {\n    const stable = this.stable;\n    this.parsing = new Promise<void>((resolve) => {\n      stable.then(() => {\n        this.reset();\n        this.commentsParser.reparse().then(() => {\n          this.parse().then(resolve);\n        });\n      });\n    });\n    return this.parsing;\n  }\n\n  public async parse() {\n    await this.commentsParser.stable;\n    this.tokens = this.commentsParser.tokens;\n\n    this.positionStack.push(0);\n    if (this.tokens.length === 0) {\n      return;\n    }\n\n    while (!this.done) {\n      this.lineProcessor();\n    }\n\n    if (this.positionStack.length !== 1) {\n      /* istanbul ignore next */\n      throw new Error(\"Incorrect final stack size\");\n    }\n  }\n\n  private lineProcessor() {\n    this.enqueueToStack();\n\n    //must be firstToken\n    if (\n      this.prevToken &&\n      this.prevToken.pos.line === this.currentToken?.pos.line\n    ) {\n      this.moveEndOfLine(this.prevToken.pos.line, false);\n      this.mergeStack();\n      return;\n    }\n\n    const line = this.currentToken?.pos.line;\n    const found =\n      // (await this.processInclude()) ||\n      this.processDefinitions() || this.processIfDefBlocks();\n\n    if (line !== undefined) {\n      this.moveEndOfLine(line, !!found);\n    }\n\n    this.mergeStack();\n  }\n\n  private processDefinitions() {\n    this.enqueueToStack();\n\n    const startIndex = this.peekIndex();\n    const token = this.moveToNextToken;\n    if (!token || !validToken(token, LexerToken.C_DEFINE)) {\n      this.popStack();\n      return false;\n    }\n\n    const keyword = new Keyword(createTokenIndex(token));\n\n    const definition = this.isFunctionDefinition() || this.processCIdentifier();\n    if (!definition) {\n      this.issues.push(\n        genIssue(SyntaxIssue.EXPECTED_IDENTIFIER_FUNCTION_LIKE, keyword)\n      );\n      this.mergeStack();\n      return true;\n    }\n\n    const definitionContent = this.consumeDefinitionContent();\n    let content: CMacroContent | undefined;\n    if (definitionContent.length) {\n      content = new CMacroContent(\n        createTokenIndex(definitionContent[0], definitionContent.at(-1)),\n        definitionContent\n      );\n    }\n    const macro = new CMacro(keyword, definition, content);\n    this.macros.set(macro.name, macro);\n    this.nodes.push(macro);\n\n    const endIndex = this.peekIndex();\n    this.tokens.splice(startIndex, endIndex - startIndex);\n\n    this.positionStack[this.positionStack.length - 1] = startIndex;\n    this.mergeStack();\n    return true;\n  }\n\n  private consumeDefinitionContent(): Token[] {\n    const tokens: Token[] = [];\n\n    let prevToken = this.prevToken;\n\n    while (\n      sameLine(prevToken, this.currentToken) ||\n      (prevToken && // allow to break line at end of line with \\\n        validToken(prevToken, LexerToken.BACK_SLASH) &&\n        prevToken.pos.line + 1 === this.currentToken?.pos.line)\n    ) {\n      prevToken = this.moveToNextToken;\n      if (prevToken) {\n        tokens.push(prevToken);\n      }\n    }\n\n    return tokens;\n  }\n\n  protected isFunctionDefinition(): FunctionDefinition | undefined {\n    this.enqueueToStack();\n    const identifier = this.processCIdentifier();\n    if (!identifier) {\n      this.popStack();\n      return;\n    }\n\n    let token = this.moveToNextToken;\n    if (!validToken(token, LexerToken.ROUND_OPEN)) {\n      this.popStack();\n      return;\n    }\n\n    const params: (CIdentifier | Variadic)[] = [];\n    let param = this.processCIdentifier() || this.processVariadic();\n    while (param) {\n      params.push(param);\n      if (\n        !validToken(this.currentToken, LexerToken.COMMA) &&\n        !validToken(this.currentToken, LexerToken.ROUND_CLOSE)\n      ) {\n        this.issues.push(genIssue(SyntaxIssue.MISSING_COMMA, param));\n      } else if (!validToken(this.currentToken, LexerToken.ROUND_CLOSE)) {\n        token = this.moveToNextToken;\n      }\n      param = this.processCIdentifier() || this.processVariadic();\n    }\n\n    const node = new FunctionDefinition(identifier, params);\n\n    if (!validToken(this.currentToken, LexerToken.ROUND_CLOSE)) {\n      node.lastToken = this.prevToken;\n      this.issues.push(\n        genIssue(SyntaxIssue.MISSING_ROUND_CLOSE, params.at(-1) ?? node)\n      );\n    } else {\n      token = this.moveToNextToken;\n      node.lastToken = token;\n    }\n\n    node.uri = this.uri;\n\n    this.mergeStack();\n    return node;\n  }\n\n  private processVariadic() {\n    this.enqueueToStack();\n\n    const valid = this.checkConcurrentTokens([\n      validateToken(LexerToken.PERIOD),\n      validateToken(LexerToken.PERIOD),\n      validateToken(LexerToken.PERIOD),\n    ]);\n\n    if (valid.length !== 3) {\n      this.popStack();\n      return;\n    }\n\n    const variadic = new Variadic(createTokenIndex(valid[0], valid.at(-1)));\n    this.mergeStack();\n    return variadic;\n  }\n\n  private processIfDefBlocks() {\n    const startIndex = this.peekIndex();\n\n    const block = this.parseScopedBlock(\n      (token?: Token) => {\n        const prevTokenIndex = this.getTokenIndex(token) - 1;\n        return (\n          !!token &&\n          [LexerToken.C_IFDEF, LexerToken.C_IFNDEF].some((t) =>\n            validToken(token, t)\n          ) &&\n          !sameLine(this.tokens.at(prevTokenIndex), token)\n        );\n      },\n      (token?: Token) => {\n        const prevTokenIndex = this.getTokenIndex(token) - 1;\n        return (\n          !!token &&\n          [LexerToken.C_ENDIF].some((t) => validToken(token, t)) &&\n          !sameLine(this.tokens.at(prevTokenIndex), token)\n        );\n      },\n      (token?: Token) => {\n        const prevTokenIndex = this.getTokenIndex(token) - 1;\n        return (\n          !!token &&\n          [LexerToken.C_ELSE].some((t) => validToken(token, t)) &&\n          !sameLine(this.tokens.at(prevTokenIndex), token)\n        );\n      }\n    );\n    if (!block) {\n      return;\n    }\n\n    if (\n      validToken(block.startToken, LexerToken.C_IFDEF) ||\n      validToken(block.startToken, LexerToken.C_IFNDEF)\n    ) {\n      let ifDefBlock: IfDefineBlock | undefined;\n      if (validToken(block.startToken, LexerToken.C_IFDEF)) {\n        ifDefBlock = this.processIfDefBlock(\n          block,\n          (\n            keyword: Keyword,\n            identifier: CIdentifier | null,\n            content: CPreprocessorContent\n          ) => new CIfDef(keyword, identifier ?? null, content)\n        );\n      } else {\n        ifDefBlock = this.processIfDefBlock(\n          block,\n          (\n            keyword: Keyword,\n            identifier: CIdentifier | null,\n            content: CPreprocessorContent\n          ) => new CIfNotDef(keyword, identifier ?? null, content)\n        );\n      }\n\n      this.nodes.push(ifDefBlock);\n\n      const rangeToClean = ifDefBlock\n        .getInValidTokenRange(this.macros, this.tokens)\n        .reverse();\n      rangeToClean.forEach((r) => {\n        this.tokens.splice(r.start, r.end - r.start + 1);\n      });\n\n      // rewind to proves the content of the if def that was true\n      this.positionStack[this.positionStack.length - 1] = startIndex;\n      return;\n    }\n  }\n\n  private processIfDefBlock(\n    block: Block,\n    ifCreator: (\n      keyword: Keyword,\n      identifier: CIdentifier | null,\n      content: CPreprocessorContent\n    ) => CIfDef | CIfNotDef\n  ): IfDefineBlock {\n    this.enqueueToStack();\n\n    const ifDefKeyword = new Keyword(createTokenIndex(block.startToken));\n    const endifKeyword = new Keyword(createTokenIndex(block.endToken));\n\n    // rewind so we can capture the identifier\n    this.positionStack[this.positionStack.length - 1] =\n      this.getTokenIndex(block.startToken) + 1;\n    const identifier = this.processCIdentifier();\n    if (!identifier) {\n      this.issues.push(genIssue(SyntaxIssue.EXPECTED_IDENTIFIER, ifDefKeyword));\n    }\n\n    const mainBlockEndIndex = this.getTokenIndex(block.splitTokens[0].at(-1));\n\n    const ifDefContent = new CPreprocessorContent(\n      createTokenIndex(this.currentToken!, this.tokens[mainBlockEndIndex])\n    );\n    const ifDef = ifCreator(ifDefKeyword, identifier ?? null, ifDefContent);\n\n    let cElse: CElse | undefined;\n\n    if (block.splitTokens.length > 1) {\n      const elseIndex = this.getTokenIndex(block.splitTokens[1][0]);\n      const elseKeyword = new Keyword(createTokenIndex(this.tokens[elseIndex]));\n      const elseContent = new CPreprocessorContent(\n        createTokenIndex(\n          this.tokens[elseIndex + 1],\n          block.splitTokens[1].at(-1)\n        )\n      );\n      cElse = new CElse(elseKeyword, elseContent);\n    }\n\n    const ifDefBlock = new IfDefineBlock(ifDef, endifKeyword, cElse);\n\n    this.mergeStack();\n    return ifDefBlock;\n  }\n\n  get allAstItems(): ASTBase[] {\n    return [...this.nodes, ...this.commentsParser.allAstItems];\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SymbolKind } from \"vscode-languageserver\";\nimport { ASTBase } from \"../base\";\nimport { Keyword } from \"../keyword\";\nimport { basename } from \"path\";\nimport { TokenIndexes } from \"../../types\";\n\nexport class Include extends ASTBase {\n  public reolvedPath?: string;\n\n  constructor(\n    public readonly keyword: Keyword,\n    public readonly path: IncludePath\n  ) {\n    super();\n    this.docSymbolsMeta = {\n      name: \"Include\",\n      kind: SymbolKind.File,\n    };\n    this.addChild(keyword);\n    this.addChild(path);\n  }\n}\n\nexport class IncludePath extends ASTBase {\n  constructor(\n    private readonly _path: string,\n    public readonly relative: boolean,\n    tokenIndexes: TokenIndexes\n  ) {\n    super(tokenIndexes);\n    this.docSymbolsMeta = {\n      name: basename(this.path),\n      kind: SymbolKind.File,\n    };\n    this.semanticTokenType = \"string\";\n    this.semanticTokenModifiers = \"declaration\";\n  }\n\n  get path() {\n    if (this.relative) {\n      return this._path.slice(1, -1);\n    }\n    return this._path;\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Issue, LexerToken, SyntaxIssue, Token, TokenIndexes } from \"./types\";\nimport {\n  adjacentTokens,\n  createTokenIndex,\n  genIssue,\n  sameLine,\n  validateToken,\n  validateValue,\n  validToken,\n} from \"./helpers\";\nimport {\n  DtcBaseNode,\n  DtcChildNode,\n  DtcRootNode,\n  DtcRefNode,\n  NodeName,\n} from \"./ast/dtc/node\";\nimport { ASTBase } from \"./ast/base\";\nimport { Label, LabelAssign } from \"./ast/dtc/label\";\nimport { LabelRef } from \"./ast/dtc/labelRef\";\nimport { DtcProperty, PropertyName } from \"./ast/dtc/property\";\nimport { DeleteNode } from \"./ast/dtc/deleteNode\";\nimport { Keyword } from \"./ast/keyword\";\nimport { DeleteProperty } from \"./ast/dtc/deleteProperty\";\nimport { StringValue } from \"./ast/dtc/values/string\";\nimport { PropertyValue } from \"./ast/dtc/values/value\";\nimport { NodePath, NodePathRef } from \"./ast/dtc/values/nodePath\";\nimport { NumberValue } from \"./ast/dtc/values/number\";\nimport { ByteStringValue } from \"./ast/dtc/values/byteString\";\nimport { PropertyValues } from \"./ast/dtc/values/values\";\nimport { DtsDocumentVersion } from \"./ast/dtc/dtsDocVersion\";\nimport { ArrayValues } from \"./ast/dtc/values/arrayValue\";\nimport { LabeledValue } from \"./ast/dtc/values/labeledValue\";\nimport { ComplexExpression, Expression } from \"./ast/cPreprocessors/expression\";\nimport { CMacroCall, CMacroCallParam } from \"./ast/cPreprocessors/functionCall\";\nimport { BaseParser } from \"./baseParser\";\nimport { CPreprocessorParser } from \"./cPreprocessorParser\";\nimport { CMacro } from \"./ast/cPreprocessors/macro\";\nimport { getTokenizedDocumentProvider } from \"./providers/tokenizedDocument\";\nimport { Include, IncludePath } from \"./ast/cPreprocessors/include\";\nimport { existsSync } from \"fs\";\nimport { resolve, dirname } from \"path\";\n\ntype AllowNodeRef = \"Ref\" | \"Name\";\n\nexport class Parser extends BaseParser {\n  public tokens: Token[] = [];\n  cPreprocessorParser: CPreprocessorParser;\n\n  others: ASTBase[] = [];\n  rootDocument = new DtcBaseNode();\n  issues: Issue<SyntaxIssue>[] = [];\n  unhandledStatements = new DtcRootNode();\n  private originalSortKey: number;\n\n  constructor(\n    public readonly uri: string,\n    private incudes: string[],\n    macros: Map<string, CMacro> = new Map<string, CMacro>(),\n    private sortKey = -1\n  ) {\n    super();\n    this.originalSortKey = sortKey;\n    this.cPreprocessorParser = new CPreprocessorParser(\n      this.uri,\n      this.incudes,\n      macros\n    );\n    this.rootDocument.uri = uri;\n  }\n\n  protected reset() {\n    super.reset();\n    this.others = [];\n    this.rootDocument = new DtcBaseNode();\n    this.rootDocument.uri = this.uri;\n    this.issues = [];\n    this.sortKey = this.originalSortKey;\n    this.unhandledStatements = new DtcRootNode();\n  }\n\n  public async reparse(): Promise<void> {\n    const t = performance.now();\n    const stable = this.stable;\n    this.parsing = new Promise<void>((resolve) => {\n      stable.then(async () => {\n        this.reset();\n        await this.cPreprocessorParser.reparse();\n        await this.parse();\n        console.log(\"parsing\", performance.now() - t);\n        resolve();\n      });\n    });\n    return this.parsing;\n  }\n\n  async parse() {\n    const t = performance.now();\n    await this.cPreprocessorParser.stable;\n    this.tokens = this.cPreprocessorParser.tokens;\n\n    if (this.uri.endsWith(\".h\")) return;\n\n    this.positionStack.push(0);\n    if (this.tokens.length === 0) {\n      return;\n    }\n\n    const process = async () => {\n      if (\n        !(\n          this.isDtsDocumentVersion() ||\n          this.isRootNodeDefinition(this.rootDocument) ||\n          this.isDeleteNode(this.rootDocument, \"Ref\") ||\n          (await this.processInclude(this.rootDocument)) ||\n          // Valid use case\n          this.isChildNode(this.rootDocument, \"Ref\") ||\n          // not valid syntax but we leave this for the next layer to process\n          this.isProperty(this.unhandledStatements) ||\n          this.isDeleteProperty(this.unhandledStatements)\n        )\n      ) {\n        const token = this.moveToNextToken;\n        if (token) {\n          const node = new ASTBase(createTokenIndex(token));\n          this.issues.push(genIssue(SyntaxIssue.UNKNOWN, node));\n          this.reportExtraEndStatements();\n        }\n      }\n    };\n\n    while (!this.done) {\n      await process();\n    }\n\n    this.allParsers;\n    this.allAstItems.forEach((i) => (i.sortKey = this.sortKey));\n\n    this.unhandledStatements.properties.forEach((prop) => {\n      this.issues.push(genIssue(SyntaxIssue.PROPERTY_MUST_BE_IN_NODE, prop));\n    });\n\n    this.unhandledStatements.deleteProperties.forEach((delProp) => {\n      this.issues.push(\n        genIssue(SyntaxIssue.PROPERTY_DELETE_MUST_BE_IN_NODE, delProp)\n      );\n    });\n\n    if (this.positionStack.length !== 1) {\n      /* istanbul ignore next */\n      throw new Error(\"Incorrect final stack size\");\n    }\n    // console.log(\"parse\", this.uri, performance.now() - t);\n  }\n\n  private isRootNodeDefinition(parent: DtcBaseNode): boolean {\n    this.enqueueToStack();\n\n    const firstToken = this.moveToNextToken;\n    let nextToken = firstToken;\n    let expectedToken = LexerToken.FORWARD_SLASH;\n    if (!firstToken || !validToken(firstToken, expectedToken)) {\n      this.popStack();\n      return false;\n    }\n\n    nextToken = this.moveToNextToken;\n    expectedToken = LexerToken.CURLY_OPEN;\n    if (!nextToken || !validToken(nextToken, expectedToken)) {\n      this.popStack();\n      return false;\n    }\n\n    // from this point we can continue an report the expected tokens\n    const rootNode = new DtcRootNode();\n    rootNode.openScope = nextToken;\n    parent.addNodeChild(rootNode);\n    this.processNode(rootNode, \"Name\");\n\n    const lastToken = this.nodeEnd(rootNode) ?? nextToken;\n    rootNode.firstToken = firstToken;\n    rootNode.lastToken = lastToken;\n    this.mergeStack();\n    return true;\n  }\n\n  private nodeEnd(dtcNode: DtcBaseNode) {\n    const nextToken = this.currentToken;\n    if (!validToken(nextToken, LexerToken.CURLY_CLOSE)) {\n      const prevToken = this.prevToken;\n      if (prevToken) {\n        const node = new ASTBase(createTokenIndex(prevToken));\n        this.issues.push(genIssue(SyntaxIssue.CURLY_CLOSE, node));\n      }\n\n      return this.endStatement(false);\n    } else {\n      this.moveToNextToken;\n    }\n\n    if (this.prevToken?.value === \"}\") {\n      dtcNode.closeScope = this.prevToken;\n    }\n\n    return this.endStatement();\n  }\n\n  private isNodeEnd() {\n    return (\n      validToken(this.currentToken, LexerToken.CURLY_CLOSE) ||\n      validToken(this.currentToken, LexerToken.SEMICOLON)\n    );\n  }\n\n  private endStatement(report = true) {\n    const currentToken = this.currentToken;\n    if (!validToken(currentToken, LexerToken.SEMICOLON)) {\n      const token = this.prevToken;\n      if (token && report) {\n        const node = new ASTBase(createTokenIndex(this.prevToken));\n        this.issues.push(genIssue(SyntaxIssue.END_STATEMENT, node));\n        return token;\n      }\n    }\n\n    this.moveToNextToken;\n\n    this.reportExtraEndStatements();\n\n    return currentToken;\n  }\n\n  private reportExtraEndStatements() {\n    while (validToken(this.currentToken, LexerToken.SEMICOLON)) {\n      const token = this.moveToNextToken;\n      if (token) {\n        const node = new ASTBase(createTokenIndex(token));\n        this.issues.push(genIssue(SyntaxIssue.NO_STATEMENT, node));\n      }\n    }\n  }\n\n  private processNode(parent: DtcBaseNode, allow: AllowNodeRef): boolean {\n    if (this.done) return false;\n\n    let found = false;\n    let child = false;\n    do {\n      child =\n        this.isChildNode(parent, allow) ||\n        this.isProperty(parent) ||\n        this.isDeleteNode(parent, allow) ||\n        this.isDeleteProperty(parent);\n\n      if (!child && !this.isNodeEnd() && !this.done) {\n        const token = this.moveToNextToken;\n        if (token) {\n          const node = new ASTBase(createTokenIndex(token));\n          this.issues.push(genIssue(SyntaxIssue.UNKNOWN, node));\n          this.reportExtraEndStatements();\n        }\n      } else {\n        if (this.done) {\n          break;\n        }\n      }\n      found = found || child;\n    } while (!this.isNodeEnd());\n    return found;\n  }\n\n  private processOptionalLabelAssign(acceptLabelName = false): LabelAssign[] {\n    const labels: LabelAssign[] = [];\n\n    // Find all labels before node/property/value.....\n    let labelAssign = this.isLabelAssign(acceptLabelName);\n    while (labelAssign) {\n      labels.push(labelAssign);\n      labelAssign = this.isLabelAssign(acceptLabelName);\n    }\n\n    return labels;\n  }\n\n  private isChildNode(parentNode: DtcBaseNode, allow: AllowNodeRef): boolean {\n    this.enqueueToStack();\n\n    let omitIfNoRef: Keyword | undefined;\n    if (allow === \"Name\") {\n      omitIfNoRef = this.isOmitIfNoRefNode();\n    }\n\n    const labels = this.processOptionalLabelAssign();\n\n    let name: NodeName | undefined;\n    let ref: LabelRef | undefined;\n\n    const child =\n      allow === \"Ref\"\n        ? new DtcRefNode(labels)\n        : new DtcChildNode(labels, omitIfNoRef);\n\n    if (allow === \"Ref\") {\n      ref = this.isLabelRef();\n    } else if (allow === \"Name\") {\n      name = this.isNodeName();\n    }\n\n    if (!ref) {\n      if (!name) {\n        if (!validToken(this.currentToken, LexerToken.CURLY_OPEN)) {\n          // could be property then ....\n          this.popStack();\n          return false;\n        }\n\n        child.firstToken = this.currentToken;\n\n        this.issues.push(\n          genIssue(\n            allow === \"Name\"\n              ? [SyntaxIssue.NODE_NAME]\n              : [SyntaxIssue.NODE_REF, SyntaxIssue.ROOT_NODE_NAME],\n            child\n          )\n        );\n      }\n    }\n\n    let expectedNode = false;\n    if (ref && child instanceof DtcRefNode) {\n      child.labelReference = ref;\n      expectedNode = true;\n    } else if (name && child instanceof DtcChildNode) {\n      expectedNode = name.address !== undefined;\n      child.name = name;\n    }\n\n    if (!validToken(this.currentToken, LexerToken.CURLY_OPEN)) {\n      if (expectedNode) {\n        const refOrName = ref ?? name;\n        if (refOrName)\n          this.issues.push(genIssue(SyntaxIssue.CURLY_OPEN, refOrName));\n      } else {\n        // this could be a property\n        this.popStack();\n        return false;\n      }\n    } else {\n      this.moveToNextToken;\n      child.openScope = this.prevToken;\n      // syntax must be a node ....\n\n      let hasChild: boolean = false;\n      do {\n        hasChild = this.processNode(child, \"Name\");\n      } while (hasChild);\n\n      const lastToken = this.nodeEnd(child);\n\n      child.lastToken = lastToken;\n    }\n\n    parentNode.addNodeChild(child);\n    this.mergeStack();\n    return true;\n  }\n\n  private isNodeName(): NodeName | undefined {\n    this.enqueueToStack();\n    const valid = this.consumeAnyConcurrentTokens(\n      [\n        LexerToken.DIGIT,\n        LexerToken.LETTERS,\n        LexerToken.COMMA,\n        LexerToken.PERIOD,\n        LexerToken.UNDERSCORE,\n        LexerToken.ADD_OPERATOR,\n        LexerToken.NEG_OPERATOR,\n      ].map(validateToken)\n    );\n\n    if (!valid.length) {\n      this.popStack();\n      return;\n    }\n\n    const name = valid.map((v) => v.value).join(\"\");\n\n    if (!name.match(/^[A-Za-z]/)) {\n      this.popStack();\n      return;\n    }\n\n    const atValid = this.checkConcurrentTokens([validateToken(LexerToken.AT)]);\n    if (atValid.length) {\n      const addressValid = this.consumeAnyConcurrentTokens(\n        [LexerToken.DIGIT, LexerToken.HEX].map(validateToken)\n      );\n\n      const address = addressValid.length\n        ? Number.parseInt(addressValid.map((v) => v.value).join(\"\"), 16)\n        : NaN;\n      const node = new NodeName(\n        name,\n        createTokenIndex(valid[0], addressValid.at(-1) ?? valid.at(-1)),\n        address\n      );\n\n      if (!adjacentTokens(valid.at(-1), atValid[0])) {\n        const whiteSpace = new ASTBase(\n          createTokenIndex(valid.at(-1)!, atValid[0])\n        );\n        this.issues.push(genIssue(SyntaxIssue.WHITE_SPACE, whiteSpace));\n      }\n      if (Number.isNaN(address)) {\n        this.issues.push(genIssue(SyntaxIssue.NODE_ADDRESS, node));\n      }\n\n      if (\n        !Number.isNaN(address) &&\n        !adjacentTokens(atValid.at(-1), addressValid[0])\n      ) {\n        const whiteSpace = new ASTBase(\n          createTokenIndex(atValid[0], addressValid.at(0))\n        );\n        this.issues.push(genIssue(SyntaxIssue.WHITE_SPACE, whiteSpace));\n      }\n\n      this.mergeStack();\n      return node;\n    }\n\n    const node = new NodeName(name, createTokenIndex(valid[0], valid.at(-1)));\n    this.mergeStack();\n    return node;\n  }\n\n  private isPropertyName(): PropertyName | undefined {\n    this.enqueueToStack();\n    const valid = this.consumeAnyConcurrentTokens(\n      [\n        LexerToken.DIGIT,\n        LexerToken.LETTERS,\n        LexerToken.COMMA,\n        LexerToken.PERIOD,\n        LexerToken.UNDERSCORE,\n        LexerToken.ADD_OPERATOR,\n        LexerToken.NEG_OPERATOR,\n        LexerToken.QUESTION_MARK,\n        LexerToken.HASH,\n      ].map(validateToken)\n    );\n\n    if (!valid.length) {\n      this.popStack();\n      return;\n    }\n    const node = new PropertyName(\n      valid.map((v) => v.value).join(\"\"),\n      createTokenIndex(valid[0], valid.at(-1))\n    );\n    this.mergeStack();\n    return node;\n  }\n\n  private isLabelName(): Label | undefined {\n    this.enqueueToStack();\n    const valid = this.consumeAnyConcurrentTokens(\n      [LexerToken.DIGIT, LexerToken.LETTERS, LexerToken.UNDERSCORE].map(\n        validateToken\n      )\n    );\n\n    if (!valid.length) {\n      this.popStack();\n      return undefined;\n    }\n\n    const name = valid.map((v) => v.value).join(\"\");\n\n    if (!name.match(/^[A-Za-z]/)) {\n      this.popStack();\n      return;\n    }\n\n    const node = new Label(name, createTokenIndex(valid[0], valid.at(-1)));\n    this.mergeStack();\n    return node;\n  }\n\n  private isLabelAssign(acceptLabelName: boolean): LabelAssign | undefined {\n    this.enqueueToStack();\n    const valid = this.consumeAnyConcurrentTokens(\n      [LexerToken.DIGIT, LexerToken.LETTERS, LexerToken.UNDERSCORE].map(\n        validateToken\n      )\n    );\n\n    if (!valid.length) {\n      this.popStack();\n      return;\n    }\n\n    const name = valid.map((v) => v.value).join(\"\");\n\n    if (!name.match(/^[A-Za-z]/)) {\n      this.popStack();\n      return;\n    }\n\n    const token = this.currentToken;\n    const hasColon = token && validToken(token, LexerToken.COLON);\n    const node = new LabelAssign(\n      new Label(name, createTokenIndex(valid[0], valid.at(-1))),\n      createTokenIndex(valid[0], hasColon ? token : valid.at(-1))\n    );\n\n    if (!hasColon) {\n      if (acceptLabelName) {\n        this.issues.push(\n          genIssue(SyntaxIssue.LABEL_ASSIGN_MISSING_COLON, node)\n        );\n      } else {\n        this.popStack();\n        return;\n      }\n    } else {\n      const lastNameToken = valid.at(-1);\n      if (\n        lastNameToken &&\n        (token.pos.line !== node.firstToken.pos.line ||\n          token.pos.col !== lastNameToken.pos.col + lastNameToken.pos.len)\n      ) {\n        this.issues.push(\n          genIssue(\n            SyntaxIssue.WHITE_SPACE,\n            new ASTBase(createTokenIndex(lastNameToken, token))\n          )\n        );\n      }\n      this.moveToNextToken;\n    }\n\n    this.mergeStack();\n    return node;\n  }\n\n  private isProperty(parent: DtcBaseNode): boolean {\n    this.enqueueToStack();\n\n    const labels = this.processOptionalLabelAssign();\n\n    const propertyName = this.isPropertyName();\n\n    if (!propertyName) {\n      this.popStack();\n      return false;\n    }\n\n    if (\n      validToken(this.currentToken, LexerToken.CURLY_OPEN) ||\n      validToken(this.currentToken, LexerToken.AT)\n    ) {\n      // this is a node not a property\n      this.popStack();\n      return false;\n    }\n\n    const node = new DtcProperty(propertyName, labels);\n\n    let result: PropertyValues | undefined;\n    if (validToken(this.currentToken, LexerToken.ASSIGN_OPERATOR)) {\n      this.moveToNextToken;\n      result = this.processValue(node);\n\n      if (!result?.values.filter((v) => !!v).length) {\n        this.issues.push(genIssue(SyntaxIssue.VALUE, node));\n      }\n      node.values = result ?? null;\n    } else {\n      node.values = undefined;\n    }\n\n    const lastToken = this.endStatement();\n\n    // create property object\n    node.lastToken = lastToken;\n\n    parent.addNodeChild(node);\n\n    this.mergeStack();\n    return true;\n  }\n\n  private isDtsDocumentVersion(): boolean {\n    this.enqueueToStack();\n\n    const valid = this.checkConcurrentTokens([\n      validateToken(LexerToken.FORWARD_SLASH),\n      validateValue(\"d\"),\n      validateValue(\"ts\"),\n      validateToken(LexerToken.NEG_OPERATOR),\n      validateValue(\"v\"),\n      validateValue(\"1\"),\n    ]);\n\n    if (!valid.length) {\n      this.popStack();\n      return false;\n    }\n\n    const firstToken = valid[0];\n    let token: Token | undefined = firstToken;\n\n    if (\n      valid.length === 1 &&\n      !validToken(this.currentToken, LexerToken.CURLY_OPEN)\n    ) {\n      this.popStack();\n      return false;\n    }\n\n    if (valid.length !== 6) {\n      this.popStack();\n      return false;\n    }\n\n    const keyword = new Keyword();\n    keyword.firstToken = firstToken;\n    const node = new DtsDocumentVersion(keyword);\n    this.others.push(node);\n\n    if (!validToken(this.currentToken, LexerToken.FORWARD_SLASH)) {\n      keyword.lastToken = valid.at(-1);\n      this.issues.push(genIssue(SyntaxIssue.MISSING_FORWARD_SLASH_END, node));\n      this.mergeStack();\n      return true;\n    } else {\n      token = this.moveToNextToken;\n    }\n\n    keyword.lastToken = token;\n\n    node.lastToken = this.endStatement();\n    this.mergeStack();\n    return true;\n  }\n\n  private isOmitIfNoRefNode(): Keyword | undefined {\n    this.enqueueToStack();\n\n    const valid = this.checkConcurrentTokens([\n      validateToken(LexerToken.FORWARD_SLASH),\n      validateValue(\"omit\"),\n      validateToken(LexerToken.NEG_OPERATOR),\n      validateValue(\"if\"),\n      validateToken(LexerToken.NEG_OPERATOR),\n      validateValue(\"no\"),\n      validateToken(LexerToken.NEG_OPERATOR),\n      validateValue(\"ref\"),\n      validateToken(LexerToken.FORWARD_SLASH),\n    ]);\n\n    if (valid.length !== 9) {\n      this.popStack();\n      return;\n    }\n\n    const keyword = new Keyword(createTokenIndex(valid[0], valid.at(-1)));\n    this.mergeStack();\n    return keyword;\n  }\n\n  private isDeleteNode(parent: DtcBaseNode, allow: AllowNodeRef): boolean {\n    this.enqueueToStack();\n\n    const valid = this.checkConcurrentTokens([\n      validateToken(LexerToken.FORWARD_SLASH),\n      validateValue(\"d\"),\n      validateValue(\"e\"),\n      validateValue(\"lete\"),\n      validateToken(LexerToken.NEG_OPERATOR),\n      validateValue(\"node\"),\n    ]);\n\n    if (!valid.length) {\n      this.popStack();\n      return false;\n    }\n\n    const firstToken = valid[0];\n    let token: Token | undefined = firstToken;\n    const keyword = new Keyword();\n    keyword.firstToken = firstToken;\n\n    if (\n      valid.length === 1 &&\n      !validToken(this.currentToken, LexerToken.CURLY_OPEN)\n    ) {\n      this.issues.push(genIssue(SyntaxIssue.DELETE_INCOMPLETE, keyword));\n      keyword.lastToken = valid.at(-1);\n      const node = new DeleteNode(keyword);\n      parent.addNodeChild(node);\n      this.mergeStack();\n      return true;\n    }\n\n    const stringValue = valid.map((t) => t.value ?? \"\").join(\"\");\n\n    if (!\"/delete-node/\".startsWith(stringValue) || stringValue.endsWith(\"-\")) {\n      this.popStack();\n      return false;\n    }\n\n    keyword.lastToken = valid.at(-1);\n    if (\"/delete-node\" !== stringValue) {\n      this.issues.push(\n        genIssue(\n          stringValue.startsWith(\"/delete-n\")\n            ? SyntaxIssue.DELETE_NODE_INCOMPLETE\n            : SyntaxIssue.DELETE_INCOMPLETE,\n          keyword\n        )\n      );\n    } else {\n      if (!validToken(this.currentToken, LexerToken.FORWARD_SLASH)) {\n        this.issues.push(\n          genIssue(SyntaxIssue.MISSING_FORWARD_SLASH_END, keyword)\n        );\n      } else {\n        token = this.moveToNextToken;\n        keyword.lastToken = token;\n      }\n    }\n    const node = new DeleteNode(keyword);\n\n    if (sameLine(keyword.tokenIndexes?.end, firstToken)) {\n      const nodePathRef = this.processNodePathRef();\n      if (nodePathRef && allow === \"Name\") {\n        this.issues.push(genIssue(SyntaxIssue.NODE_NAME, nodePathRef));\n      }\n\n      const labelRef = nodePathRef ? undefined : this.isLabelRef();\n      if (labelRef && allow === \"Name\") {\n        this.issues.push(genIssue(SyntaxIssue.NODE_NAME, labelRef));\n      }\n\n      const nodeName = nodePathRef || labelRef ? undefined : this.isNodeName();\n      if (nodeName && allow === \"Ref\") {\n        this.issues.push(genIssue(SyntaxIssue.NODE_REF, nodeName));\n      }\n\n      if (!nodePathRef && !nodeName && !labelRef) {\n        this.issues.push(\n          genIssue([SyntaxIssue.NODE_NAME, SyntaxIssue.NODE_REF], node)\n        );\n      }\n      node.nodeNameOrRef = nodePathRef ?? labelRef ?? nodeName ?? null;\n    } else {\n      if (allow === \"Name\") {\n        this.issues.push(genIssue(SyntaxIssue.NODE_NAME, keyword));\n      } else if (allow === \"Ref\") {\n        this.issues.push(genIssue(SyntaxIssue.NODE_REF, keyword));\n      }\n    }\n    const lastToken = this.endStatement();\n\n    node.lastToken = lastToken;\n    parent.addNodeChild(node);\n    this.mergeStack();\n    return true;\n  }\n\n  private isDeleteProperty(parent: DtcBaseNode): boolean {\n    this.enqueueToStack();\n\n    const valid = this.checkConcurrentTokens([\n      validateToken(LexerToken.FORWARD_SLASH),\n      validateValue(\"d\"),\n      validateValue(\"e\"),\n      validateValue(\"lete\"),\n      validateToken(LexerToken.NEG_OPERATOR),\n      validateValue(\"property\"),\n    ]);\n\n    if (!valid.length) {\n      this.popStack();\n      return false;\n    }\n\n    const firstToken = valid[0];\n\n    let token: Token | undefined = firstToken;\n    const keyword = new Keyword();\n    keyword.firstToken = firstToken;\n\n    if (\n      valid.length === 1 &&\n      !validToken(this.currentToken, LexerToken.CURLY_OPEN)\n    ) {\n      this.issues.push(genIssue(SyntaxIssue.DELETE_INCOMPLETE, keyword));\n      keyword.lastToken = valid.at(-1);\n      const node = new DeleteProperty(keyword);\n      parent.addNodeChild(node);\n      this.mergeStack();\n      return true;\n    }\n\n    const stringValue = valid.map((t) => t.value ?? \"\").join(\"\");\n\n    if (\n      !\"/delete-property/\".startsWith(stringValue) ||\n      stringValue.endsWith(\"-\")\n    ) {\n      this.popStack();\n      return false;\n    }\n\n    keyword.lastToken = valid.at(-1);\n    if (\"/delete-property\" !== stringValue) {\n      this.issues.push(\n        genIssue(\n          stringValue.startsWith(\"/delete-p\")\n            ? SyntaxIssue.DELETE_PROPERTY_INCOMPLETE\n            : SyntaxIssue.DELETE_INCOMPLETE,\n          keyword\n        )\n      );\n    } else {\n      if (!validToken(this.currentToken, LexerToken.FORWARD_SLASH)) {\n        this.issues.push(\n          genIssue(SyntaxIssue.MISSING_FORWARD_SLASH_END, keyword)\n        );\n      } else {\n        token = this.moveToNextToken;\n        keyword.lastToken = token;\n      }\n    }\n\n    const node = new DeleteProperty(keyword);\n\n    if (sameLine(keyword.tokenIndexes?.end, firstToken)) {\n      const propertyName = this.isPropertyName();\n      if (!propertyName) {\n        this.issues.push(genIssue(SyntaxIssue.PROPERTY_NAME, node));\n      }\n\n      node.propertyName = propertyName ?? null;\n    } else {\n      this.issues.push(genIssue(SyntaxIssue.PROPERTY_NAME, keyword));\n    }\n\n    const lastToken = this.endStatement();\n    node.lastToken = lastToken;\n    parent.addNodeChild(node);\n\n    this.mergeStack();\n    return true;\n  }\n\n  private isNodePathRef(): PropertyValue | undefined {\n    const nodePathRef = this.processNodePathRef();\n    if (!nodePathRef) return;\n\n    let endLabels: LabelAssign[] = [];\n    if (\n      this.currentToken &&\n      this.currentToken.pos.line === this.currentToken.prevToken?.pos.line\n    )\n      endLabels = this.processOptionalLabelAssign(true);\n\n    const node = new PropertyValue(nodePathRef, [...endLabels]);\n    return node;\n  }\n\n  private processValue(dtcProperty: DtcProperty): PropertyValues | undefined {\n    this.enqueueToStack();\n\n    const labels = this.processOptionalLabelAssign(true);\n\n    const getValues = (): (PropertyValue | null)[] => {\n      const getValue = () => {\n        return (\n          (this.processStringValue() ||\n            this.isNodePathRef() ||\n            this.isLabelRefValue(dtcProperty) ||\n            this.arrayValues(dtcProperty) ||\n            this.processByteStringValue()) ??\n          null\n        );\n      };\n      const value = getValue();\n\n      if (!value) {\n        return [];\n      }\n\n      const values = [value];\n      while (!validToken(this.currentToken, LexerToken.SEMICOLON)) {\n        const start = this.prevToken;\n        const end = this.currentToken;\n        const shouldHaveValue = validToken(this.currentToken, LexerToken.COMMA);\n        if (shouldHaveValue) {\n          this.moveToNextToken;\n        }\n        const next = getValue();\n        if (end && next === null && shouldHaveValue) {\n          const node = new ASTBase(createTokenIndex(end, this.currentToken));\n          this.issues.push(genIssue(SyntaxIssue.VALUE, node));\n        }\n        if (!shouldHaveValue && next === null) {\n          break;\n        }\n        if (start && !shouldHaveValue && next) {\n          const node = new ASTBase(createTokenIndex(start));\n          this.issues.push(genIssue(SyntaxIssue.MISSING_COMMA, node));\n        }\n        values.push(next!);\n      }\n\n      return values;\n    };\n\n    const values = getValues();\n\n    if (values.length === 0) {\n      this.popStack();\n      return;\n    }\n\n    this.mergeStack();\n    const node = new PropertyValues(values, labels);\n    return node;\n  }\n\n  private processStringValue(): PropertyValue | undefined {\n    this.enqueueToStack();\n\n    const token = this.moveToNextToken;\n    if (!validToken(token, LexerToken.STRING)) {\n      this.popStack();\n      return;\n    }\n\n    if (!token?.value) {\n      /* istanbul ignore next */\n      throw new Error(\"Token must have value\");\n    }\n\n    let trimedValue = token.value;\n    if (trimedValue.match(/[\"']$/)) {\n      trimedValue = trimedValue.slice(1, -1);\n    }\n    const propValue = new StringValue(trimedValue, createTokenIndex(token));\n\n    if (!token.value.match(/[\"']$/)) {\n      this.issues.push(\n        genIssue(\n          token.value.startsWith('\"')\n            ? SyntaxIssue.DOUBLE_QUOTE\n            : SyntaxIssue.SINGLE_QUOTE,\n          propValue\n        )\n      );\n    }\n\n    let endLabels: LabelAssign[] = [];\n    if (\n      this.currentToken &&\n      this.currentToken.pos.line === this.currentToken.prevToken?.pos.line\n    )\n      endLabels = this.processOptionalLabelAssign(true);\n\n    const node = new PropertyValue(propValue, endLabels);\n    this.mergeStack();\n    return node;\n  }\n\n  private arrayValues(dtcProperty: DtcProperty): PropertyValue | undefined {\n    this.enqueueToStack();\n\n    const firstToken = this.currentToken;\n    if (!validToken(firstToken, LexerToken.LT_SYM)) {\n      this.popStack();\n      return;\n    } else {\n      this.moveToNextToken;\n    }\n\n    const value = this.processArrayValues(dtcProperty) ?? null;\n\n    const endLabels1 = this.processOptionalLabelAssign(true) ?? [];\n\n    const node = new PropertyValue(value, [...endLabels1]);\n\n    if (!validToken(this.currentToken, LexerToken.GT_SYM)) {\n      this.issues.push(genIssue(SyntaxIssue.GT_SYM, node));\n    } else {\n      this.moveToNextToken;\n    }\n\n    let endLabels2: LabelAssign[] = [];\n    if (\n      this.currentToken &&\n      this.currentToken.pos.line === this.currentToken.prevToken?.pos.line\n    )\n      endLabels2 = this.processOptionalLabelAssign(true);\n\n    this.mergeStack();\n\n    node.endLabels.push(...endLabels2);\n    if (!value) {\n      this.issues.push(genIssue(SyntaxIssue.EXPECTED_VALUE, node));\n    }\n    node.firstToken = firstToken;\n    node.lastToken = this.prevToken;\n    return node;\n  }\n\n  private processByteStringValue(): PropertyValue | undefined {\n    this.enqueueToStack();\n\n    const firstToken = this.moveToNextToken;\n    const token = firstToken;\n    if (!validToken(token, LexerToken.SQUARE_OPEN)) {\n      this.popStack();\n      return;\n    }\n\n    const numberValues = this.processLabeledValue(() =>\n      this.processHexString()\n    );\n\n    const endLabels1 = this.processOptionalLabelAssign(true) ?? [];\n\n    numberValues.forEach((value) => {\n      let len = 0;\n      if (value.value?.tokenIndexes?.start === value.value?.tokenIndexes?.end) {\n        len = value.value?.tokenIndexes?.start?.pos.len ?? 0;\n      }\n\n      if (len % 2 !== 0) {\n        this.issues.push(genIssue(SyntaxIssue.BYTESTRING_EVEN, value));\n      }\n    });\n\n    const byteString = new ByteStringValue(numberValues ?? []);\n    if (byteString.values.length === 0) {\n      byteString.firstToken = firstToken;\n      this.issues.push(genIssue(SyntaxIssue.BYTESTRING, byteString));\n    }\n\n    const node = new PropertyValue(byteString, [...endLabels1]);\n\n    if (!validToken(this.currentToken, LexerToken.SQUARE_CLOSE)) {\n      this.issues.push(genIssue(SyntaxIssue.SQUARE_CLOSE, node));\n    } else {\n      this.moveToNextToken;\n    }\n\n    let endLabels2: LabelAssign[] = [];\n    if (\n      this.currentToken &&\n      this.currentToken.pos.line === this.currentToken.prevToken?.pos.line\n    )\n      endLabels2 = this.processOptionalLabelAssign(true);\n\n    this.mergeStack();\n    node.endLabels.push(...endLabels2);\n    node.firstToken = firstToken;\n    byteString.lastToken = this.prevToken;\n    return node;\n  }\n\n  private processLabeledValue<T extends ASTBase>(\n    processValue: () => LabeledValue<T> | undefined\n  ): LabeledValue<T>[] {\n    this.enqueueToStack();\n\n    let value = processValue();\n    let result: LabeledValue<T>[] = [];\n\n    if (!value) {\n      this.popStack();\n      return [];\n    }\n\n    while (value) {\n      result = [...result, value];\n      value = processValue();\n    }\n\n    if (result) {\n      const nextValue = processValue();\n      if (nextValue) {\n        result = [...result, nextValue];\n      }\n    }\n\n    this.mergeStack();\n    return result;\n  }\n\n  private processArrayValues(\n    dtcProperty: DtcProperty\n  ): ArrayValues | undefined {\n    this.enqueueToStack();\n\n    const result = this.processLabeledValue(\n      ():\n        | LabeledValue<NumberValue | LabelRef | NodePathRef | Expression>\n        | undefined =>\n        this.processRefValue(false, dtcProperty) ||\n        this.processLabeledHex(false) ||\n        this.processLabeledDec(false) ||\n        this.processLabeledExpression(true, false)\n    );\n\n    if (result.length === 0) {\n      this.popStack();\n      return;\n    }\n\n    const node = new ArrayValues(result);\n    this.mergeStack();\n    return node;\n  }\n\n  private processLabeledHex(\n    acceptLabelName: boolean\n  ): LabeledValue<NumberValue> | undefined {\n    this.enqueueToStack();\n\n    const labels = this.processOptionalLabelAssign(acceptLabelName);\n    const numberValue = this.processHex();\n    if (!numberValue) {\n      this.popStack();\n      return;\n    }\n\n    const node = new LabeledValue(numberValue, labels);\n    this.mergeStack();\n    return node;\n  }\n\n  private processHex(): NumberValue | undefined {\n    this.enqueueToStack();\n\n    const validStart = this.checkConcurrentTokens([\n      validateValue(\"0\"),\n      validateValue(\"x\"),\n    ]);\n\n    if (validStart.length !== 2) {\n      this.popStack();\n      return;\n    }\n\n    const validValue = this.consumeAnyConcurrentTokens(\n      [LexerToken.DIGIT, LexerToken.HEX].map(validateToken)\n    );\n\n    if (!validValue.length) {\n      this.popStack();\n      return;\n    }\n\n    const num = Number.parseInt(validValue.map((v) => v.value).join(\"\"), 16);\n    const numberValue = new NumberValue(\n      num,\n      createTokenIndex(validStart[0], validValue.at(-1))\n    );\n\n    this.mergeStack();\n    return numberValue;\n  }\n\n  private processHexString(): LabeledValue<NumberValue> | undefined {\n    this.enqueueToStack();\n\n    const labels = this.processOptionalLabelAssign(false);\n    const valid = this.checkConcurrentTokens(\n      [LexerToken.HEX, LexerToken.HEX].map(validateToken)\n    );\n\n    if (!valid.length) {\n      this.popStack();\n      return;\n    }\n\n    const num = Number.parseInt(valid.map((v) => v.value).join(\"\"), 16);\n    const numberValue = new NumberValue(\n      num,\n      createTokenIndex(valid[0], valid.at(-1))\n    );\n\n    const node = new LabeledValue(numberValue, labels);\n    this.mergeStack();\n    return node;\n  }\n\n  private processLabeledDec(\n    acceptLabelName: boolean\n  ): LabeledValue<NumberValue> | undefined {\n    this.enqueueToStack();\n\n    const labels = this.processOptionalLabelAssign(acceptLabelName);\n\n    const numberValue = this.processDec();\n    if (!numberValue) {\n      this.popStack();\n      return;\n    }\n    const node = new LabeledValue(numberValue, labels);\n    this.mergeStack();\n    return node;\n  }\n\n  private processDec(): NumberValue | undefined {\n    this.enqueueToStack();\n\n    const valid = this.consumeAnyConcurrentTokens(\n      [LexerToken.DIGIT].map(validateToken)\n    );\n\n    if (!valid.length) {\n      this.popStack();\n      return;\n    }\n\n    const num = Number.parseInt(valid.map((v) => v.value).join(\"\"), 10);\n    const numberValue = new NumberValue(\n      num,\n      createTokenIndex(valid[0], valid.at(-1))\n    );\n\n    this.mergeStack();\n    return numberValue;\n  }\n\n  private processLabeledExpression(\n    checkForLabels = true,\n    acceptLabelName = checkForLabels\n  ): LabeledValue<Expression> | undefined {\n    this.enqueueToStack();\n\n    let labels: LabelAssign[] = [];\n    if (checkForLabels) {\n      labels = this.processOptionalLabelAssign(acceptLabelName);\n    }\n\n    const expression = this.processExpression();\n\n    if (!expression) {\n      this.popStack();\n      return;\n    }\n\n    const node = new LabeledValue(expression, labels);\n    this.mergeStack();\n    return node;\n  }\n\n  private isFunctionCall(): CMacroCall | undefined {\n    this.enqueueToStack();\n    const identifier = this.processCIdentifier();\n    if (!identifier) {\n      this.popStack();\n      return;\n    }\n\n    const params = this.processMacroCallParams();\n\n    if (!params) {\n      this.popStack();\n      return;\n    }\n\n    const node = new CMacroCall(identifier, params);\n    this.mergeStack();\n    return node;\n  }\n\n  private processExpression(): Expression | undefined {\n    this.enqueueToStack();\n\n    let complexExpression = false;\n\n    let start: Token | undefined;\n    let token: Token | undefined;\n    if (validToken(this.currentToken, LexerToken.ROUND_OPEN)) {\n      complexExpression = true;\n      start = this.moveToNextToken;\n      token = start;\n    }\n\n    let expression: Expression | undefined =\n      this.isFunctionCall() ||\n      this.processCIdentifier() ||\n      this.processHex() ||\n      this.processDec();\n    if (!expression) {\n      this.popStack();\n      return;\n    }\n\n    if (complexExpression) {\n      let operator = this.isOperator();\n\n      while (operator) {\n        // complex\n        const nextExpression = this.processExpression();\n\n        if (!nextExpression) {\n          this.issues.push(genIssue(SyntaxIssue.EXPECTED_EXPRESSION, operator));\n        } else {\n          if (expression instanceof ComplexExpression) {\n            expression.addExpression(operator, nextExpression);\n          } else {\n            expression = new ComplexExpression(expression, {\n              operator,\n              expression: nextExpression,\n            });\n          }\n        }\n\n        operator = this.isOperator();\n      }\n\n      if (!validToken(this.currentToken, LexerToken.ROUND_CLOSE)) {\n        this.issues.push(\n          genIssue(SyntaxIssue.MISSING_ROUND_CLOSE, operator ?? expression)\n        );\n      } else {\n        token = this.moveToNextToken;\n      }\n    }\n\n    this.mergeStack();\n    return expression;\n  }\n\n  private processMacroCallParams(): CMacroCallParam[] | undefined {\n    if (!validToken(this.currentToken, LexerToken.ROUND_OPEN)) {\n      return;\n    }\n\n    const block = this.parseScopedBlock(\n      (token?: Token) => !!validToken(token, LexerToken.ROUND_OPEN),\n      (token?: Token) => !!validToken(token, LexerToken.ROUND_CLOSE),\n      (token?: Token) => !!validToken(token, LexerToken.COMMA)\n    );\n\n    return block?.splitTokens.map((param, i) => {\n      const tokens = i ? param.slice(1) : param;\n      return new CMacroCallParam(\n        tokens\n          .map((p, i) => {\n            let v = p.value;\n            if (p.pos.line === tokens.at(i + 1)?.pos.line) {\n              v = v.padEnd(tokens[i + 1].pos.col - p.pos.col, \" \");\n            }\n            return v;\n          })\n          .join(\"\"),\n        createTokenIndex(tokens[0], tokens.at(-1)),\n        i\n      );\n    });\n  }\n\n  private isLabelRef(slxBase?: ASTBase): LabelRef | undefined {\n    this.enqueueToStack();\n    const ampersandToken = this.currentToken;\n    if (!validToken(ampersandToken, LexerToken.AMPERSAND)) {\n      this.popStack();\n      return;\n    } else {\n      this.moveToNextToken;\n    }\n\n    const labelName = this.isLabelName();\n    if (!labelName) {\n      const node = new LabelRef(null);\n      this.issues.push(genIssue(SyntaxIssue.LABEL_NAME, slxBase ?? node));\n      node.firstToken = ampersandToken;\n      this.mergeStack();\n      return node;\n    }\n\n    if (\n      ampersandToken &&\n      (labelName.firstToken.pos.line !== ampersandToken.pos.line ||\n        labelName.firstToken.pos.col !==\n          ampersandToken.pos.col + ampersandToken.pos.len)\n    ) {\n      this.issues.push(\n        genIssue(\n          SyntaxIssue.WHITE_SPACE,\n          new ASTBase(createTokenIndex(ampersandToken, labelName.firstToken))\n        )\n      );\n    }\n\n    const node = new LabelRef(labelName);\n    node.firstToken = ampersandToken;\n    this.mergeStack();\n    return node;\n  }\n\n  private isLabelRefValue(dtcProperty: DtcProperty): PropertyValue | undefined {\n    this.enqueueToStack();\n\n    const labelRef = this.isLabelRef(dtcProperty);\n\n    if (!labelRef) {\n      this.popStack();\n      return;\n    }\n\n    let endLabels: LabelAssign[] = [];\n    if (\n      this.currentToken &&\n      this.currentToken.pos.line === this.currentToken.prevToken?.pos.line\n    )\n      endLabels = this.processOptionalLabelAssign(true);\n\n    const node = new PropertyValue(labelRef, endLabels);\n    this.mergeStack();\n    return node;\n  }\n\n  private processRefValue(\n    acceptLabelName: boolean,\n    dtcProperty: DtcProperty\n  ): LabeledValue<LabelRef | NodePathRef> | undefined {\n    this.enqueueToStack();\n    const labels = this.processOptionalLabelAssign(acceptLabelName);\n    const firstToken = this.currentToken;\n    if (!validToken(this.currentToken, LexerToken.AMPERSAND)) {\n      this.popStack();\n      return;\n    }\n\n    const nodePath = this.processNodePathRef();\n\n    if (nodePath !== undefined) {\n      const node = new LabeledValue(nodePath, labels);\n      this.mergeStack();\n      return node;\n    }\n\n    const labelRef = this.isLabelRef(dtcProperty);\n    if (labelRef === undefined) {\n      this.issues.push(\n        genIssue([SyntaxIssue.LABEL_NAME, SyntaxIssue.NODE_PATH], dtcProperty)\n      );\n\n      const node = new LabeledValue<LabelRef>(null, labels);\n      node.firstToken = labels.at(0)?.firstToken ?? firstToken;\n      this.mergeStack();\n      return node;\n    }\n\n    const node = new LabeledValue(labelRef, labels);\n    node.firstToken = labels.at(0)?.firstToken ?? firstToken;\n    this.mergeStack();\n    return node;\n  }\n\n  private processNodePath(\n    first = true,\n    nodePath = new NodePath()\n  ): NodePath | undefined {\n    this.enqueueToStack();\n\n    let firstToken: Token | undefined;\n\n    if (!validToken(this.currentToken, LexerToken.FORWARD_SLASH)) {\n      if (!first) {\n        this.popStack();\n        return;\n      }\n      if (this.prevToken) {\n        this.issues.push(\n          genIssue(\n            SyntaxIssue.FORWARD_SLASH_START_PATH,\n            new ASTBase(createTokenIndex(this.prevToken))\n          )\n        );\n      }\n    } else {\n      firstToken = this.moveToNextToken;\n    }\n\n    const nodeName = this.isNodeName();\n    if (!nodeName) {\n      this.issues.push(\n        genIssue(\n          SyntaxIssue.NODE_NAME,\n          new ASTBase(createTokenIndex(firstToken ?? this.prevToken!))\n        )\n      );\n    }\n\n    nodePath.addPath(\n      nodeName ?? null,\n      firstToken ? new ASTBase(createTokenIndex(firstToken)) : undefined\n    );\n\n    this.processNodePath(false, nodePath);\n\n    this.mergeStack();\n    return nodePath;\n  }\n\n  private processNodePathRef(): NodePathRef | undefined {\n    this.enqueueToStack();\n\n    const firstToken = this.moveToNextToken;\n    let token = firstToken;\n    if (!validToken(token, LexerToken.AMPERSAND)) {\n      this.popStack();\n      return;\n    }\n\n    const beforePath = this.moveToNextToken;\n    token = beforePath;\n    if (!validToken(token, LexerToken.CURLY_OPEN)) {\n      // might be a node ref such as &nodeLabel\n      this.popStack();\n      return;\n    }\n\n    // now we must have a valid path\n    // /soc/node/node2@223/....\n    const nodePath = this.processNodePath();\n\n    const node = new NodePathRef(nodePath ?? null);\n\n    const lastToken = this.currentToken ?? this.prevToken;\n    const afterPath = lastToken;\n\n    nodePath?.children.forEach((p, i) => {\n      if (\n        i === nodePath?.children.length - 1 &&\n        p &&\n        afterPath &&\n        p.lastToken.pos.col + p.lastToken.pos.len !== afterPath.pos.col\n      ) {\n        this.issues.push(\n          genIssue(\n            SyntaxIssue.WHITE_SPACE,\n            new ASTBase(createTokenIndex(p.lastToken, afterPath))\n          )\n        );\n        return;\n      }\n      if (\n        i === 0 &&\n        beforePath &&\n        beforePath.pos.col + beforePath.pos.len !== p?.firstToken.pos.col\n      ) {\n        this.issues.push(\n          genIssue(\n            SyntaxIssue.WHITE_SPACE,\n            new ASTBase(createTokenIndex(beforePath, p?.firstToken))\n          )\n        );\n        return;\n      }\n      const nextPart = nodePath?.children[i + 1];\n      if (\n        p &&\n        nextPart &&\n        p.lastToken.pos.col + p.lastToken.pos.len !==\n          nextPart?.firstToken.pos.col\n      ) {\n        this.issues.push(\n          genIssue(\n            SyntaxIssue.WHITE_SPACE,\n            new ASTBase(createTokenIndex(p.lastToken, nextPart?.firstToken))\n          )\n        );\n      }\n    });\n\n    if (!validToken(lastToken, LexerToken.CURLY_CLOSE)) {\n      if (this.prevToken) {\n        this.issues.push(\n          genIssue(\n            SyntaxIssue.CURLY_CLOSE,\n            new ASTBase(createTokenIndex(this.prevToken))\n          )\n        );\n      }\n    } else {\n      this.moveToNextToken;\n    }\n\n    node.firstToken = firstToken;\n    node.lastToken = lastToken ?? this.prevToken;\n\n    this.mergeStack();\n    return node;\n  }\n\n  get includes() {\n    return this.allAstItems.filter((i) => i instanceof Include) as Include[];\n  }\n\n  resolveInclude(include: Include) {\n    if (include.path.relative) {\n      return [\n        resolve(dirname(this.uri), include.path.path),\n        ...this.incudes.map((c) => resolve(c, include.path.path)),\n      ].find((p) => existsSync(p));\n    } else {\n      return this.incudes\n        .map((p) => resolve(p, include.path.path))\n        .find((p) => existsSync(p));\n    }\n  }\n\n  private async processInclude(parent: DtcBaseNode): Promise<boolean> {\n    this.enqueueToStack();\n\n    const startIndex = this.peekIndex();\n    const start = this.moveToNextToken;\n    let token = start;\n    if (!token || !validToken(token, LexerToken.C_INCLUDE)) {\n      this.popStack();\n      return false;\n    }\n\n    const line = start?.pos.line;\n    const keyword = new Keyword(createTokenIndex(token));\n\n    token = this.moveToNextToken;\n    const pathStart = token;\n    const relative = !!validToken(token, LexerToken.STRING);\n    if (!pathStart || (!relative && !validToken(token, LexerToken.LT_SYM))) {\n      if (line) this.moveEndOfLine(line);\n      this.mergeStack();\n      return true;\n    }\n\n    let path = \"\";\n\n    if (relative) {\n      path = token?.value ?? \"\";\n    } else {\n      while (\n        this.currentToken?.pos.line === line &&\n        !validToken(this.currentToken, LexerToken.GT_SYM)\n      ) {\n        path += this.currentToken?.value ?? \"\";\n        token = this.moveToNextToken;\n      }\n    }\n\n    const includePath = new IncludePath(\n      path,\n      relative,\n      createTokenIndex(pathStart, token)\n    );\n    const node = new Include(keyword, includePath);\n    node.uri = this.uri;\n    parent.addNodeChild(node);\n    node.sortKey = this.sortKey + 1;\n\n    if (!relative) {\n      if (\n        this.currentToken?.pos.line !== line ||\n        !validToken(this.currentToken, LexerToken.GT_SYM)\n      ) {\n        this.issues.push(genIssue(SyntaxIssue.GT_SYM, node));\n      } else {\n        token = this.moveToNextToken;\n        includePath.lastToken = token;\n      }\n    }\n\n    const resolvedPath = this.resolveInclude(node);\n    node.reolvedPath = resolvedPath;\n    if (resolvedPath && !resolvedPath.endsWith(\".h\")) {\n      this.allAstItems.forEach((i) => (i.sortKey = this.sortKey));\n      getTokenizedDocumentProvider().requestTokens(resolvedPath, true);\n      const childParser = new Parser(\n        resolvedPath,\n        this.incudes,\n        this.cPreprocessorParser.macros,\n        ++this.sortKey\n      );\n      this.sortKey++;\n      this.childParsers.push(childParser);\n      await childParser.stable;\n    }\n\n    this.mergeStack();\n\n    const endIndex = this.peekIndex();\n    this.tokens.splice(startIndex, endIndex - startIndex);\n\n    this.positionStack[this.positionStack.length - 1] = startIndex;\n    return true;\n  }\n\n  get allAstItems(): ASTBase[] {\n    return [\n      ...this.cPreprocessorParser.allAstItems,\n      ...this.rootDocument.children,\n      ...this.others,\n      ...this.unhandledStatements.properties,\n      ...this.unhandledStatements.deleteProperties,\n    ];\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ASTBase } from \"./ast/base\";\nimport {\n  DtcBaseNode,\n  DtcChildNode,\n  DtcRefNode,\n  DtcRootNode,\n  NodeName,\n} from \"./ast/dtc/node\";\nimport { DtcProperty } from \"./ast/dtc/property\";\nimport { ContextIssues, Issue } from \"./types\";\nimport { DeleteProperty } from \"./ast/dtc/deleteProperty\";\nimport { DeleteNode } from \"./ast/dtc/deleteNode\";\nimport { LabelRef } from \"./ast/dtc/labelRef\";\nimport { Node } from \"./context/node\";\nimport { Property } from \"./context/property\";\nimport { Runtime } from \"./context/runtime\";\nimport { genIssue, toRange } from \"./helpers\";\nimport { Parser } from \"./parser\";\nimport { DiagnosticSeverity, DocumentLink } from \"vscode-languageserver\";\nimport { NodePath, NodePathRef } from \"./ast/dtc/values/nodePath\";\nimport { Include } from \"./ast/cPreprocessors/include\";\nimport { BindingLoader } from \"./dtsTypes/bindings/bindingLoader\";\nimport { StringValue } from \"./ast/dtc/values/string\";\nimport { existsSync } from \"fs\";\n\nlet id = 0;\nexport class ContextAware {\n  _issues: Issue<ContextIssues>[] = [];\n  private _runtime?: Promise<Runtime>;\n  public parser: Parser;\n  private overlayParsers: Parser[];\n  public readonly id = ++id;\n  public overlays: string[] = [];\n\n  constructor(\n    uri: string,\n    includePaths: string[],\n    public readonly bindingLoader: BindingLoader,\n    overlays: string | string[] = []\n  ) {\n    this.overlays = Array.isArray(overlays) ? overlays : [overlays];\n    this.overlays.filter(existsSync);\n\n    this.parser = new Parser(uri, includePaths);\n    this.overlayParsers =\n      this.overlays?.map((overlay) => new Parser(overlay, includePaths)) ?? [];\n  }\n\n  async getContextIssues() {\n    return [...(await this.getRuntime()).issues, ...this._issues];\n  }\n\n  async stable() {\n    await Promise.all([\n      this.parser.stable,\n      ...this.overlayParsers.map((p) => p.stable),\n    ]);\n  }\n\n  async getRuntime(): Promise<Runtime> {\n    await this.stable();\n    this._runtime ??= this.evaluate();\n    return this._runtime;\n  }\n\n  async getOrderedParsers(): Promise<Parser[]> {\n    await this.stable();\n    return [...this.parser.orderedParsers, ...this.overlayParsers.reverse()];\n  }\n\n  async getParser(uri: string): Promise<Parser | undefined> {\n    return (await this.getAllParsers())?.find((p) => p.uri === uri);\n  }\n\n  async getAllParsers(): Promise<Parser[]> {\n    await this.stable();\n    return [...this.parser.allParsers, ...this.overlayParsers];\n  }\n\n  async getDocumentLinks(file: string): Promise<DocumentLink[]> {\n    const parser = await this.getParser(file);\n    const runtime = await this.getRuntime();\n\n    const bindingLinks =\n      (runtime.rootNode.allBindingsProperties\n        .filter((p) => p.ast.uri === file)\n        .flatMap((p) =>\n          p.ast.values?.values.flatMap((v) => {\n            const node = p.parent;\n            const nodeType = node?.nodeTypes.find(\n              (t) =>\n                v?.value instanceof StringValue &&\n                t.compatible === v.value.value\n            );\n            return nodeType\n              ? {\n                  range: toRange(v!.value!),\n                  target: `file://${nodeType.bindingsPath}`,\n                }\n              : undefined;\n          })\n        )\n        .filter((v) => v) as DocumentLink[]) ?? [];\n\n    return [\n      ...((parser?.includes\n        .map((include) => {\n          const path = parser.resolveInclude(include);\n          if (path) {\n            const link: DocumentLink = {\n              range: toRange(include.path),\n              target: `file://${path}`,\n            };\n            return link;\n          }\n        })\n        .filter((r) => r) as DocumentLink[]) ?? []),\n      ...bindingLinks,\n    ];\n  }\n\n  private linkPropertiesLabelsAndNodePaths(runtime: Runtime) {\n    const getAllProperties = (node: Node): Property[] => {\n      return [...node.properties, ...node.nodes.flatMap(getAllProperties)];\n    };\n    const allProperties = getAllProperties(runtime.rootNode);\n    const allLabels = runtime.rootNode.allDescendantsLabels;\n\n    allProperties.forEach((p) =>\n      p.ast.allDescendants.forEach((c) => {\n        if (c instanceof LabelRef) {\n          const resolvesTo = runtime.resolvePath(\n            [`&${c.label?.value}`],\n            allLabels\n          );\n          if (resolvesTo) {\n            const node = runtime.rootNode.getChild(resolvesTo);\n            c.linksTo = node;\n            node?.linkedRefLabels.push(c);\n          } else if (c.value) {\n            this._issues.push(\n              genIssue(\n                ContextIssues.UNABLE_TO_RESOLVE_CHILD_NODE,\n                c,\n                DiagnosticSeverity.Error,\n                [],\n                [],\n                [c.value]\n              )\n            );\n          }\n        } else if (c instanceof NodePath) {\n          let node: Node | undefined = runtime.rootNode;\n          const paths = c.pathParts;\n          for (let i = 0; i < paths.length && paths[i]; i++) {\n            let issueFound = false;\n            const nodePath = paths[i];\n\n            if (nodePath) {\n              const child: Node | undefined = node?.getNode(\n                nodePath.name,\n                nodePath.address,\n                false\n              );\n              nodePath.linksTo = child;\n              if (!issueFound && !child) {\n                issueFound = true;\n\n                this._issues.push(\n                  genIssue(\n                    ContextIssues.UNABLE_TO_RESOLVE_NODE_PATH,\n                    nodePath,\n                    DiagnosticSeverity.Error,\n                    [],\n                    [],\n                    [\n                      nodePath.toString(),\n                      `${c.pathParts\n                        .filter((p) => p?.linksTo)\n                        .map((p) => p?.toString())\n                        .join(\"/\")}`,\n                    ]\n                  )\n                );\n              }\n              child?.linkedNodeNamePaths.push(nodePath);\n              node = child;\n            } else {\n              break;\n            }\n          }\n        }\n      })\n    );\n  }\n\n  public async revaluate(uri: string) {\n    const parser = await this.getParser(uri);\n    await parser?.reparse();\n\n    this._runtime = this.evaluate();\n    return this._runtime;\n  }\n\n  public async evaluate() {\n    const t = performance.now();\n    await this.parser.stable;\n\n    const runtime = new Runtime(this.bindingLoader);\n    this._issues = [];\n\n    await this.processRoot(this.parser.rootDocument, runtime);\n    for (let i = 0; i < this.overlayParsers.length; i++) {\n      await this.processRoot(this.overlayParsers[i].rootDocument, runtime);\n    }\n\n    this.linkPropertiesLabelsAndNodePaths(runtime);\n\n    console.log(\"evaluate\", performance.now() - t);\n    return runtime;\n  }\n\n  private async processRoot(element: DtcBaseNode, runtime: Runtime) {\n    for (let i = 0; i < element.children.length; i++) {\n      const child = element.children[i];\n      if (child instanceof Include) {\n        const p = child.reolvedPath\n          ? await this.getParser(child.reolvedPath)\n          : undefined;\n        if (p) {\n          await this.processRoot(p.rootDocument, runtime);\n        }\n      } else {\n        this.processChild(child, runtime.rootNode, runtime);\n      }\n    }\n  }\n\n  private processChild(\n    element: ASTBase,\n    runtimeNodeParent: Node,\n    runtime: Runtime\n  ) {\n    if (element instanceof DtcBaseNode) {\n      this.processDtcBaseNode(element, runtimeNodeParent, runtime);\n    } else if (element instanceof DtcProperty) {\n      this.processDtcProperty(element, runtimeNodeParent, runtime);\n    } else if (element instanceof DeleteNode) {\n      this.processDeleteNode(element, runtimeNodeParent, runtime);\n    } else if (element instanceof DeleteProperty) {\n      this.processDeleteProperty(element, runtimeNodeParent, runtime);\n    }\n  }\n\n  private checkNodeUniqueNames(element: DtcBaseNode, runtimeNodeParent: Node) {\n    const checkMatch = (\n      values: (NodeName | { name: string; address?: number })[],\n      nodeName: NodeName\n    ) => {\n      return values.some(\n        (i) =>\n          i.name === nodeName.name &&\n          (i.address === undefined ||\n            nodeName.address === undefined ||\n            i.address === nodeName.address)\n      );\n    };\n    const fullNames: { name: string; address?: number }[] =\n      runtimeNodeParent.nodes.map((n) => ({\n        name: n.name,\n        address: n.address,\n      }));\n\n    let names: NodeName[] = [];\n\n    element.children.forEach((child) => {\n      if (child instanceof DtcChildNode && child.name) {\n        if (checkMatch(names, child.name)) {\n          this._issues.push(\n            genIssue(ContextIssues.DUPLICATE_NODE_NAME, child.name)\n          );\n        }\n\n        names.push(child.name);\n      } else if (\n        child instanceof DeleteNode &&\n        child.nodeNameOrRef instanceof NodeName\n      ) {\n        const nodeName = child.nodeNameOrRef;\n        if (checkMatch(fullNames, nodeName)) {\n          names = names.filter((i) => checkMatch(names, i));\n        }\n      }\n    });\n  }\n\n  private processDtcBaseNode(\n    element: DtcBaseNode,\n    runtimeNodeParent: Node,\n    runtime: Runtime\n  ) {\n    if (element instanceof DtcRootNode) {\n      this.processDtcRootNode(element, runtime);\n    } else if (element instanceof DtcChildNode) {\n      this.processDtcChildNode(element, runtimeNodeParent, runtime);\n    } else if (element instanceof DtcRefNode) {\n      this.processDtcRefNode(element, runtime);\n    }\n  }\n\n  private processDtcRootNode(element: DtcRootNode, runtime: Runtime) {\n    runtime.roots.push(element);\n    runtime.rootNode.definitions.push(element);\n    this.checkNodeUniqueNames(element, runtime.rootNode);\n    [...element.children]\n      .sort((a, b) => {\n        if (\n          (a instanceof DtcProperty && b instanceof DeleteProperty) ||\n          (b instanceof DtcProperty && a instanceof DeleteProperty)\n        )\n          return 0;\n\n        if (b instanceof DtcProperty) return 1;\n        return 0;\n      })\n      .forEach((child) => this.processChild(child, runtime.rootNode, runtime));\n  }\n\n  private processDtcChildNode(\n    element: DtcChildNode,\n    runtimeNodeParent: Node,\n    runtime: Runtime\n  ) {\n    if (element.name?.name) {\n      const resolvedPath = element.path\n        ? runtime.resolvePath(element.path)\n        : undefined;\n      const runtimeNode = resolvedPath\n        ? runtime.rootNode.getChild(resolvedPath)\n        : undefined;\n\n      const child =\n        runtimeNode ??\n        new Node(\n          this.bindingLoader,\n          element.name.name,\n          element.name.address,\n          runtimeNodeParent\n        );\n      child.definitions.push(element);\n      element.labels.forEach((l) => (l.lastLinkedTo = child));\n\n      runtimeNodeParent = child;\n      this.checkNodeUniqueNames(element, child);\n    }\n\n    [...element.children]\n      .sort((a, b) => {\n        if (a instanceof DtcBaseNode && b instanceof DtcBaseNode) return 0;\n        if (a instanceof DtcBaseNode) return -1;\n        return 0;\n      })\n      .forEach((child) => this.processChild(child, runtimeNodeParent, runtime));\n  }\n\n  private processDtcRefNode(element: DtcRefNode, runtime: Runtime) {\n    let runtimeNode: Node | undefined;\n\n    if (element.labelReference) {\n      const resolvedPath =\n        element.resolveNodePath ??\n        (element.pathName\n          ? runtime.resolvePath([element.pathName])\n          : undefined);\n      if (!resolvedPath) {\n        this._issues.push(\n          genIssue(\n            ContextIssues.UNABLE_TO_RESOLVE_CHILD_NODE,\n            element.labelReference,\n            DiagnosticSeverity.Error,\n            [],\n            [],\n            [element.labelReference.label?.value ?? \"\"]\n          )\n        );\n        runtime.unlinkedRefNodes.push(element);\n      } else {\n        element.resolveNodePath ??= [...resolvedPath];\n        runtimeNode = runtime.rootNode.getChild(resolvedPath);\n        element.labelReference.linksTo = runtimeNode;\n        element.labels.forEach((l) => (l.lastLinkedTo = runtimeNode));\n        runtimeNode?.linkedRefLabels.push(element.labelReference);\n        runtimeNode?.referencedBy.push(element);\n\n        element.labels.forEach((label) => {\n          runtime.labelsUsedCache.set(label.label.value, resolvedPath);\n        });\n\n        if (runtimeNode) {\n          runtime.references.push(element);\n          this.checkNodeUniqueNames(element, runtimeNode);\n        } else {\n          runtime.unlinkedRefNodes.push(element);\n        }\n      }\n    } else {\n      runtime.unlinkedRefNodes.push(element);\n    }\n\n    [...element.children]\n      .sort((a, b) => {\n        if (a instanceof DtcBaseNode && b instanceof DtcBaseNode) return 0;\n        if (a instanceof DtcBaseNode) return -1;\n        return 0;\n      })\n      .forEach((child) =>\n        this.processChild(\n          child,\n          runtimeNode ?? new Node(this.bindingLoader, \"\"),\n          runtime\n        )\n      );\n  }\n\n  private processDtcProperty(\n    element: DtcProperty,\n    runtimeNodeParent: Node,\n    runtime: Runtime\n  ) {\n    if (element.propertyName?.name) {\n      runtimeNodeParent.addProperty(new Property(element, runtimeNodeParent));\n    }\n\n    element.children.forEach((child) =>\n      this.processChild(child, runtimeNodeParent, runtime)\n    );\n  }\n\n  private processDeleteNode(\n    element: DeleteNode,\n    runtimeNodeParent: Node,\n    runtime: Runtime\n  ) {\n    if (\n      element.nodeNameOrRef instanceof NodeName &&\n      element.nodeNameOrRef.value\n    ) {\n      if (element.parentNode?.parentNode) {\n        if (\n          !runtimeNodeParent.hasNode(\n            element.nodeNameOrRef.name,\n            element.nodeNameOrRef.address\n          )\n        ) {\n          this._issues.push(\n            genIssue(ContextIssues.NODE_DOES_NOT_EXIST, element.nodeNameOrRef)\n          );\n        } else {\n          runtimeNodeParent.deletes.push(element);\n          const nodeToBeDeleted = runtimeNodeParent.getNode(\n            element.nodeNameOrRef.name,\n            element.nodeNameOrRef.address\n          );\n          element.nodeNameOrRef.linksTo = nodeToBeDeleted;\n          runtimeNodeParent.deleteNode(\n            element.nodeNameOrRef.name,\n            element,\n            element.nodeNameOrRef.address\n          );\n\n          nodeToBeDeleted?.labels.forEach((label) => {\n            runtime.labelsUsedCache.delete(label.label.value);\n          });\n        }\n      }\n    } else if (\n      element.nodeNameOrRef instanceof LabelRef &&\n      element.nodeNameOrRef.value\n    ) {\n      const resolvedPath = runtime.resolvePath([\n        `&${element.nodeNameOrRef.value}`,\n      ]);\n\n      let runtimeNode: Node | undefined;\n      if (!resolvedPath) {\n        runtime.unlinkedDeletes.push(element);\n        this._issues.push(\n          genIssue(\n            ContextIssues.UNABLE_TO_RESOLVE_CHILD_NODE,\n            element.nodeNameOrRef,\n            DiagnosticSeverity.Error,\n            [],\n            [],\n            [element.nodeNameOrRef.value]\n          )\n        );\n      } else {\n        runtimeNode = runtime.rootNode.getChild(resolvedPath);\n        runtimeNodeParent.deletes.push(element);\n        element.nodeNameOrRef.linksTo = runtimeNode;\n\n        runtimeNode?.labels.forEach((label) => {\n          runtime.labelsUsedCache.delete(label.label.value);\n        });\n\n        runtimeNode?.linkedRefLabels.push(element.nodeNameOrRef);\n        runtimeNode?.parent?.deleteNode(\n          runtimeNode.name,\n          element,\n          runtimeNode.address\n        );\n\n        if (\n          element.parentNode instanceof DtcBaseNode &&\n          !element.parentNode.pathName\n        ) {\n          runtime.globalDeletes.push(element);\n        }\n      }\n    } else if (\n      element.nodeNameOrRef instanceof NodePathRef &&\n      element.nodeNameOrRef.path &&\n      !element.nodeNameOrRef.path.pathParts.some((p) => !p)\n    ) {\n      const resolvedPath = [\n        \"/\",\n        ...(element.nodeNameOrRef.path.pathParts as NodeName[]).map((n) =>\n          n.toString()\n        ),\n      ];\n\n      let node: Node | undefined = runtime.rootNode;\n      const paths = element.nodeNameOrRef.path.pathParts;\n      for (let i = 0; i < paths.length && paths[i]; i++) {\n        const nodePath = paths[i];\n\n        if (nodePath) {\n          const child: Node | undefined = node?.getNode(\n            nodePath.name,\n            nodePath.address,\n            false\n          );\n          nodePath.linksTo = child;\n          child?.linkedNodeNamePaths.push(nodePath);\n          node = child;\n        }\n      }\n\n      const allPathDefined = element.nodeNameOrRef.path.pathParts.every(\n        (p) => p\n      );\n      const unresolvedNodeName = element.nodeNameOrRef.path.pathParts.find(\n        (p) => p && !p.linksTo\n      );\n\n      const runtimeNode = element.nodeNameOrRef.path.pathParts.at(-1)?.linksTo;\n\n      if (!runtimeNode) {\n        runtime.unlinkedDeletes.push(element);\n        if (unresolvedNodeName) {\n          this._issues.push(\n            genIssue(\n              ContextIssues.UNABLE_TO_RESOLVE_NODE_PATH,\n              unresolvedNodeName,\n              DiagnosticSeverity.Error,\n              [],\n              [],\n              [\n                unresolvedNodeName.toString(),\n                `${element.nodeNameOrRef.path.pathParts\n                  .filter((p) => p?.linksTo)\n                  .map((p) => p?.toString())\n                  .join(\"/\")}`,\n              ]\n            )\n          );\n        }\n      }\n      runtimeNodeParent.deletes.push(element);\n\n      runtimeNode?.labels.forEach((label) => {\n        runtime.labelsUsedCache.delete(label.label.value);\n      });\n\n      runtimeNode?.parent?.deleteNode(\n        runtimeNode.name,\n        element,\n        runtimeNode.address\n      );\n\n      if (\n        element.parentNode instanceof DtcBaseNode &&\n        !element.parentNode.pathName\n      ) {\n        runtime.globalDeletes.push(element);\n      }\n    } else {\n      runtime.unlinkedDeletes.push(element);\n    }\n    element.children.forEach((child) =>\n      this.processChild(child, runtimeNodeParent, runtime)\n    );\n  }\n\n  private processDeleteProperty(\n    element: DeleteProperty,\n    runtimeNodeParent: Node,\n    runtime: Runtime\n  ) {\n    if (\n      element.propertyName?.name &&\n      !runtimeNodeParent.hasProperty(element.propertyName.name)\n    ) {\n      this._issues.push(\n        genIssue(ContextIssues.PROPERTY_DOES_NOT_EXIST, element.propertyName)\n      );\n    } else if (element.propertyName?.name) {\n      runtimeNodeParent.deletes.push(element);\n      runtimeNodeParent.deleteProperty(element.propertyName.name, element);\n    }\n\n    element.children.forEach((child) =>\n      this.processChild(child, runtimeNodeParent, runtime)\n    );\n  }\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CompletionItem,\n  CompletionItemKind,\n  InsertTextFormat,\n  TextDocumentPositionParams,\n} from \"vscode-languageserver\";\nimport { ContextAware } from \"./runtimeEvaluator\";\nimport { SearchableResult } from \"./types\";\nimport { Node } from \"./context/node\";\nimport { ASTBase } from \"./ast/base\";\nimport { Keyword } from \"./ast/keyword\";\nimport { PropertyName } from \"./ast/dtc/property\";\nimport {\n  DtcChildNode,\n  DtcRefNode,\n  DtcRootNode,\n  NodeName,\n} from \"./ast/dtc/node\";\nimport { DeleteNode } from \"./ast/dtc/deleteNode\";\nimport { LabelAssign } from \"./ast/dtc/label\";\nimport { NodePath } from \"./ast/dtc/values/nodePath\";\nimport { Property } from \"./context/property\";\nimport { LabelRef } from \"./ast/dtc/labelRef\";\nimport { nodeFinder } from \"./helpers\";\nimport { DeleteProperty } from \"./ast/dtc/deleteProperty\";\nimport { isDeleteChild } from \"./ast/helpers\";\n\nconst resolveNonDeletedScopedLabels = (\n  node: Node,\n  inScope: (ast: ASTBase) => boolean\n): LabelAssign[] => {\n  return [\n    ...node.labels.filter(inScope),\n    ...node.deletedNodes\n      .filter((n) => !inScope(n.by))\n      .flatMap((n) => resolveNonDeletedScopedLabels(n.node, inScope)),\n    ...node.nodes.flatMap((n) => resolveNonDeletedScopedLabels(n, inScope)),\n  ];\n};\n\nconst resolveNonDeletedLabels = (\n  node: Node,\n  inScope: (ast: ASTBase) => boolean\n): LabelAssign[] => {\n  return [\n    ...node.labels,\n    ...node.deletedNodes\n      .filter((n) => !inScope(n.by))\n      .flatMap((n) => resolveNonDeletedLabels(n.node, inScope)),\n    ...node.nodes.flatMap((n) => resolveNonDeletedLabels(n, inScope)),\n  ];\n};\n\nfunction getRefLabelsItems(\n  result: SearchableResult | undefined,\n  inScope: (ast: ASTBase) => boolean\n): CompletionItem[] {\n  if (\n    !result ||\n    !(result.item instanceof Property) ||\n    !(result.ast instanceof LabelRef)\n  ) {\n    return [];\n  }\n\n  const getScopeItems = (node: Node) => {\n    return resolveNonDeletedLabels(node, inScope);\n  };\n\n  return Array.from(\n    new Set(getScopeItems(result.runtime.rootNode).map((l) => l.label.value))\n  ).map((l) => ({\n    label: `${l}`,\n    kind: CompletionItemKind.Method,\n  }));\n}\n\nfunction getCreateNodeRefItems(\n  result: SearchableResult | undefined,\n  inScope: (ast: ASTBase) => boolean\n): CompletionItem[] {\n  if (\n    !result ||\n    result.item !== null ||\n    !(result.ast instanceof LabelRef) ||\n    !(result.ast.parentNode instanceof DtcRefNode)\n  ) {\n    return [];\n  }\n\n  const getScopeItems = (node: Node) => {\n    return resolveNonDeletedScopedLabels(node, inScope).filter((l) =>\n      inScope(l)\n    );\n  };\n\n  return [\n    ...Array.from(\n      new Set(getScopeItems(result.runtime.rootNode).map((l) => l.label.value))\n    ).map((l) => ({\n      label: l,\n      insertText: `${l} {\\n$1\\n};`,\n      kind: CompletionItemKind.Value,\n      insertTextFormat: InsertTextFormat.Snippet,\n    })),\n  ];\n}\n\nfunction getDeleteNodeRefItems(\n  result: SearchableResult | undefined,\n  inScope: (ast: ASTBase) => boolean\n): CompletionItem[] {\n  const isRefDeleteNode = (ast?: ASTBase): boolean => {\n    if (!ast) return true;\n    if (\n      ast.parentNode instanceof DtcRefNode ||\n      ast.parentNode instanceof DtcRootNode ||\n      ast.parentNode instanceof DtcChildNode\n    ) {\n      return false;\n    }\n    return isRefDeleteNode(ast.parentNode);\n  };\n\n  if (\n    !result ||\n    result.item !== null ||\n    !isDeleteChild(result.ast) ||\n    !isRefDeleteNode(result.ast)\n  ) {\n    return [];\n  }\n\n  const getScopeItems = (node: Node) => {\n    return resolveNonDeletedScopedLabels(node, inScope).filter((l) =>\n      inScope(l)\n    );\n  };\n\n  if (result.ast instanceof Keyword) {\n    if (getScopeItems(result.runtime.rootNode).length) {\n      return [\n        {\n          label: \"/delete-node/\",\n          insertText: `/delete-node/ $1;`,\n          kind: CompletionItemKind.Keyword,\n          insertTextFormat: InsertTextFormat.Snippet,\n          sortText: \"~\",\n        },\n      ];\n    }\n\n    if (result.runtime.rootNode.nodes.length) {\n      return [\n        {\n          label: \"/delete-node/ &{}\",\n          insertText: `/delete-node/ {/$1};`,\n          kind: CompletionItemKind.Keyword,\n          insertTextFormat: InsertTextFormat.Snippet,\n          sortText: \"~\",\n        },\n      ];\n    }\n\n    return [];\n  }\n\n  return Array.from(\n    new Set(getScopeItems(result.runtime.rootNode).map((l) => l.label.value))\n  ).map((l) => ({\n    label: `${l}`,\n    kind: CompletionItemKind.Variable,\n  }));\n}\n\nfunction getDeleteNodeNameItems(\n  result: SearchableResult | undefined,\n  inScope: (ast: ASTBase) => boolean\n): CompletionItem[] {\n  if (!result || !(result.item instanceof Node) || result.item === null) {\n    return [];\n  }\n\n  const getScopeItems = (node: Node) => {\n    return [\n      ...node.nodes,\n      ...node.deletedNodes.filter((n) => !inScope(n.by)).map((n) => n.node),\n    ]\n      .flatMap(\n        (n) =>\n          n.definitions.filter(\n            (n) => n instanceof DtcChildNode\n          ) as DtcChildNode[]\n      )\n      .filter((n) => inScope(n));\n  };\n\n  if (result.ast instanceof NodeName || result.ast instanceof DeleteNode) {\n    return Array.from(\n      new Set(getScopeItems(result.item).map((r) => r.name?.toString()))\n    ).map((n) => ({\n      label: `${n}`,\n      kind: CompletionItemKind.Variable,\n    }));\n  }\n\n  if (getScopeItems(result.item).length) {\n    return [\n      {\n        label: \"/delete-node/\",\n        insertText: `/delete-node/$1;`,\n        kind: CompletionItemKind.Keyword,\n        insertTextFormat: InsertTextFormat.Snippet,\n        sortText: \"~\",\n      },\n    ];\n  }\n  return [];\n}\n\nfunction getDeletePropertyItems(\n  result: SearchableResult | undefined,\n  inScope: (ast: ASTBase) => boolean\n): CompletionItem[] {\n  if (!result || !(result.item instanceof Node)) {\n    return [];\n  }\n\n  const getScopeItems = (node: Node) => {\n    return [\n      ...node.properties,\n      ...node.deletedProperties\n        .filter((n) => !inScope(n.by))\n        .map((n) => n.property),\n    ]\n      .flatMap((p) => [p, ...p.allReplaced])\n      .filter((p) => inScope(p.ast));\n  };\n\n  if (\n    result.ast instanceof PropertyName ||\n    result.ast instanceof DeleteProperty\n  ) {\n    return Array.from(\n      new Set(getScopeItems(result.item).map((p) => p.name))\n    ).map((p) => ({\n      label: `${p}`,\n      kind: CompletionItemKind.Variable,\n    }));\n  }\n\n  if (getScopeItems(result.item).length) {\n    return [\n      {\n        label: \"/delete-property/\",\n        insertText: `/delete-property/$1;`,\n        kind: CompletionItemKind.Keyword,\n        sortText: \"~\",\n        insertTextFormat: InsertTextFormat.Snippet,\n      },\n    ];\n  }\n  return [];\n}\n\nfunction getNodeRefPathsItems(\n  result: SearchableResult | undefined,\n  inScope: (ast: ASTBase) => boolean\n): CompletionItem[] {\n  const nodePathObj: ASTBase | undefined =\n    result?.ast instanceof NodePath ? result.ast : result?.ast.parentNode;\n\n  if (!result || !nodePathObj || !(nodePathObj instanceof NodePath)) {\n    return [];\n  }\n  const nodePathTemp = nodePathObj.pathParts.slice(0, -1);\n\n  if (nodePathTemp.some((p) => !p)) {\n    return [];\n  }\n\n  const nodePath = (nodePathTemp as NodeName[]).map((p) => p.toString());\n\n  const getScopeItems = () => {\n    const parentNode = result.runtime.rootNode.getChildFromScope(\n      [\"/\", ...nodePath],\n      inScope\n    );\n\n    return (\n      [\n        ...(parentNode?.nodes.filter(\n          (n) => !isDeleteChild(result.ast) || n.definitions.some(inScope)\n        ) ?? []),\n        ...(parentNode?.deletedNodes\n          .filter((n) => !inScope(n.by))\n          .map((n) => n.node) ?? []),\n      ].map((n) => n.fullName) ?? []\n    );\n  };\n\n  return getScopeItems().map((p) => ({\n    label: `/${[...nodePath, p].join(\"/\")}`,\n    kind: CompletionItemKind.Variable,\n  }));\n}\n\nexport async function getCompletions(\n  location: TextDocumentPositionParams,\n  context: ContextAware[],\n  preferredContext?: number\n): Promise<CompletionItem[]> {\n  return nodeFinder(\n    location,\n    context,\n    (locationMeta, inScope) => [\n      ...getDeletePropertyItems(locationMeta, inScope),\n      ...getDeleteNodeNameItems(locationMeta, inScope),\n      ...getDeleteNodeRefItems(locationMeta, inScope),\n      ...getNodeRefPathsItems(locationMeta, inScope),\n      ...getCreateNodeRefItems(locationMeta, inScope),\n      ...getRefLabelsItems(locationMeta, inScope),\n    ],\n    preferredContext\n  );\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location, TextDocumentPositionParams } from \"vscode-languageserver\";\nimport { ContextAware } from \"./runtimeEvaluator\";\nimport { SearchableResult } from \"./types\";\nimport { Node } from \"./context/node\";\nimport { DtcChildNode, NodeName } from \"./ast/dtc/node\";\nimport { Label } from \"./ast/dtc/label\";\nimport { LabelRef } from \"./ast/dtc/labelRef\";\nimport { nodeFinder, toRange } from \"./helpers\";\nimport { DtcProperty, PropertyName } from \"./ast/dtc/property\";\nimport { Property } from \"./context/property\";\nimport { DeleteProperty } from \"./ast/dtc/deleteProperty\";\nimport { isDeleteChild } from \"./ast/helpers\";\n\nfunction getPropertyReferences(\n  result: SearchableResult | undefined\n): Location[] {\n  if (\n    !result ||\n    result.item === null ||\n    !(result.ast instanceof PropertyName)\n  ) {\n    return [];\n  }\n\n  const getTopProperty = (property: Property): Property => {\n    if (property.replacedBy) {\n      return getTopProperty(property.replacedBy);\n    }\n\n    return property;\n  };\n\n  const gentItem = (property: Property) => {\n    return [\n      property.ast,\n      ...property.allReplaced.map((p) => p.ast),\n      ...[\n        property.parent.deletedProperties.find((p) => (p.property = property))\n          ?.by ?? [],\n      ],\n    ]\n      .map((dtc) => {\n        if (dtc instanceof DtcProperty) {\n          return Location.create(\n            `file://${dtc.uri}`,\n            toRange(dtc.propertyName ?? dtc)\n          );\n        }\n        if (dtc instanceof DeleteProperty) {\n          return Location.create(\n            `file://${dtc.uri}`,\n            toRange(dtc.propertyName ?? dtc)\n          );\n        }\n      })\n      .filter((r) => r) as Location[];\n  };\n\n  if (result.item instanceof Property && result.ast instanceof PropertyName) {\n    return gentItem(getTopProperty(result.item));\n  }\n\n  if (\n    result.item instanceof Node &&\n    result.ast instanceof PropertyName &&\n    result.ast.parentNode instanceof DeleteProperty\n  ) {\n    const property = result.item.deletedProperties.find(\n      (d) => d.by === result.ast.parentNode\n    )?.property;\n    if (property) return gentItem(property);\n  }\n\n  return [];\n}\n\nfunction getNodeReferences(result: SearchableResult | undefined): Location[] {\n  if (\n    !result ||\n    (!(result.ast instanceof NodeName) && !(result.ast instanceof Label))\n  ) {\n    return [];\n  }\n\n  const gentItem = (node: Node) => {\n    return [\n      ...node.linkedRefLabels,\n      ...node.linkedNodeNamePaths,\n      ...node.definitions,\n    ]\n      .map((dtc) => {\n        if (dtc instanceof DtcChildNode) {\n          return Location.create(`file://${dtc.uri}`, toRange(dtc.name ?? dtc));\n        }\n        if (dtc instanceof NodeName) {\n          return Location.create(`file://${dtc.uri}`, toRange(dtc));\n        }\n        if (dtc instanceof LabelRef) {\n          return Location.create(\n            `file://${dtc.uri}`,\n            toRange(dtc.label ?? dtc)\n          );\n        }\n      })\n      .filter((r) => r) as Location[];\n  };\n\n  if (result.item instanceof Node && !isDeleteChild(result.ast)) {\n    return gentItem(result.item);\n  }\n\n  if (\n    result.ast instanceof Label &&\n    result.ast.parentNode instanceof LabelRef\n  ) {\n    if (result.ast.parentNode.linksTo) {\n      return gentItem(result.ast.parentNode.linksTo);\n    }\n  }\n\n  if (result.ast instanceof NodeName) {\n    if (result.ast.linksTo) {\n      if (isDeleteChild(result.ast)) {\n        return [\n          ...gentItem(result.ast.linksTo),\n          Location.create(`file://${result.ast.uri}`, toRange(result.ast)),\n        ];\n      }\n\n      return gentItem(result.ast.linksTo);\n    }\n  }\n\n  return [];\n}\n\nexport async function getReferences(\n  location: TextDocumentPositionParams,\n  contexts: ContextAware[],\n  preferredContext?: number\n): Promise<Location[]> {\n  return nodeFinder(\n    location,\n    contexts,\n    (locationMeta) => [\n      ...getNodeReferences(locationMeta),\n      ...getPropertyReferences(locationMeta),\n    ],\n    preferredContext\n  );\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Location,\n  PrepareRenameParams,\n  RenameParams,\n  TextEdit,\n  WorkspaceEdit,\n} from \"vscode-languageserver\";\nimport { ContextAware } from \"./runtimeEvaluator\";\nimport { SearchableResult } from \"./types\";\nimport { Node } from \"./context/node\";\nimport { DtcChildNode, NodeName } from \"./ast/dtc/node\";\nimport { Label, LabelAssign } from \"./ast/dtc/label\";\nimport { LabelRef } from \"./ast/dtc/labelRef\";\nimport { nodeFinder, toRange } from \"./helpers\";\nimport { DtcProperty, PropertyName } from \"./ast/dtc/property\";\nimport { Property } from \"./context/property\";\nimport { DeleteProperty } from \"./ast/dtc/deleteProperty\";\nimport { isDeleteChild } from \"./ast/helpers\";\n\nfunction getPropertyReferences(\n  result: SearchableResult | undefined\n): Location[] {\n  if (\n    !result ||\n    result.item === null ||\n    !(result.ast instanceof PropertyName)\n  ) {\n    return [];\n  }\n\n  const getTopProperty = (property: Property): Property => {\n    if (property.replacedBy) {\n      return getTopProperty(property.replacedBy);\n    }\n\n    return property;\n  };\n\n  const gentItem = (property: Property) => {\n    return [\n      property.ast,\n      ...property.allReplaced.map((p) => p.ast),\n      ...[\n        property.parent.deletedProperties.find((p) => (p.property = property))\n          ?.by ?? [],\n      ],\n    ]\n      .map((dtc) => {\n        if (\n          (dtc instanceof DtcProperty || dtc instanceof DeleteProperty) &&\n          dtc.propertyName\n        ) {\n          return Location.create(\n            `file://${dtc.uri}`,\n            toRange(dtc.propertyName)\n          );\n        }\n      })\n      .filter((r) => r) as Location[];\n  };\n\n  if (result.item instanceof Property && result.ast instanceof PropertyName) {\n    return gentItem(getTopProperty(result.item));\n  }\n\n  if (\n    result.item instanceof Node &&\n    result.ast instanceof PropertyName &&\n    result.ast.parentNode instanceof DeleteProperty\n  ) {\n    const property = result.item.deletedProperties.find(\n      (d) => d.by === result.ast.parentNode\n    )?.property;\n    if (property) return gentItem(property);\n  }\n\n  return [];\n}\n\nfunction getNodeLabelRename(\n  location: RenameParams | PrepareRenameParams,\n  result: SearchableResult | undefined\n): Location[] {\n  if (!result || !(result.ast instanceof Label)) {\n    return [];\n  }\n\n  if (\"newName\" in location) {\n    if (\n      result.ast.parentNode instanceof LabelRef &&\n      location.newName.startsWith(\"&\")\n    ) {\n      location.newName = location.newName.slice(1);\n    } else if (\n      result.ast.parentNode instanceof LabelAssign &&\n      location.newName.endsWith(\":\")\n    ) {\n      location.newName = location.newName.slice(0, -1);\n    }\n  }\n\n  const labelValue = result.ast.value;\n\n  const gentItem = (node: Node) => {\n    return [\n      ...(\n        node.definitions.filter(\n          (d) => d instanceof DtcChildNode\n        ) as DtcChildNode[]\n      ).flatMap((d) => d.labels.map((l) => l.label)),\n      ...node.linkedRefLabels.map((l) => l.label),\n    ]\n      .filter((l) => l?.value === labelValue)\n      .map((dtc) => {\n        if (dtc) {\n          return Location.create(`file://${dtc.uri}`, toRange(dtc));\n        }\n      })\n      .filter((r) => r) as Location[];\n  };\n\n  if (result.item instanceof Node && !isDeleteChild(result.ast)) {\n    return gentItem(result.item);\n  }\n\n  if (\n    result.ast instanceof Label &&\n    result.ast.parentNode instanceof LabelRef\n  ) {\n    if (result.ast.parentNode.linksTo) {\n      return gentItem(result.ast.parentNode.linksTo);\n    }\n  }\n\n  return [];\n}\n\nfunction getNodeNameRename(result: SearchableResult | undefined): Location[] {\n  if (!result || !(result.ast instanceof NodeName)) {\n    return [];\n  }\n\n  const gentItem = (node: Node) => {\n    return [...node.linkedNodeNamePaths, ...node.definitions]\n      .map((dtc) => {\n        if (dtc instanceof DtcChildNode && dtc.name) {\n          return Location.create(`file://${dtc.uri}`, toRange(dtc.name));\n        }\n        if (dtc instanceof NodeName) {\n          return Location.create(`file://${dtc.uri}`, toRange(dtc));\n        }\n      })\n      .filter((r) => r) as Location[];\n  };\n\n  if (result.item instanceof Node && !isDeleteChild(result.ast)) {\n    return gentItem(result.item);\n  }\n\n  if (result.ast instanceof NodeName) {\n    if (result.ast.linksTo) {\n      if (isDeleteChild(result.ast)) {\n        return [\n          ...gentItem(result.ast.linksTo),\n          Location.create(`file://${result.ast.uri}`, toRange(result.ast)),\n        ];\n      }\n\n      return gentItem(result.ast.linksTo);\n    }\n  }\n\n  return [];\n}\n\nexport async function getRenameRequest(\n  location: RenameParams,\n  contexts: ContextAware[],\n  preferredContext?: number\n): Promise<WorkspaceEdit> {\n  const changes: { [uri: string]: TextEdit[] } = {};\n\n  const locationResult = await nodeFinder(\n    location,\n    contexts,\n    (locationMeta) => [\n      ...getNodeNameRename(locationMeta),\n      ...getNodeLabelRename(location, locationMeta),\n      ...getPropertyReferences(locationMeta),\n    ],\n    preferredContext\n  );\n\n  locationResult.forEach((editLocation) => {\n    changes[editLocation.uri] ??= [];\n    changes[editLocation.uri].push(\n      TextEdit.replace(editLocation.range, location.newName)\n    );\n  });\n\n  return {\n    changes,\n  };\n}\n\nexport async function getPrepareRenameRequest(\n  location: PrepareRenameParams,\n  contexts: ContextAware[],\n  lockRenameEdits: string[],\n  preferredContext?: number\n): Promise<{\n  defaultBehavior: boolean;\n}> {\n  const locationResult = await nodeFinder(\n    location,\n    contexts,\n    (locationMeta) => [\n      ...getNodeNameRename(locationMeta),\n      ...getNodeLabelRename(location, locationMeta),\n      ...getPropertyReferences(locationMeta),\n    ],\n    preferredContext\n  );\n\n  if (\n    locationResult.some((r) =>\n      lockRenameEdits.some((l) => r.uri.replace(\"file://\", \"\").startsWith(l))\n    )\n  ) {\n    throw new Error('Path is locked by user setting \"lockRenameEdits\"');\n  }\n\n  return { defaultBehavior: !!locationResult.length };\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location, TextDocumentPositionParams } from \"vscode-languageserver\";\nimport { ContextAware } from \"./runtimeEvaluator\";\nimport { SearchableResult } from \"./types\";\nimport { Node } from \"./context/node\";\nimport { DtcChildNode, DtcRefNode, NodeName } from \"./ast/dtc/node\";\nimport { Label } from \"./ast/dtc/label\";\nimport { LabelRef } from \"./ast/dtc/labelRef\";\nimport { nodeFinder, toRange } from \"./helpers\";\nimport { DtcProperty, PropertyName } from \"./ast/dtc/property\";\nimport { Property } from \"./context/property\";\nimport { DeleteProperty } from \"./ast/dtc/deleteProperty\";\nimport { isDeleteChild } from \"./ast/helpers\";\n\nfunction getPropertyDefinition(\n  result: SearchableResult | undefined\n): Location[] {\n  if (\n    !result ||\n    result.item === null ||\n    !(result.ast instanceof PropertyName)\n  ) {\n    return [];\n  }\n\n  const getTopProperty = (property: Property): Property => {\n    if (property.replacedBy) {\n      return getTopProperty(property.replacedBy);\n    }\n\n    return property;\n  };\n\n  const gentItem = (property: Property) => {\n    return [property.ast, ...property.allReplaced.map((p) => p.ast)]\n      .map((dtc) => {\n        if (dtc instanceof DtcProperty) {\n          return Location.create(\n            `file://${dtc.uri}`,\n            toRange(dtc.propertyName ?? dtc)\n          );\n        }\n      })\n      .filter((r) => r) as Location[];\n  };\n\n  if (result.item instanceof Property && result.ast instanceof PropertyName) {\n    return gentItem(getTopProperty(result.item));\n  }\n\n  if (\n    result.item instanceof Node &&\n    result.ast instanceof PropertyName &&\n    result.ast.parentNode instanceof DeleteProperty\n  ) {\n    const property = result.item.deletedProperties.find(\n      (d) => d.by === result.ast.parentNode\n    )?.property;\n    if (property) return gentItem(property);\n  }\n\n  return [];\n}\n\nfunction getNodeDefinition(result: SearchableResult | undefined): Location[] {\n  if (\n    !result ||\n    (!(result.ast instanceof NodeName) && !(result.ast instanceof Label))\n  ) {\n    return [];\n  }\n\n  const gentItem = (node: Node) => {\n    return [...node.definitions, ...node.referencedBy]\n      .map((dtc) => {\n        if (dtc instanceof DtcChildNode) {\n          return Location.create(`file://${dtc.uri}`, toRange(dtc));\n        }\n        if (dtc instanceof DtcRefNode) {\n          return Location.create(`file://${dtc.uri}`, toRange(dtc));\n        }\n      })\n      .filter((r) => r) as Location[];\n  };\n  if (result.item instanceof Node && !isDeleteChild(result.ast)) {\n    return gentItem(result.item);\n  }\n\n  if (\n    result.ast instanceof Label &&\n    result.ast.parentNode instanceof LabelRef\n  ) {\n    if (result.ast.parentNode.linksTo) {\n      return gentItem(result.ast.parentNode.linksTo);\n    }\n  }\n\n  if (result.ast instanceof NodeName) {\n    if (result.ast.linksTo) {\n      return gentItem(result.ast.linksTo);\n    }\n  }\n\n  return [];\n}\n\nexport async function getDefinitions(\n  location: TextDocumentPositionParams,\n  contexts: ContextAware[],\n  preferredContext?: number\n): Promise<Location[]> {\n  return nodeFinder(\n    location,\n    contexts,\n    (locationMeta) => [\n      ...getNodeDefinition(locationMeta),\n      ...getPropertyDefinition(locationMeta),\n    ],\n    preferredContext\n  );\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location, TextDocumentPositionParams } from \"vscode-languageserver\";\nimport { ContextAware } from \"./runtimeEvaluator\";\nimport { SearchableResult } from \"./types\";\nimport { Node } from \"./context/node\";\nimport { NodeName } from \"./ast/dtc/node\";\nimport { Label } from \"./ast/dtc/label\";\nimport { LabelRef } from \"./ast/dtc/labelRef\";\nimport { PropertyName } from \"./ast/dtc/property\";\nimport { Property } from \"./context/property\";\nimport { DeleteProperty } from \"./ast/dtc/deleteProperty\";\nimport { isDeleteChild } from \"./ast/helpers\";\nimport { nodeFinder, toRange } from \"./helpers\";\n\nfunction getPropertyDeclaration(\n  result: SearchableResult | undefined\n): Location | undefined {\n  if (\n    !result ||\n    result.item === null ||\n    !(result.ast instanceof PropertyName)\n  ) {\n    return;\n  }\n\n  const getBottomProperty = (property: Property): Property => {\n    if (property.replaces) {\n      return getBottomProperty(property.replaces);\n    }\n\n    return property;\n  };\n\n  const gentItem = (property: Property) => {\n    return Location.create(\n      `file://${property.ast.uri}`,\n      toRange(property.ast.propertyName ?? property.ast)\n    );\n  };\n\n  if (result.item instanceof Property && result.ast instanceof PropertyName) {\n    return gentItem(getBottomProperty(result.item));\n  }\n\n  if (\n    result.item instanceof Node &&\n    result.ast instanceof PropertyName &&\n    result.ast.parentNode instanceof DeleteProperty\n  ) {\n    const property = result.item.deletedProperties.find(\n      (d) => d.by === result.ast.parentNode\n    )?.property;\n    if (property) return gentItem(getBottomProperty(property));\n  }\n}\n\nfunction getNodeDeclaration(\n  result: SearchableResult | undefined\n): Location | undefined {\n  if (\n    !result ||\n    (!(result.ast instanceof NodeName) && !(result.ast instanceof Label))\n  ) {\n    return;\n  }\n\n  const gentItem = (node: Node) => {\n    const declaration = node.definitions.at(0);\n    return declaration\n      ? Location.create(`file://${declaration.uri}`, toRange(declaration))\n      : undefined;\n  };\n\n  if (result.item instanceof Node && !isDeleteChild(result.ast)) {\n    return gentItem(result.item);\n  }\n\n  if (\n    result.ast instanceof Label &&\n    result.ast.parentNode instanceof LabelRef\n  ) {\n    if (result.ast.parentNode.linksTo) {\n      return gentItem(result.ast.parentNode.linksTo);\n    }\n  }\n\n  if (result.ast instanceof NodeName) {\n    if (result.ast.linksTo) {\n      return gentItem(result.ast.linksTo);\n    }\n  }\n}\n\nexport async function getDeclaration(\n  location: TextDocumentPositionParams,\n  contexts: ContextAware[],\n  preferredContext?: number\n): Promise<Location | undefined> {\n  return (\n    await nodeFinder(\n      location,\n      contexts,\n      (locationMeta) => [\n        getNodeDeclaration(locationMeta) ||\n          getPropertyDeclaration(locationMeta),\n      ],\n      preferredContext\n    )\n  ).at(0);\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CodeAction,\n  CodeActionKind,\n  CodeActionParams,\n  Diagnostic,\n  Position,\n  Range,\n  TextEdit,\n} from \"vscode-languageserver\";\nimport { CodeActionDiagnosticData, SyntaxIssue, Token } from \"./types\";\n\nconst syntaxIssueToCodeAction = (\n  firstToken: Token,\n  lastToken: Token,\n  issue: SyntaxIssue,\n  diagnostic: Diagnostic,\n  uri: string\n): CodeAction[] | undefined => {\n  switch (issue) {\n    case SyntaxIssue.END_STATEMENT:\n      return [\n        {\n          title: \"Add semicolon\",\n          diagnostics: [diagnostic],\n          kind: CodeActionKind.SourceFixAll,\n          isPreferred: true,\n          edit: {\n            changes: {\n              [uri]: [\n                TextEdit.insert(\n                  Position.create(\n                    diagnostic.range.end.line,\n                    diagnostic.range.end.character\n                  ),\n                  \";\"\n                ),\n              ],\n            },\n          },\n        },\n      ];\n    case SyntaxIssue.CURLY_OPEN:\n      return [\n        {\n          title: \"Add open curly\",\n          diagnostics: [diagnostic],\n          kind: CodeActionKind.SourceFixAll,\n          isPreferred: true,\n          edit: {\n            changes: {\n              [uri]: [\n                TextEdit.insert(\n                  Position.create(\n                    diagnostic.range.end.line,\n                    diagnostic.range.end.character\n                  ),\n                  \" {\"\n                ),\n              ],\n            },\n          },\n        },\n      ];\n    case SyntaxIssue.WHITE_SPACE:\n      return [\n        {\n          title: \"Remove white space\",\n          diagnostics: [diagnostic],\n          kind: CodeActionKind.SourceFixAll,\n          isPreferred: true,\n          edit: {\n            changes: {\n              [uri]: [\n                TextEdit.replace(\n                  Range.create(\n                    Position.create(\n                      diagnostic.range.start.line,\n                      firstToken.pos.col + firstToken.pos.len\n                    ),\n                    Position.create(\n                      diagnostic.range.end.line,\n                      lastToken.pos.col\n                    )\n                  ),\n                  \"\"\n                ),\n              ],\n            },\n          },\n        },\n      ];\n    case SyntaxIssue.CURLY_CLOSE:\n      return [\n        {\n          title: \"Add close curly\",\n          diagnostics: [diagnostic],\n          kind: CodeActionKind.QuickFix,\n          isPreferred: true,\n          edit: {\n            changes: {\n              [uri]: [\n                TextEdit.insert(\n                  Position.create(\n                    diagnostic.range.end.line,\n                    diagnostic.range.end.character\n                  ),\n                  \"}\"\n                ),\n              ],\n            },\n          },\n        },\n      ];\n    case SyntaxIssue.FORWARD_SLASH_START_PATH:\n      return [\n        {\n          title: \"Add '/'\",\n          diagnostics: [diagnostic],\n          kind: CodeActionKind.QuickFix,\n          isPreferred: true,\n          edit: {\n            changes: {\n              [uri]: [\n                TextEdit.insert(\n                  Position.create(\n                    diagnostic.range.end.line,\n                    diagnostic.range.end.character\n                  ),\n                  \"/\"\n                ),\n              ],\n            },\n          },\n        },\n      ];\n    case SyntaxIssue.MISSING_COMMA:\n      return [\n        {\n          title: \"Add comma\",\n          diagnostics: [diagnostic],\n          kind: CodeActionKind.SourceFixAll,\n          isPreferred: true,\n          edit: {\n            changes: {\n              [uri]: [\n                TextEdit.insert(\n                  Position.create(\n                    diagnostic.range.end.line,\n                    diagnostic.range.end.character\n                  ),\n                  \",\"\n                ),\n              ],\n            },\n          },\n        },\n      ];\n    case SyntaxIssue.MISSING_FORWARD_SLASH_END:\n      return [\n        {\n          title: \"Add '/'\",\n          diagnostics: [diagnostic],\n          kind: CodeActionKind.SourceFixAll,\n          isPreferred: true,\n          edit: {\n            changes: {\n              [uri]: [\n                TextEdit.insert(\n                  Position.create(\n                    diagnostic.range.end.line,\n                    diagnostic.range.end.character\n                  ),\n                  \"/\"\n                ),\n              ],\n            },\n          },\n        },\n      ];\n    case SyntaxIssue.NO_STATEMENT:\n      return [\n        {\n          title: \"Remove ';'\",\n          diagnostics: [diagnostic],\n          kind: CodeActionKind.SourceFixAll,\n          isPreferred: true,\n          edit: {\n            changes: {\n              [uri]: [TextEdit.del(diagnostic.range)],\n            },\n          },\n        },\n      ];\n    case SyntaxIssue.DELETE_NODE_INCOMPLETE:\n      return [\n        {\n          title: \"Complete Keyword '/delete-node/\",\n          diagnostics: [diagnostic],\n          kind: CodeActionKind.SourceFixAll,\n          isPreferred: true,\n          edit: {\n            changes: {\n              [uri]: [TextEdit.replace(diagnostic.range, \"/delete-node/\")],\n            },\n          },\n        },\n      ];\n    case SyntaxIssue.DELETE_PROPERTY_INCOMPLETE:\n      return [\n        {\n          title: \"Complete Keyword '/delete-property/\",\n          diagnostics: [diagnostic],\n          kind: CodeActionKind.SourceFixAll,\n          isPreferred: true,\n          edit: {\n            changes: {\n              [uri]: [TextEdit.replace(diagnostic.range, \"/delete-property/\")],\n            },\n          },\n        },\n      ];\n    case SyntaxIssue.DELETE_INCOMPLETE:\n      return [\n        {\n          title: \"Complete Keyword '/delete-property/\",\n          diagnostics: [diagnostic],\n          kind: CodeActionKind.QuickFix,\n          isPreferred: true,\n          edit: {\n            changes: {\n              [uri]: [TextEdit.replace(diagnostic.range, \"/delete-property/\")],\n            },\n          },\n        },\n        {\n          title: \"Complete Keyword '/delete-node/\",\n          diagnostics: [diagnostic],\n          kind: CodeActionKind.QuickFix,\n          isPreferred: true,\n          edit: {\n            changes: {\n              [uri]: [TextEdit.replace(diagnostic.range, \"/delete-node/\")],\n            },\n          },\n        },\n      ];\n    case SyntaxIssue.GT_SYM:\n      return [\n        {\n          title: \"Add '>'\",\n          diagnostics: [diagnostic],\n          kind: CodeActionKind.SourceFixAll,\n          isPreferred: true,\n          edit: {\n            changes: {\n              [uri]: [\n                TextEdit.insert(\n                  Position.create(\n                    diagnostic.range.end.line,\n                    diagnostic.range.end.character\n                  ),\n                  \">\"\n                ),\n              ],\n            },\n          },\n        },\n      ];\n    default:\n      return;\n  }\n};\n\nexport function getCodeActions(\n  codeActionParams: CodeActionParams\n): CodeAction[] {\n  const results = codeActionParams.context.diagnostics\n    .flatMap((diagnostic) => {\n      const tmp = diagnostic.data as CodeActionDiagnosticData | undefined;\n      return tmp?.issues.flatMap((issue) =>\n        syntaxIssueToCodeAction(\n          tmp.firstToken,\n          tmp.lastToken,\n          issue,\n          diagnostic,\n          codeActionParams.textDocument.uri\n        )\n      );\n    })\n    .filter((c) => !!c) as CodeAction[];\n\n  const onSaveAuto = results.filter(\n    (r) => r.kind === CodeActionKind.SourceFixAll\n  );\n  const others = results.filter((r) => r.kind !== CodeActionKind.SourceFixAll);\n  const combinedEdits = onSaveAuto.flatMap(\n    (p) => p.edit?.changes?.[codeActionParams.textDocument.uri] ?? []\n  );\n\n  return [\n    ...others,\n    ...onSaveAuto.map((o) => ({ ...o, kind: CodeActionKind.QuickFix })),\n    ...(combinedEdits.length\n      ? [\n          {\n            title: \"Fix All\",\n            kind: CodeActionKind.SourceFixAll,\n            isPreferred: true,\n            edit: {\n              changes: {\n                [codeActionParams.textDocument.uri]: combinedEdits,\n              },\n            },\n          },\n        ]\n      : []),\n  ];\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DocumentFormattingParams,\n  Position,\n  Range,\n  TextEdit,\n} from \"vscode-languageserver\";\nimport { ContextAware } from \"./runtimeEvaluator\";\nimport { DtcBaseNode, DtcChildNode, DtcRefNode } from \"./ast/dtc/node\";\nimport { DtcProperty } from \"./ast/dtc/property\";\nimport { DeleteBase } from \"./ast/dtc/delete\";\nimport { ASTBase } from \"./ast/base\";\nimport { Token } from \"./types\";\nimport { PropertyValues } from \"./ast/dtc/values/values\";\nimport { PropertyValue } from \"./ast/dtc/values/value\";\nimport { AllValueType } from \"./ast/dtc/types\";\nimport { ArrayValues } from \"./ast/dtc/values/arrayValue\";\nimport { ByteStringValue } from \"./ast/dtc/values/byteString\";\nimport { LabeledValue } from \"./ast/dtc/values/labeledValue\";\n\nexport function getDocumentFormatting(\n  documentFormattingParams: DocumentFormattingParams,\n  contextAware: ContextAware[]\n): TextEdit[] {\n  const parser = contextAware.find(\n    (c) =>\n      c.parser.uri ===\n      documentFormattingParams.textDocument.uri.replace(\"file://\", \"\")\n  );\n\n  return parser\n    ? parser.parser.allAstItems.flatMap((base) =>\n        getTextEdit(documentFormattingParams, base)\n      )\n    : [];\n}\n\nconst removeNewLinesBetweenTokenAndPrev = (\n  token: Token,\n  expectedNewLines = 1\n): TextEdit | undefined => {\n  if (token.prevToken) {\n    const diffNumberOfLins = token.pos.line - token.prevToken.pos.line;\n    const linesToRemove = diffNumberOfLins - expectedNewLines;\n\n    if (\n      linesToRemove &&\n      ((diffNumberOfLins !== 2 && expectedNewLines !== 0) ||\n        expectedNewLines === 0)\n    ) {\n      return TextEdit.replace(\n        Range.create(\n          Position.create(\n            token.prevToken.pos.line,\n            token.prevToken.pos.col + token.prevToken.pos.len\n          ),\n          Position.create(token.pos.line - expectedNewLines, token.pos.col)\n        ),\n        \"\".padEnd(expectedNewLines - 1, \"\\n\")\n      );\n    }\n  }\n};\n\nconst pushItemToNewLine = (\n  documentFormattingParams: DocumentFormattingParams,\n  token: Token,\n  level: number\n): TextEdit | undefined => {\n  const delta = documentFormattingParams.options.tabSize;\n  const expectedIndent = level * delta;\n\n  const newLine = token.pos.line === token.prevToken?.pos.line;\n\n  if (newLine) {\n    return TextEdit.replace(\n      Range.create(\n        Position.create(token.pos.line, token.pos.col),\n        Position.create(token.pos.line, token.pos.col)\n      ),\n      `\\n${\"\".padStart(expectedIndent, \" \")}`\n    );\n  }\n};\n\nconst createIndentEdit = (token: Token, expectedIndent: number): TextEdit => {\n  return TextEdit.replace(\n    Range.create(\n      Position.create(token.pos.line, 0),\n      Position.create(token.pos.line, token.pos.col)\n    ),\n    \"\".padStart(expectedIndent, \" \")\n  );\n};\n\nconst fixedNumberOfSpaceBetweenTokensAndNext = (\n  token: Token,\n  expectedSpaces = 1\n): TextEdit[] => {\n  if (!token.nextToken) return [];\n  if (token.nextToken?.pos.line !== token.pos.line) {\n    const removeNewLinesEdit = removeNewLinesBetweenTokenAndPrev(\n      token.nextToken,\n      0\n    );\n    if (!removeNewLinesEdit) {\n      throw new Error(\"remove new LinesEdit must be defined\");\n    }\n    return [\n      TextEdit.insert(\n        Position.create(token.pos.line, token.pos.col + token.pos.len),\n        \"\".padEnd(expectedSpaces, \" \")\n      ),\n      removeNewLinesEdit,\n    ];\n  }\n\n  const numberOfWhiteSpace =\n    token.nextToken.pos.col - (token.pos.col + token.pos.len);\n\n  if (numberOfWhiteSpace === expectedSpaces) return [];\n\n  return [\n    TextEdit.replace(\n      Range.create(\n        Position.create(token.pos.line, token.pos.col + token.pos.len),\n        Position.create(token.nextToken.pos.line, token.nextToken.pos.col)\n      ),\n      \"\".padEnd(expectedSpaces, \" \")\n    ),\n  ];\n};\n\nconst formatDtcNode = (\n  documentFormattingParams: DocumentFormattingParams,\n  node: DtcBaseNode,\n  level: number\n): TextEdit[] => {\n  const result: TextEdit[] = [];\n  const delta = documentFormattingParams.options.tabSize;\n  const expectedIndent = level * delta;\n\n  const editToMoveToNewLine = pushItemToNewLine(\n    documentFormattingParams,\n    node.firstToken,\n    level\n  );\n\n  if (editToMoveToNewLine) {\n    result.push(editToMoveToNewLine);\n  } else {\n    result.push(createIndentEdit(node.firstToken, expectedIndent));\n    const edit = removeNewLinesBetweenTokenAndPrev(node.firstToken);\n    if (edit) result.push(edit);\n  }\n\n  if (node instanceof DtcChildNode || node instanceof DtcRefNode) {\n    result.push(\n      ...node.labels.flatMap((label) =>\n        fixedNumberOfSpaceBetweenTokensAndNext(label.lastToken)\n      )\n    );\n\n    if (node instanceof DtcChildNode) {\n      const nodeNameAndOpenCurlySpacing =\n        node.name && node.openScope\n          ? fixedNumberOfSpaceBetweenTokensAndNext(node.name.lastToken)\n          : [];\n      result.push(...nodeNameAndOpenCurlySpacing);\n    } else {\n      const nodeNameAndOpenCurlySpacing =\n        node.labelReference && node.openScope\n          ? fixedNumberOfSpaceBetweenTokensAndNext(\n              node.labelReference.lastToken\n            )\n          : [];\n      result.push(...nodeNameAndOpenCurlySpacing);\n    }\n  }\n\n  result.push(\n    ...node.children.flatMap((c) =>\n      getTextEdit(documentFormattingParams, c, level + 1)\n    )\n  );\n\n  if (node.closeScope) {\n    const editToMoveToNewLine = pushItemToNewLine(\n      documentFormattingParams,\n      node.closeScope,\n      level\n    );\n\n    if (editToMoveToNewLine) {\n      result.push(editToMoveToNewLine);\n    } else {\n      result.push(createIndentEdit(node.closeScope, expectedIndent));\n      const edit = removeNewLinesBetweenTokenAndPrev(node.closeScope);\n      if (edit) result.push(edit);\n    }\n  }\n\n  const endStatementSpacing =\n    node.lastToken.value === \";\" && node.lastToken.prevToken\n      ? fixedNumberOfSpaceBetweenTokensAndNext(node.lastToken.prevToken, 0)\n      : [];\n\n  result.push(...endStatementSpacing);\n\n  return result;\n};\n\nconst formatLabeledValue = <T extends ASTBase>(\n  documentFormattingParams: DocumentFormattingParams,\n  value: LabeledValue<T>,\n  level: number,\n  index: number\n): TextEdit[] => {\n  const result: TextEdit[] = [];\n  const delta = documentFormattingParams.options.tabSize;\n\n  if (\n    value.firstToken.prevToken &&\n    value.firstToken.pos.line === value.firstToken.prevToken.pos.line\n  ) {\n    result.push(\n      ...fixedNumberOfSpaceBetweenTokensAndNext(\n        value.firstToken.prevToken,\n        index === 0 ? 0 : 1\n      )\n    );\n  } else if (\n    value.firstToken.pos.line !== value.firstToken.prevToken?.pos.line\n  ) {\n    const edit = removeNewLinesBetweenTokenAndPrev(value.firstToken);\n    if (edit) result.push(edit);\n    result.push(createIndentEdit(value.firstToken, (level + 1) * delta));\n  }\n  value.value;\n\n  return result;\n};\n\nconst formatValue = (\n  documentFormattingParams: DocumentFormattingParams,\n  value: AllValueType,\n  level: number\n): TextEdit[] => {\n  const result: TextEdit[] = [];\n\n  if (value instanceof ArrayValues || value instanceof ByteStringValue) {\n    result.push(\n      ...value.values.flatMap((v, i) =>\n        formatLabeledValue(documentFormattingParams, v, level, i)\n      )\n    );\n    const lastValue = value.values.at(-1);\n    if (lastValue?.lastToken) {\n      result.push(\n        ...fixedNumberOfSpaceBetweenTokensAndNext(lastValue.lastToken, 0)\n      );\n    }\n  }\n  return result;\n};\n\nconst formatPropertyValue = (\n  documentFormattingParams: DocumentFormattingParams,\n  value: PropertyValue,\n  level: number\n): TextEdit[] => {\n  const delta = documentFormattingParams.options.tabSize;\n\n  const result: TextEdit[] = [];\n  if (value.firstToken.prevToken?.value === \",\") {\n    if (value.firstToken.prevToken.pos.line === value.firstToken.pos.line) {\n      result.push(\n        ...fixedNumberOfSpaceBetweenTokensAndNext(value.firstToken.prevToken, 1)\n      );\n    } else {\n      const edit = removeNewLinesBetweenTokenAndPrev(value.firstToken);\n      if (edit) result.push(edit);\n      result.push(createIndentEdit(value.firstToken, (level + 1) * delta));\n    }\n  }\n\n  if (value.lastToken.nextToken?.value === \",\") {\n    result.push(...fixedNumberOfSpaceBetweenTokensAndNext(value.lastToken, 0));\n  }\n\n  result.push(...formatValue(documentFormattingParams, value.value, level));\n\n  result.push(\n    ...value.endLabels.flatMap((label) =>\n      fixedNumberOfSpaceBetweenTokensAndNext(label.lastToken)\n    )\n  );\n  return result;\n};\n\nconst formatPropertyValues = (\n  documentFormattingParams: DocumentFormattingParams,\n  values: PropertyValues,\n  level: number\n): TextEdit[] => {\n  return [\n    ...values.labels.flatMap((label) =>\n      fixedNumberOfSpaceBetweenTokensAndNext(label.lastToken)\n    ),\n    ...values.values.flatMap((value) =>\n      value ? formatPropertyValue(documentFormattingParams, value, level) : []\n    ),\n  ];\n};\n\nconst formatDtcProperty = (\n  documentFormattingParams: DocumentFormattingParams,\n  property: DtcProperty,\n  level: number\n): TextEdit[] => {\n  const result: TextEdit[] = [];\n  const delta = documentFormattingParams.options.tabSize;\n  const expectedIndent = level * delta;\n\n  const editToMoveToNewLine = pushItemToNewLine(\n    documentFormattingParams,\n    property.firstToken,\n    level\n  );\n\n  if (editToMoveToNewLine) {\n    result.push(editToMoveToNewLine);\n  } else {\n    result.push(createIndentEdit(property.firstToken, expectedIndent));\n    const edit = removeNewLinesBetweenTokenAndPrev(property.firstToken);\n    if (edit) result.push(edit);\n  }\n\n  result.push(\n    ...property.labels.flatMap((label) =>\n      fixedNumberOfSpaceBetweenTokensAndNext(label.lastToken)\n    )\n  );\n\n  if (property.values) {\n    if (property.propertyName) {\n      result.push(\n        ...fixedNumberOfSpaceBetweenTokensAndNext(\n          property.propertyName?.lastToken\n        )\n      );\n      if (property.propertyName?.lastToken.nextToken?.value === \"=\") {\n        result.push(\n          ...fixedNumberOfSpaceBetweenTokensAndNext(\n            property.propertyName?.lastToken.nextToken\n          )\n        );\n      }\n    }\n    result.push(\n      ...formatPropertyValues(documentFormattingParams, property.values, level)\n    );\n  }\n\n  const endStatementSpacing =\n    property.lastToken.value === \";\" && property.lastToken.prevToken\n      ? fixedNumberOfSpaceBetweenTokensAndNext(property.lastToken.prevToken, 0)\n      : [];\n\n  result.push(...endStatementSpacing);\n\n  return result;\n};\n\nconst formatDtcDelete = (\n  documentFormattingParams: DocumentFormattingParams,\n  deleteItem: DeleteBase,\n  level: number\n): TextEdit[] => {\n  const result: TextEdit[] = [];\n  const delta = documentFormattingParams.options.tabSize;\n  const expectedIndent = level * delta;\n\n  const editToMoveToNewLine = pushItemToNewLine(\n    documentFormattingParams,\n    deleteItem.firstToken,\n    level\n  );\n\n  if (editToMoveToNewLine) {\n    result.push(editToMoveToNewLine);\n  } else {\n    result.push(createIndentEdit(deleteItem.firstToken, expectedIndent));\n  }\n\n  const keywordAndItemSpacing = fixedNumberOfSpaceBetweenTokensAndNext(\n    deleteItem.keyword.lastToken\n  );\n  result.push(...keywordAndItemSpacing);\n\n  const endStatementSpacing =\n    deleteItem.lastToken.value === \";\" && deleteItem.lastToken.prevToken\n      ? fixedNumberOfSpaceBetweenTokensAndNext(\n          deleteItem.lastToken.prevToken,\n          0\n        )\n      : [];\n\n  result.push(...endStatementSpacing);\n\n  return result;\n};\n\nconst getTextEdit = (\n  documentFormattingParams: DocumentFormattingParams,\n  astNode: ASTBase,\n  level = 0\n): TextEdit[] => {\n  const delta = documentFormattingParams.options.tabSize;\n  const expectedIndent = level * delta;\n\n  if (astNode instanceof DtcBaseNode) {\n    return formatDtcNode(documentFormattingParams, astNode, level);\n  } else if (astNode instanceof DtcProperty) {\n    return formatDtcProperty(documentFormattingParams, astNode, level);\n  } else if (astNode instanceof DeleteBase) {\n    return formatDtcDelete(documentFormattingParams, astNode, level);\n  }\n\n  return [];\n};\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CompletionItem,\n  CompletionItemKind,\n  TextDocumentPositionParams,\n} from \"vscode-languageserver\";\nimport { ContextAware } from \"./runtimeEvaluator\";\nimport { SearchableResult } from \"./types\";\nimport { Node } from \"./context/node\";\nimport { DtcProperty, PropertyName } from \"./ast/dtc/property\";\nimport { Property } from \"./context/property\";\nimport { nodeFinder } from \"./helpers\";\nimport { isDeleteChild } from \"./ast/helpers\";\n\nfunction getPropertyAssignItems(\n  result: SearchableResult | undefined\n): CompletionItem[] {\n  if (\n    !result ||\n    !(result.item instanceof Property) ||\n    !(\n      result.ast instanceof DtcProperty &&\n      (result.ast.values || result.ast.values === null)\n    )\n  ) {\n    return [];\n  }\n\n  return (\n    result.item.parent.nodeType?.properties\n      .find((p) => p.name === result.item?.name)\n      ?.getPropertyCompletionItems(result.item) ?? []\n  );\n}\n\nfunction getPropertyNamesItems(\n  result: SearchableResult | undefined\n): CompletionItem[] {\n  if (\n    !result ||\n    !(\n      (result.item instanceof Property &&\n        result.ast instanceof PropertyName &&\n        result.item.ast.values === null) ||\n      result.item instanceof Node\n    ) ||\n    isDeleteChild(result.ast)\n  ) {\n    return [];\n  }\n\n  const getItems = (node: Node) => {\n    return (\n      node.nodeType?.properties\n        .filter(\n          (p) =>\n            !p.hideAutoComplete &&\n            p.required(node) !== \"omitted\" &&\n            typeof p.name === \"string\"\n        )\n        .map((p) => {\n          const required = node && p.required(node);\n          const hasProperty = !!node.properties.some((pp) =>\n            p.getNameMatch(pp.name)\n          );\n          let sortLetter = \"a\";\n          if (required) {\n            sortLetter = hasProperty ? \"Y\" : \"A\";\n          } else {\n            sortLetter = hasProperty ? \"Z\" : \"B\";\n          }\n\n          return {\n            label: `${p.name}`,\n            kind: CompletionItemKind.Property,\n            sortText: `${sortLetter}${p.name}`,\n          };\n        }) ?? []\n    );\n  };\n\n  if (result.item instanceof Property) {\n    return getItems(result.item.parent);\n  }\n\n  return getItems(result.item);\n}\n\nexport async function getTypeCompletions(\n  location: TextDocumentPositionParams,\n  context: ContextAware[],\n  preferredContext?: number\n): Promise<CompletionItem[]> {\n  return nodeFinder(\n    location,\n    context,\n    (locationMeta) => [\n      ...getPropertyAssignItems(locationMeta),\n      ...getPropertyNamesItems(locationMeta),\n    ],\n    preferredContext\n  );\n}\n", "/*\n * Copyright 2024 Kyle Micallef Bonnici\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Hover, HoverParams, MarkupContent } from \"vscode-languageserver\";\nimport { SearchableResult } from \"./types\";\nimport { nodeFinder, toRange } from \"./helpers\";\nimport { ContextAware } from \"./runtimeEvaluator\";\nimport { Node } from \"./context/node\";\nimport { NodeName } from \"./ast/dtc/node\";\nimport { LabelRef } from \"./ast/dtc/labelRef\";\nimport { Property } from \"./context/property\";\nimport { PropertyName } from \"./ast/dtc/property\";\n\nfunction getNode(result: SearchableResult | undefined): Hover | undefined {\n  if (result?.item instanceof Node) {\n    return {\n      contents: result.item.toMarkupContent(),\n      range: toRange(result.ast),\n    };\n  }\n\n  if (result?.ast instanceof NodeName) {\n    const node = result.ast.linksTo;\n    if (node) {\n      return {\n        contents: node.toMarkupContent(),\n        range: toRange(result.ast),\n      };\n    }\n  }\n\n  if (result?.ast.parentNode instanceof LabelRef) {\n    const node = result.ast.parentNode.linksTo;\n    if (node) {\n      return {\n        contents: node.toMarkupContent(),\n        range: toRange(result.ast),\n      };\n    }\n  }\n}\n\nfunction getPropertyName(\n  result: SearchableResult | undefined\n): Hover | undefined {\n  if (result?.item instanceof Property && result.ast instanceof PropertyName) {\n    const markup = result.item.parent.nodeType?.getOnPropertyHover(\n      result.item.name\n    );\n\n    if (markup) {\n      return {\n        contents: markup,\n        range: toRange(result.ast),\n      };\n    }\n  }\n}\n\nexport function getHover(\n  hoverParams: HoverParams,\n  context: ContextAware[],\n  preferredContext?: number\n): Promise<(Hover | undefined)[]> {\n  return nodeFinder<Hover | undefined>(\n    hoverParams,\n    context,\n    (locationMeta) => [getNode(locationMeta) || getPropertyName(locationMeta)],\n    preferredContext\n  );\n}\n", "import { getStandardType } from \"../../../dtsTypes/standardTypes\";\nimport {\n  NodeType,\n  PropertyNodeType,\n  PropertyType,\n} from \"../../../dtsTypes/types\";\nimport { Node } from \"../../../context/node\";\nimport yaml from \"yaml\";\nimport { glob } from \"glob\";\nimport { resolve, basename } from \"path\";\nimport { readFileSync } from \"fs\";\nimport { StringValue } from \"../../../ast/dtc/values/string\";\nimport {\n  flatNumberValues,\n  generateOrTypeObj,\n  getU32ValueFromProperty,\n  resolvePhandleNode,\n} from \"../../../dtsTypes/standardTypes/helpers\";\nimport { Issue, StandardTypeIssue } from \"../../../types\";\nimport { genIssue } from \"../../../helpers\";\nimport { DiagnosticSeverity, DiagnosticTag } from \"vscode-languageserver\";\nimport { Property } from \"../../../context/property\";\n\ntype ZephyrPropertyType =\n  | \"string\"\n  | \"int\"\n  | \"boolean\"\n  | \"array\"\n  | \"uint8-array\"\n  | \"string-array\"\n  | \"phandle\"\n  | \"phandles\"\n  | \"phandle-array\"\n  | \"path\"\n  | \"compound\";\n\ntype ZephyrBindingsProperty = {\n  required: boolean;\n  type: ZephyrPropertyType;\n  deprecated?: false;\n  default?: string | number | (string | number)[];\n  description?: string;\n  enum?: (string | number)[];\n  const?: string | number | (string | number)[];\n  \"specifier-space\"?: string;\n};\ninterface ZephyrBindingYml {\n  filePath: string;\n  include: { name: string; \"property-blocklist\"?: string[] }[];\n  description?: string;\n  compatible?: string;\n  \"child-binding\"?: ZephyrBindingYml;\n  bus: string | string[];\n  \"on-bus\": string;\n  properties?: {\n    [key: string]: ZephyrBindingsProperty;\n  };\n  [key: CellSpecifier]: string[];\n}\n\ntype CellSpecifier = `${string}-cells`;\n\nconst ZephyrTypeToDTSType = (type: ZephyrPropertyType) => {\n  switch (type) {\n    case \"string\":\n      return generateOrTypeObj(PropertyType.STRING);\n    case \"int\":\n      return generateOrTypeObj(PropertyType.U32);\n    case \"boolean\":\n      return generateOrTypeObj(PropertyType.EMPTY);\n    case \"array\":\n      return generateOrTypeObj(PropertyType.PROP_ENCODED_ARRAY);\n    case \"uint8-array\":\n      return generateOrTypeObj(PropertyType.BYTESTRING);\n    case \"string-array\":\n      return generateOrTypeObj(PropertyType.STRINGLIST);\n    case \"phandle\":\n      return generateOrTypeObj(PropertyType.U32);\n    case \"phandles\":\n      return generateOrTypeObj(PropertyType.PROP_ENCODED_ARRAY);\n    case \"phandle-array\":\n      return generateOrTypeObj(PropertyType.PROP_ENCODED_ARRAY);\n    case \"path\":\n      return generateOrTypeObj([PropertyType.STRING, PropertyType.U32]);\n    case \"compound\":\n      return generateOrTypeObj(PropertyType.ANY);\n  }\n\n  return generateOrTypeObj(PropertyType.UNKNOWN);\n};\n\nconst ZephyrDefaultTypeDefault = (type: ZephyrPropertyType, def: any) => {\n  switch (type) {\n    case \"string\":\n      return typeof def === \"string\" ? def : undefined;\n    case \"int\":\n      return typeof def === \"number\" ? def : undefined;\n    case \"boolean\":\n      return undefined;\n    case \"array\":\n      return Array.isArray(def) && def.every((v) => typeof v === \"number\")\n        ? def\n        : undefined;\n    case \"uint8-array\":\n      return Array.isArray(def) && def.every((v) => typeof v === \"number\")\n        ? def\n        : undefined;\n    case \"string-array\":\n      return Array.isArray(def) && def.every((v) => typeof v === \"string\")\n        ? def\n        : undefined;\n    case \"phandle\":\n      return undefined;\n    case \"phandles\":\n      return undefined;\n    case \"phandle-array\":\n      return undefined;\n    case \"path\":\n      return undefined;\n    case \"compound\":\n      return undefined;\n  }\n\n  return undefined;\n};\n\nconst resolveBinding = (\n  bindings: ZephyrBindingYml[],\n  binding: ZephyrBindingYml\n): ZephyrBindingYml | undefined => {\n  binding = binding.include.reduce((p, c) => {\n    const toMergeIn = bindings.find((b) => basename(b.filePath) === c.name);\n    if (toMergeIn) {\n      const propertiesToExclude = c[\"property-blocklist\"];\n      p.include = p.include.filter((i) => i !== c);\n      return mergeAintoB(bindings, toMergeIn, p, propertiesToExclude) ?? p;\n    }\n    console.warn(`Unable to find ${c}`);\n    return p;\n  }, binding);\n\n  if (binding[\"child-binding\"]) {\n    binding[\"child-binding\"].include = simplifiyInclude(\n      binding[\"child-binding\"].include\n    );\n    binding[\"child-binding\"] = resolveBinding(\n      bindings,\n      binding[\"child-binding\"]\n    );\n  }\n\n  if (!binding.include.length) {\n    return binding;\n  }\n};\n\nconst mergeAintoB = (\n  bindings: ZephyrBindingYml[],\n  a: ZephyrBindingYml,\n  b: ZephyrBindingYml,\n  propertiesToExclude: string[] = []\n): ZephyrBindingYml | undefined => {\n  const resolvedA = resolveBinding(bindings, a);\n  const resolvedB = resolveBinding(bindings, b);\n\n  if (!resolvedA || !resolvedB) {\n    return;\n  }\n\n  // merge properties\n  const allPropertiesNames = new Set<string>();\n  Object.keys(resolvedA?.properties ?? {}).forEach((name) =>\n    allPropertiesNames.add(name)\n  );\n  Object.keys(resolvedB?.properties ?? {}).forEach((name) =>\n    allPropertiesNames.add(name)\n  );\n\n  let newProperties = {};\n  Array.from(allPropertiesNames).forEach((name) => {\n    const propertyFromA = propertiesToExclude?.some((n) => n === name)\n      ? {}\n      : resolvedA.properties?.[name] ?? {};\n    const propertyFromB = resolvedB.properties?.[name] ?? {};\n\n    newProperties = {\n      ...newProperties,\n      [name]: {\n        ...propertyFromA,\n        ...propertyFromB,\n      },\n    };\n  });\n\n  resolvedB.properties = newProperties;\n\n  // merge cell specifiers\n  const allSpecifierNames = new Set<string>();\n  const cellsAKeys = Object.keys(resolvedA).filter((key) =>\n    key.endsWith(\"-cells\")\n  );\n  cellsAKeys.forEach((name) => allSpecifierNames.add(name));\n  const cellsBKeys = Object.keys(resolvedA).filter((key) =>\n    key.endsWith(\"-cells\")\n  );\n  cellsBKeys.forEach((name) => allSpecifierNames.add(name));\n\n  Array.from(allSpecifierNames).forEach((name) => {\n    const fromA = resolvedA[name as CellSpecifier] ?? [];\n    const fromB = resolvedB[name as CellSpecifier] ?? [];\n\n    resolvedB[name as CellSpecifier] = Array.from([...fromA, ...fromB]);\n  });\n\n  return resolvedB;\n};\n\nconst simplifiyInclude = (\n  include:\n    | string\n    | (string | { name: string; \"property-blocklist\"?: string[] })[]\n    | undefined\n): { name: string; \"property-blocklist\"?: string[] }[] => {\n  if (!include) {\n    return [];\n  }\n  if (typeof include === \"string\") {\n    return [{ name: include }];\n  }\n\n  return include.map((i) => (typeof i !== \"string\" ? i : { name: i }));\n};\n\nexport class ZephyrBindingsLoader {\n  private typeCache: NodeType[] = [];\n  private readFolders: string[] = [];\n\n  static getNodeCompatible(node: Node) {\n    const compatible = node.getProperty(\"compatible\");\n    const values = compatible?.ast.values;\n\n    if (values?.values.some((v) => !(v?.value instanceof StringValue))) return;\n\n    return values?.values.map((v) => (v?.value as StringValue).value);\n  }\n\n  getNodeTypes(folders: string[], node: Node): NodeType[] {\n    const compatible = ZephyrBindingsLoader.getNodeCompatible(node);\n\n    if (!compatible) {\n      return [getStandardType()];\n    }\n\n    const cachedType = this.typeCache.filter((t) =>\n      folders.some(\n        (f) =>\n          compatible.some((c) => c === t.compatible) &&\n          t.bindingsPath?.startsWith(f)\n      )\n    );\n\n    if (cachedType.length) {\n      return cachedType;\n    }\n\n    this.loadTypeAndCache(folders);\n    const out = this.typeCache.filter((t) =>\n      folders.some(\n        (f) =>\n          compatible.some((c) => c === t.compatible) &&\n          t.bindingsPath?.startsWith(f)\n      )\n    );\n    return out.length ? out : [getStandardType()];\n  }\n\n  private loadTypeAndCache(folders: string | string[]) {\n    folders = Array.isArray(folders) ? folders : [folders];\n\n    folders.forEach((f) => {\n      if (this.readFolders.indexOf(f) !== -1) {\n        return;\n      }\n\n      this.readFolders.push(f);\n\n      const g = glob.sync(\"**/*.yaml\", { cwd: f, ignore: \"test/*\" });\n      const bindings = g\n        .map((bindingFile) => {\n          bindingFile = resolve(f, bindingFile);\n          try {\n            const readData = yaml.parse(readFileSync(bindingFile, \"utf-8\"));\n            return {\n              ...readData,\n              include: simplifiyInclude(readData.include),\n              filePath: bindingFile,\n            } as ZephyrBindingYml;\n          } catch (e) {\n            console.warn(e);\n          }\n        })\n        .filter((b) => !!b) as ZephyrBindingYml[];\n\n      const resolvedBindings = bindings\n        .map((b) => resolveBinding(bindings, b))\n        .filter((b) => !!b && !b.include.length) as ZephyrBindingYml[];\n      this.typeCache.push(...convertBindingsToType(resolvedBindings));\n    });\n  }\n}\n\nlet zephyrBindingsLoader: ZephyrBindingsLoader | undefined;\nexport const getZephyrBindingsLoader = () => {\n  zephyrBindingsLoader ??= new ZephyrBindingsLoader();\n  return zephyrBindingsLoader;\n};\n\nconst convertBindingsToType = (bindings: ZephyrBindingYml[]) => {\n  return bindings.map(convertBindingToType);\n};\n\nconst convertBindingToType = (binding: ZephyrBindingYml) => {\n  const nodeType = getStandardType();\n  nodeType.compatible =\n    binding.compatible ??\n    (binding.filePath ? basename(binding.filePath, \"yaml\") : undefined);\n  nodeType.description = binding.description;\n  nodeType.bindingsPath = binding.filePath;\n  nodeType.bus = typeof binding.bus === \"string\" ? [binding.bus] : binding.bus;\n  nodeType.onBus = binding[\"on-bus\"];\n\n  const cellsKeys = Object.keys(binding).filter((key) =>\n    key.endsWith(\"-cells\")\n  );\n  const cellsValues = cellsKeys.map((k) => ({\n    specifier: k.replace(/-cells$/, \"\"),\n    values: binding![k as CellSpecifier],\n  }));\n\n  if (binding.properties) {\n    Object.keys(binding.properties).forEach((name) => {\n      const property = binding.properties![name];\n      addToNodeType(nodeType, name, property);\n      nodeType.cellsValues = cellsValues;\n    });\n  }\n\n  if (binding[\"child-binding\"]) {\n    nodeType.childNodeType = convertBindingToType(binding[\"child-binding\"]);\n  }\n\n  return nodeType;\n};\n\nconst addToNodeType = (\n  nodeType: NodeType,\n  name: string,\n  property: ZephyrBindingsProperty\n) => {\n  const existingProperty = nodeType.properties.find(\n    (p) => typeof p.name === \"string\" && p.getNameMatch(name)\n  );\n  if (existingProperty) {\n    existingProperty.required = () =>\n      property.required ? \"required\" : \"optional\";\n    existingProperty.values = () => property.enum ?? [];\n    existingProperty.constValue = ZephyrDefaultTypeDefault(\n      property.type,\n      property.const\n    );\n    const additionalTypeCheck = existingProperty.additionalTypeCheck;\n    existingProperty.additionalTypeCheck = (p) => {\n      return [\n        ...generateZephyrTypeCheck(property, name)(p),\n        ...(additionalTypeCheck?.(p) ?? []),\n      ];\n    };\n  } else {\n    const prop = new PropertyNodeType(\n      name,\n      ZephyrTypeToDTSType(property.type),\n      property.required ? \"required\" : \"optional\",\n      undefined, // TODO property.default ?,\n      property.enum,\n      generateZephyrTypeCheck(property, name)\n    );\n    prop.desctiption = property.description\n      ? [property.description]\n      : undefined;\n\n    prop.constValue = ZephyrDefaultTypeDefault(property.type, property.const);\n\n    nodeType.addProperty(prop);\n  }\n};\n\nconst generateZephyrTypeCheck = (\n  property: ZephyrBindingsProperty,\n  name: string\n) => {\n  const myProperty = property;\n  return (p: Property) => {\n    const root = p.parent.root;\n    const issues: Issue<StandardTypeIssue>[] = [];\n\n    if (myProperty.const) {\n      const quickValues = p.ast.quickValues;\n      if (quickValues?.length == 1) {\n        const constValues = Array.isArray(myProperty.const)\n          ? myProperty.const\n          : [myProperty.const];\n\n        const equal =\n          Array.isArray(quickValues[0]) &&\n          constValues.length === quickValues[0].length &&\n          quickValues[0].every(\n            (v, i) =>\n              (typeof v === \"number\" && Number.isNaN(v)) || constValues[i] === v\n          );\n\n        if (!equal) {\n          issues.push(\n            genIssue(\n              StandardTypeIssue.EXPECTED_VALUE,\n              p.ast.values ?? p.ast,\n              DiagnosticSeverity.Error,\n              [],\n              [],\n              [\n                `Binding expects values to be \"${myProperty.type}\" with value: ${myProperty.const}`,\n              ]\n            )\n          );\n        }\n      }\n    }\n\n    if (myProperty.deprecated) {\n      issues.push(\n        genIssue(\n          StandardTypeIssue.DEPRECATED,\n          p.ast,\n          DiagnosticSeverity.Warning,\n          [],\n          [DiagnosticTag.Deprecated],\n          [p.name]\n        )\n      );\n    }\n\n    if (\n      myProperty.type === \"phandle\" ||\n      myProperty.type === \"phandles\" ||\n      myProperty.type === \"path\"\n    ) {\n      const values = flatNumberValues(p.ast.values);\n      values?.forEach((v) => {\n        const phandelValue = resolvePhandleNode(v, root);\n        if (!phandelValue) {\n          issues.push(\n            genIssue(\n              StandardTypeIssue.UNABLE_TO_RESOLVE_PHANDLE,\n              v,\n              DiagnosticSeverity.Error\n            )\n          );\n        }\n      });\n    }\n\n    if (\n      myProperty.type === \"path\" &&\n      p.ast.values?.values.at(0)?.value instanceof StringValue\n    ) {\n      const path = p.ast.values?.values.at(0)?.value as StringValue;\n\n      const resolved: string[] = [];\n      path.value.split(\"/\").every((p) => {\n        const node = root.getNode(p);\n        if (!node) {\n          issues.push(\n            genIssue(\n              StandardTypeIssue.UNABLE_TO_RESOLVE_PATH,\n              path,\n              DiagnosticSeverity.Error,\n              [],\n              [],\n              [p, `/${resolved.join(\"/\")}`]\n            )\n          );\n        } else {\n          resolved.push(p);\n        }\n        return !node;\n      });\n    }\n\n    if (myProperty.type === \"phandle-array\") {\n      const values = flatNumberValues(p.ast.values);\n      let i = 0;\n      while (values && i < values.length) {\n        const v = values[i];\n        const phandelValue = resolvePhandleNode(v, root);\n        if (!phandelValue) {\n          issues.push(\n            genIssue(\n              StandardTypeIssue.UNABLE_TO_RESOLVE_PHANDLE,\n              v,\n              DiagnosticSeverity.Error\n            )\n          );\n          break;\n        }\n        let parentName = name.endsWith(\"es\")\n          ? name.slice(0, -2)\n          : name.slice(0, -1);\n\n        if (parentName.endsWith(\"-gpio\")) {\n          parentName = \"gpio\";\n        }\n\n        const sizeCellProperty = phandelValue.getProperty(\n          `#${parentName}-cells`\n        );\n\n        if (!sizeCellProperty) {\n          issues.push(\n            genIssue(\n              StandardTypeIssue.PROPERTY_REQUIRES_OTHER_PROPERTY_IN_NODE,\n              p.ast,\n              DiagnosticSeverity.Error,\n              [...phandelValue.nodeNameOrLabelRef],\n              [],\n              [\n                p.name,\n                `#${parentName}-cells`,\n                `/${phandelValue.path.slice(1).join(\"/\")}`,\n              ]\n            )\n          );\n          break;\n        }\n\n        const sizeCellValue = sizeCellProperty\n          ? getU32ValueFromProperty(sizeCellProperty, 0, 0) ?? 0\n          : 0;\n\n        if (1 + sizeCellValue > values.length - i) {\n          const cellNames = phandelValue.nodeType?.cellsValues?.find(\n            (i) => i.specifier === parentName\n          )?.values;\n          issues.push(\n            genIssue(\n              StandardTypeIssue.CELL_MISS_MATCH,\n              v,\n              DiagnosticSeverity.Error,\n              [],\n              [],\n              [\n                p.name,\n                `<${[\n                  \"phandel\",\n                  ...(cellNames ?? []),\n                  ...Array.from(\n                    {\n                      length: sizeCellValue - (cellNames?.length ?? 0),\n                    },\n                    () => \"cell\"\n                  ),\n                ].join(\" \")}>`,\n              ]\n            )\n          );\n          break;\n        }\n        i += 1 + sizeCellValue;\n      }\n    }\n\n    return issues;\n  };\n};\n", "import expand from 'brace-expansion'\nimport { assertValidPattern } from './assert-valid-pattern.js'\nimport { AST, ExtglobType } from './ast.js'\nimport { escape } from './escape.js'\nimport { unescape } from './unescape.js'\n\ntype Platform =\n  | 'aix'\n  | 'android'\n  | 'darwin'\n  | 'freebsd'\n  | 'haiku'\n  | 'linux'\n  | 'openbsd'\n  | 'sunos'\n  | 'win32'\n  | 'cygwin'\n  | 'netbsd'\n\nexport interface MinimatchOptions {\n  nobrace?: boolean\n  nocomment?: boolean\n  nonegate?: boolean\n  debug?: boolean\n  noglobstar?: boolean\n  noext?: boolean\n  nonull?: boolean\n  windowsPathsNoEscape?: boolean\n  allowWindowsEscape?: boolean\n  partial?: boolean\n  dot?: boolean\n  nocase?: boolean\n  nocaseMagicOnly?: boolean\n  magicalBraces?: boolean\n  matchBase?: boolean\n  flipNegate?: boolean\n  preserveMultipleSlashes?: boolean\n  optimizationLevel?: number\n  platform?: Platform\n  windowsNoMagicRoot?: boolean\n}\n\nexport const minimatch = (\n  p: string,\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\n// Optimized checking for the most common glob patterns.\nconst starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/\nconst starDotExtTest = (ext: string) => (f: string) =>\n  !f.startsWith('.') && f.endsWith(ext)\nconst starDotExtTestDot = (ext: string) => (f: string) => f.endsWith(ext)\nconst starDotExtTestNocase = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => !f.startsWith('.') && f.toLowerCase().endsWith(ext)\n}\nconst starDotExtTestNocaseDot = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => f.toLowerCase().endsWith(ext)\n}\nconst starDotStarRE = /^\\*+\\.\\*+$/\nconst starDotStarTest = (f: string) => !f.startsWith('.') && f.includes('.')\nconst starDotStarTestDot = (f: string) =>\n  f !== '.' && f !== '..' && f.includes('.')\nconst dotStarRE = /^\\.\\*+$/\nconst dotStarTest = (f: string) => f !== '.' && f !== '..' && f.startsWith('.')\nconst starRE = /^\\*+$/\nconst starTest = (f: string) => f.length !== 0 && !f.startsWith('.')\nconst starTestDot = (f: string) => f.length !== 0 && f !== '.' && f !== '..'\nconst qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/\nconst qmarksTestNocase = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestNocaseDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTest = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTestNoExt = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && !f.startsWith('.')\n}\nconst qmarksTestNoExtDot = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && f !== '.' && f !== '..'\n}\n\n/* c8 ignore start */\nconst defaultPlatform: Platform = (\n  typeof process === 'object' && process\n    ? (typeof process.env === 'object' &&\n        process.env &&\n        process.env.__MINIMATCH_TESTING_PLATFORM__) ||\n      process.platform\n    : 'posix'\n) as Platform\ntype Sep = '\\\\' | '/'\nconst path: { [k: string]: { sep: Sep } } = {\n  win32: { sep: '\\\\' },\n  posix: { sep: '/' },\n}\n/* c8 ignore stop */\n\nexport const sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep\nminimatch.sep = sep\n\nexport const GLOBSTAR = Symbol('globstar **')\nminimatch.GLOBSTAR = GLOBSTAR\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\/|^)\\\\.).)*?'\n\nexport const filter =\n  (pattern: string, options: MinimatchOptions = {}) =>\n  (p: string) =>\n    minimatch(p, pattern, options)\nminimatch.filter = filter\n\nconst ext = (a: MinimatchOptions, b: MinimatchOptions = {}) =>\n  Object.assign({}, a, b)\n\nexport const defaults = (def: MinimatchOptions): typeof minimatch => {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  const orig = minimatch\n\n  const m = (p: string, pattern: string, options: MinimatchOptions = {}) =>\n    orig(p, pattern, ext(def, options))\n\n  return Object.assign(m, {\n    Minimatch: class Minimatch extends orig.Minimatch {\n      constructor(pattern: string, options: MinimatchOptions = {}) {\n        super(pattern, ext(def, options))\n      }\n      static defaults(options: MinimatchOptions) {\n        return orig.defaults(ext(def, options)).Minimatch\n      }\n    },\n\n    AST: class AST extends orig.AST {\n      /* c8 ignore start */\n      constructor(\n        type: ExtglobType | null,\n        parent?: AST,\n        options: MinimatchOptions = {}\n      ) {\n        super(type, parent, ext(def, options))\n      }\n      /* c8 ignore stop */\n\n      static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n        return orig.AST.fromGlob(pattern, ext(def, options))\n      }\n    },\n\n    unescape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.unescape(s, ext(def, options)),\n\n    escape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.escape(s, ext(def, options)),\n\n    filter: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.filter(pattern, ext(def, options)),\n\n    defaults: (options: MinimatchOptions) => orig.defaults(ext(def, options)),\n\n    makeRe: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.makeRe(pattern, ext(def, options)),\n\n    braceExpand: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.braceExpand(pattern, ext(def, options)),\n\n    match: (list: string[], pattern: string, options: MinimatchOptions = {}) =>\n      orig.match(list, pattern, ext(def, options)),\n\n    sep: orig.sep,\n    GLOBSTAR: GLOBSTAR as typeof GLOBSTAR,\n  })\n}\nminimatch.defaults = defaults\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nexport const braceExpand = (\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\nminimatch.braceExpand = braceExpand\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\n\nexport const makeRe = (pattern: string, options: MinimatchOptions = {}) =>\n  new Minimatch(pattern, options).makeRe()\nminimatch.makeRe = makeRe\n\nexport const match = (\n  list: string[],\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  const mm = new Minimatch(pattern, options)\n  list = list.filter(f => mm.match(f))\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\nminimatch.match = match\n\n// replace stuff like \\* with *\nconst globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\nexport type MMRegExp = RegExp & {\n  _src?: string\n  _glob?: string\n}\n\nexport type ParseReturnFiltered = string | MMRegExp | typeof GLOBSTAR\nexport type ParseReturn = ParseReturnFiltered | false\n\nexport class Minimatch {\n  options: MinimatchOptions\n  set: ParseReturnFiltered[][]\n  pattern: string\n\n  windowsPathsNoEscape: boolean\n  nonegate: boolean\n  negate: boolean\n  comment: boolean\n  empty: boolean\n  preserveMultipleSlashes: boolean\n  partial: boolean\n  globSet: string[]\n  globParts: string[][]\n  nocase: boolean\n\n  isWindows: boolean\n  platform: Platform\n  windowsNoMagicRoot: boolean\n\n  regexp: false | null | MMRegExp\n  constructor(pattern: string, options: MinimatchOptions = {}) {\n    assertValidPattern(pattern)\n\n    options = options || {}\n    this.options = options\n    this.pattern = pattern\n    this.platform = options.platform || defaultPlatform\n    this.isWindows = this.platform === 'win32'\n    this.windowsPathsNoEscape =\n      !!options.windowsPathsNoEscape || options.allowWindowsEscape === false\n    if (this.windowsPathsNoEscape) {\n      this.pattern = this.pattern.replace(/\\\\/g, '/')\n    }\n    this.preserveMultipleSlashes = !!options.preserveMultipleSlashes\n    this.regexp = null\n    this.negate = false\n    this.nonegate = !!options.nonegate\n    this.comment = false\n    this.empty = false\n    this.partial = !!options.partial\n    this.nocase = !!this.options.nocase\n    this.windowsNoMagicRoot =\n      options.windowsNoMagicRoot !== undefined\n        ? options.windowsNoMagicRoot\n        : !!(this.isWindows && this.nocase)\n\n    this.globSet = []\n    this.globParts = []\n    this.set = []\n\n    // make the set of regexps etc.\n    this.make()\n  }\n\n  hasMagic(): boolean {\n    if (this.options.magicalBraces && this.set.length > 1) {\n      return true\n    }\n    for (const pattern of this.set) {\n      for (const part of pattern) {\n        if (typeof part !== 'string') return true\n      }\n    }\n    return false\n  }\n\n  debug(..._: any[]) {}\n\n  make() {\n    const pattern = this.pattern\n    const options = this.options\n\n    // empty patterns and comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n      this.comment = true\n      return\n    }\n\n    if (!pattern) {\n      this.empty = true\n      return\n    }\n\n    // step 1: figure out negation, etc.\n    this.parseNegate()\n\n    // step 2: expand braces\n    this.globSet = [...new Set(this.braceExpand())]\n\n    if (options.debug) {\n      this.debug = (...args: any[]) => console.error(...args)\n    }\n\n    this.debug(this.pattern, this.globSet)\n\n    // step 3: now we have a set, so turn each one into a series of\n    // path-portion matching patterns.\n    // These will be regexps, except in the case of \"**\", which is\n    // set to the GLOBSTAR object for globstar behavior,\n    // and will not contain any / characters\n    //\n    // First, we preprocess to make the glob pattern sets a bit simpler\n    // and deduped.  There are some perf-killing patterns that can cause\n    // problems with a glob walk, but we can simplify them down a bit.\n    const rawGlobParts = this.globSet.map(s => this.slashSplit(s))\n    this.globParts = this.preprocess(rawGlobParts)\n    this.debug(this.pattern, this.globParts)\n\n    // glob --> regexps\n    let set = this.globParts.map((s, _, __) => {\n      if (this.isWindows && this.windowsNoMagicRoot) {\n        // check if it's a drive or unc path.\n        const isUNC =\n          s[0] === '' &&\n          s[1] === '' &&\n          (s[2] === '?' || !globMagic.test(s[2])) &&\n          !globMagic.test(s[3])\n        const isDrive = /^[a-z]:/i.test(s[0])\n        if (isUNC) {\n          return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))]\n        } else if (isDrive) {\n          return [s[0], ...s.slice(1).map(ss => this.parse(ss))]\n        }\n      }\n      return s.map(ss => this.parse(ss))\n    })\n\n    this.debug(this.pattern, set)\n\n    // filter out everything that didn't compile properly.\n    this.set = set.filter(\n      s => s.indexOf(false) === -1\n    ) as ParseReturnFiltered[][]\n\n    // do not treat the ? in UNC paths as magic\n    if (this.isWindows) {\n      for (let i = 0; i < this.set.length; i++) {\n        const p = this.set[i]\n        if (\n          p[0] === '' &&\n          p[1] === '' &&\n          this.globParts[i][2] === '?' &&\n          typeof p[3] === 'string' &&\n          /^[a-z]:$/i.test(p[3])\n        ) {\n          p[2] = '?'\n        }\n      }\n    }\n\n    this.debug(this.pattern, this.set)\n  }\n\n  // various transforms to equivalent pattern sets that are\n  // faster to process in a filesystem walk.  The goal is to\n  // eliminate what we can, and push all ** patterns as far\n  // to the right as possible, even if it increases the number\n  // of patterns that we have to process.\n  preprocess(globParts: string[][]) {\n    // if we're not in globstar mode, then turn all ** into *\n    if (this.options.noglobstar) {\n      for (let i = 0; i < globParts.length; i++) {\n        for (let j = 0; j < globParts[i].length; j++) {\n          if (globParts[i][j] === '**') {\n            globParts[i][j] = '*'\n          }\n        }\n      }\n    }\n\n    const { optimizationLevel = 1 } = this.options\n\n    if (optimizationLevel >= 2) {\n      // aggressive optimization for the purpose of fs walking\n      globParts = this.firstPhasePreProcess(globParts)\n      globParts = this.secondPhasePreProcess(globParts)\n    } else if (optimizationLevel >= 1) {\n      // just basic optimizations to remove some .. parts\n      globParts = this.levelOneOptimize(globParts)\n    } else {\n      // just collapse multiple ** portions into one\n      globParts = this.adjascentGlobstarOptimize(globParts)\n    }\n\n    return globParts\n  }\n\n  // just get rid of adjascent ** portions\n  adjascentGlobstarOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      let gs: number = -1\n      while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n        let i = gs\n        while (parts[i + 1] === '**') {\n          i++\n        }\n        if (i !== gs) {\n          parts.splice(gs, i - gs)\n        }\n      }\n      return parts\n    })\n  }\n\n  // get rid of adjascent ** and resolve .. portions\n  levelOneOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      parts = parts.reduce((set: string[], part) => {\n        const prev = set[set.length - 1]\n        if (part === '**' && prev === '**') {\n          return set\n        }\n        if (part === '..') {\n          if (prev && prev !== '..' && prev !== '.' && prev !== '**') {\n            set.pop()\n            return set\n          }\n        }\n        set.push(part)\n        return set\n      }, [])\n      return parts.length === 0 ? [''] : parts\n    })\n  }\n\n  levelTwoFileOptimize(parts: string | string[]) {\n    if (!Array.isArray(parts)) {\n      parts = this.slashSplit(parts)\n    }\n    let didSomething: boolean = false\n    do {\n      didSomething = false\n      // <pre>/<e>/<rest> -> <pre>/<rest>\n      if (!this.preserveMultipleSlashes) {\n        for (let i = 1; i < parts.length - 1; i++) {\n          const p = parts[i]\n          // don't squeeze out UNC patterns\n          if (i === 1 && p === '' && parts[0] === '') continue\n          if (p === '.' || p === '') {\n            didSomething = true\n            parts.splice(i, 1)\n            i--\n          }\n        }\n        if (\n          parts[0] === '.' &&\n          parts.length === 2 &&\n          (parts[1] === '.' || parts[1] === '')\n        ) {\n          didSomething = true\n          parts.pop()\n        }\n      }\n\n      // <pre>/<p>/../<rest> -> <pre>/<rest>\n      let dd: number = 0\n      while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n        const p = parts[dd - 1]\n        if (p && p !== '.' && p !== '..' && p !== '**') {\n          didSomething = true\n          parts.splice(dd - 1, 2)\n          dd -= 2\n        }\n      }\n    } while (didSomething)\n    return parts.length === 0 ? [''] : parts\n  }\n\n  // First phase: single-pattern processing\n  // <pre> is 1 or more portions\n  // <rest> is 1 or more portions\n  // <p> is any portion other than ., .., '', or **\n  // <e> is . or ''\n  //\n  // **/.. is *brutal* for filesystem walking performance, because\n  // it effectively resets the recursive walk each time it occurs,\n  // and ** cannot be reduced out by a .. pattern part like a regexp\n  // or most strings (other than .., ., and '') can be.\n  //\n  // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n  // <pre>/<e>/<rest> -> <pre>/<rest>\n  // <pre>/<p>/../<rest> -> <pre>/<rest>\n  // **/**/<rest> -> **/<rest>\n  //\n  // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n  // this WOULD be allowed if ** did follow symlinks, or * didn't\n  firstPhasePreProcess(globParts: string[][]) {\n    let didSomething = false\n    do {\n      didSomething = false\n      // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n      for (let parts of globParts) {\n        let gs: number = -1\n        while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n          let gss: number = gs\n          while (parts[gss + 1] === '**') {\n            // <pre>/**/**/<rest> -> <pre>/**/<rest>\n            gss++\n          }\n          // eg, if gs is 2 and gss is 4, that means we have 3 **\n          // parts, and can remove 2 of them.\n          if (gss > gs) {\n            parts.splice(gs + 1, gss - gs)\n          }\n\n          let next = parts[gs + 1]\n          const p = parts[gs + 2]\n          const p2 = parts[gs + 3]\n          if (next !== '..') continue\n          if (\n            !p ||\n            p === '.' ||\n            p === '..' ||\n            !p2 ||\n            p2 === '.' ||\n            p2 === '..'\n          ) {\n            continue\n          }\n          didSomething = true\n          // edit parts in place, and push the new one\n          parts.splice(gs, 1)\n          const other = parts.slice(0)\n          other[gs] = '**'\n          globParts.push(other)\n          gs--\n        }\n\n        // <pre>/<e>/<rest> -> <pre>/<rest>\n        if (!this.preserveMultipleSlashes) {\n          for (let i = 1; i < parts.length - 1; i++) {\n            const p = parts[i]\n            // don't squeeze out UNC patterns\n            if (i === 1 && p === '' && parts[0] === '') continue\n            if (p === '.' || p === '') {\n              didSomething = true\n              parts.splice(i, 1)\n              i--\n            }\n          }\n          if (\n            parts[0] === '.' &&\n            parts.length === 2 &&\n            (parts[1] === '.' || parts[1] === '')\n          ) {\n            didSomething = true\n            parts.pop()\n          }\n        }\n\n        // <pre>/<p>/../<rest> -> <pre>/<rest>\n        let dd: number = 0\n        while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n          const p = parts[dd - 1]\n          if (p && p !== '.' && p !== '..' && p !== '**') {\n            didSomething = true\n            const needDot = dd === 1 && parts[dd + 1] === '**'\n            const splin = needDot ? ['.'] : []\n            parts.splice(dd - 1, 2, ...splin)\n            if (parts.length === 0) parts.push('')\n            dd -= 2\n          }\n        }\n      }\n    } while (didSomething)\n\n    return globParts\n  }\n\n  // second phase: multi-pattern dedupes\n  // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n  // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n  // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n  //\n  // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n  // ^-- not valid because ** doens't follow symlinks\n  secondPhasePreProcess(globParts: string[][]): string[][] {\n    for (let i = 0; i < globParts.length - 1; i++) {\n      for (let j = i + 1; j < globParts.length; j++) {\n        const matched = this.partsMatch(\n          globParts[i],\n          globParts[j],\n          !this.preserveMultipleSlashes\n        )\n        if (matched) {\n          globParts[i] = []\n          globParts[j] = matched\n          break\n        }\n      }\n    }\n    return globParts.filter(gs => gs.length)\n  }\n\n  partsMatch(\n    a: string[],\n    b: string[],\n    emptyGSMatch: boolean = false\n  ): false | string[] {\n    let ai = 0\n    let bi = 0\n    let result: string[] = []\n    let which: string = ''\n    while (ai < a.length && bi < b.length) {\n      if (a[ai] === b[bi]) {\n        result.push(which === 'b' ? b[bi] : a[ai])\n        ai++\n        bi++\n      } else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {\n        result.push(a[ai])\n        ai++\n      } else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {\n        result.push(b[bi])\n        bi++\n      } else if (\n        a[ai] === '*' &&\n        b[bi] &&\n        (this.options.dot || !b[bi].startsWith('.')) &&\n        b[bi] !== '**'\n      ) {\n        if (which === 'b') return false\n        which = 'a'\n        result.push(a[ai])\n        ai++\n        bi++\n      } else if (\n        b[bi] === '*' &&\n        a[ai] &&\n        (this.options.dot || !a[ai].startsWith('.')) &&\n        a[ai] !== '**'\n      ) {\n        if (which === 'a') return false\n        which = 'b'\n        result.push(b[bi])\n        ai++\n        bi++\n      } else {\n        return false\n      }\n    }\n    // if we fall out of the loop, it means they two are identical\n    // as long as their lengths match\n    return a.length === b.length && result\n  }\n\n  parseNegate() {\n    if (this.nonegate) return\n\n    const pattern = this.pattern\n    let negate = false\n    let negateOffset = 0\n\n    for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n      negate = !negate\n      negateOffset++\n    }\n\n    if (negateOffset) this.pattern = pattern.slice(negateOffset)\n    this.negate = negate\n  }\n\n  // set partial to true to test if, for example,\n  // \"/a/b\" matches the start of \"/*/b/*/d\"\n  // Partial means, if you run out of file before you run\n  // out of pattern, then that's fine, as long as all\n  // the parts match.\n  matchOne(file: string[], pattern: ParseReturn[], partial: boolean = false) {\n    const options = this.options\n\n    // UNC paths like //?/X:/... can match X:/... and vice versa\n    // Drive letters in absolute drive or unc paths are always compared\n    // case-insensitively.\n    if (this.isWindows) {\n      const fileDrive = typeof file[0] === 'string' && /^[a-z]:$/i.test(file[0])\n      const fileUNC =\n        !fileDrive &&\n        file[0] === '' &&\n        file[1] === '' &&\n        file[2] === '?' &&\n        /^[a-z]:$/i.test(file[3])\n\n      const patternDrive =\n        typeof pattern[0] === 'string' && /^[a-z]:$/i.test(pattern[0])\n      const patternUNC =\n        !patternDrive &&\n        pattern[0] === '' &&\n        pattern[1] === '' &&\n        pattern[2] === '?' &&\n        typeof pattern[3] === 'string' &&\n        /^[a-z]:$/i.test(pattern[3])\n\n      const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined\n      const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined\n      if (typeof fdi === 'number' && typeof pdi === 'number') {\n        const [fd, pd]: [string, string] = [file[fdi], pattern[pdi] as string]\n        if (fd.toLowerCase() === pd.toLowerCase()) {\n          pattern[pdi] = fd\n          if (pdi > fdi) {\n            pattern = pattern.slice(pdi)\n          } else if (fdi > pdi) {\n            file = file.slice(fdi)\n          }\n        }\n      }\n    }\n\n    // resolve and reduce . and .. portions in the file as well.\n    // dont' need to do the second phase, because it's only one string[]\n    const { optimizationLevel = 1 } = this.options\n    if (optimizationLevel >= 2) {\n      file = this.levelTwoFileOptimize(file)\n    }\n\n    this.debug('matchOne', this, { file, pattern })\n    this.debug('matchOne', file.length, pattern.length)\n\n    for (\n      var fi = 0, pi = 0, fl = file.length, pl = pattern.length;\n      fi < fl && pi < pl;\n      fi++, pi++\n    ) {\n      this.debug('matchOne loop')\n      var p = pattern[pi]\n      var f = file[fi]\n\n      this.debug(pattern, p, f)\n\n      // should be impossible.\n      // some invalid regexp stuff in the set.\n      /* c8 ignore start */\n      if (p === false) {\n        return false\n      }\n      /* c8 ignore stop */\n\n      if (p === GLOBSTAR) {\n        this.debug('GLOBSTAR', [pattern, p, f])\n\n        // \"**\"\n        // a/**/b/**/c would match the following:\n        // a/b/x/y/z/c\n        // a/x/y/z/b/c\n        // a/b/x/b/x/c\n        // a/b/c\n        // To do this, take the rest of the pattern after\n        // the **, and see if it would match the file remainder.\n        // If so, return success.\n        // If not, the ** \"swallows\" a segment, and try again.\n        // This is recursively awful.\n        //\n        // a/**/b/**/c matching a/b/x/y/z/c\n        // - a matches a\n        // - doublestar\n        //   - matchOne(b/x/y/z/c, b/**/c)\n        //     - b matches b\n        //     - doublestar\n        //       - matchOne(x/y/z/c, c) -> no\n        //       - matchOne(y/z/c, c) -> no\n        //       - matchOne(z/c, c) -> no\n        //       - matchOne(c, c) yes, hit\n        var fr = fi\n        var pr = pi + 1\n        if (pr === pl) {\n          this.debug('** at the end')\n          // a ** at the end will just swallow the rest.\n          // We have found a match.\n          // however, it will not swallow /.x, unless\n          // options.dot is set.\n          // . and .. are *never* matched by **, for explosively\n          // exponential reasons.\n          for (; fi < fl; fi++) {\n            if (\n              file[fi] === '.' ||\n              file[fi] === '..' ||\n              (!options.dot && file[fi].charAt(0) === '.')\n            )\n              return false\n          }\n          return true\n        }\n\n        // ok, let's see if we can swallow whatever we can.\n        while (fr < fl) {\n          var swallowee = file[fr]\n\n          this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n          // XXX remove this slice.  Just pass the start index.\n          if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n            this.debug('globstar found match!', fr, fl, swallowee)\n            // found a match.\n            return true\n          } else {\n            // can't swallow \".\" or \"..\" ever.\n            // can only swallow \".foo\" when explicitly asked.\n            if (\n              swallowee === '.' ||\n              swallowee === '..' ||\n              (!options.dot && swallowee.charAt(0) === '.')\n            ) {\n              this.debug('dot detected!', file, fr, pattern, pr)\n              break\n            }\n\n            // ** swallows a segment, and continue.\n            this.debug('globstar swallow a segment, and continue')\n            fr++\n          }\n        }\n\n        // no match was found.\n        // However, in partial mode, we can't say this is necessarily over.\n        /* c8 ignore start */\n        if (partial) {\n          // ran out of file\n          this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n          if (fr === fl) {\n            return true\n          }\n        }\n        /* c8 ignore stop */\n        return false\n      }\n\n      // something other than **\n      // non-magic patterns just have to match exactly\n      // patterns with magic have been turned into regexps.\n      let hit: boolean\n      if (typeof p === 'string') {\n        hit = f === p\n        this.debug('string match', p, f, hit)\n      } else {\n        hit = p.test(f)\n        this.debug('pattern match', p, f, hit)\n      }\n\n      if (!hit) return false\n    }\n\n    // Note: ending in / means that we'll get a final \"\"\n    // at the end of the pattern.  This can only match a\n    // corresponding \"\" at the end of the file.\n    // If the file ends in /, then it can only match a\n    // a pattern that ends in /, unless the pattern just\n    // doesn't have any more for it. But, a/b/ should *not*\n    // match \"a/b/*\", even though \"\" matches against the\n    // [^/]*? pattern, except in partial mode, where it might\n    // simply not be reached yet.\n    // However, a/b/ should still satisfy a/*\n\n    // now either we fell off the end of the pattern, or we're done.\n    if (fi === fl && pi === pl) {\n      // ran out of pattern and filename at the same time.\n      // an exact hit!\n      return true\n    } else if (fi === fl) {\n      // ran out of file, but still had pattern left.\n      // this is ok if we're doing the match as part of\n      // a glob fs traversal.\n      return partial\n    } else if (pi === pl) {\n      // ran out of pattern, still have file left.\n      // this is only acceptable if we're on the very last\n      // empty segment of a file with a trailing slash.\n      // a/* should match a/b/\n      return fi === fl - 1 && file[fi] === ''\n\n      /* c8 ignore start */\n    } else {\n      // should be unreachable.\n      throw new Error('wtf?')\n    }\n    /* c8 ignore stop */\n  }\n\n  braceExpand() {\n    return braceExpand(this.pattern, this.options)\n  }\n\n  parse(pattern: string): ParseReturn {\n    assertValidPattern(pattern)\n\n    const options = this.options\n\n    // shortcuts\n    if (pattern === '**') return GLOBSTAR\n    if (pattern === '') return ''\n\n    // far and away, the most common glob pattern parts are\n    // *, *.*, and *.<ext>  Add a fast check method for those.\n    let m: RegExpMatchArray | null\n    let fastTest: null | ((f: string) => boolean) = null\n    if ((m = pattern.match(starRE))) {\n      fastTest = options.dot ? starTestDot : starTest\n    } else if ((m = pattern.match(starDotExtRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? starDotExtTestNocaseDot\n            : starDotExtTestNocase\n          : options.dot\n          ? starDotExtTestDot\n          : starDotExtTest\n      )(m[1])\n    } else if ((m = pattern.match(qmarksRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? qmarksTestNocaseDot\n            : qmarksTestNocase\n          : options.dot\n          ? qmarksTestDot\n          : qmarksTest\n      )(m)\n    } else if ((m = pattern.match(starDotStarRE))) {\n      fastTest = options.dot ? starDotStarTestDot : starDotStarTest\n    } else if ((m = pattern.match(dotStarRE))) {\n      fastTest = dotStarTest\n    }\n\n    const re = AST.fromGlob(pattern, this.options).toMMPattern()\n    if (fastTest && typeof re === 'object') {\n      // Avoids overriding in frozen environments\n      Reflect.defineProperty(re, 'test', { value: fastTest })\n    }\n    return re\n  }\n\n  makeRe() {\n    if (this.regexp || this.regexp === false) return this.regexp\n\n    // at this point, this.set is a 2d array of partial\n    // pattern strings, or \"**\".\n    //\n    // It's better to use .match().  This function shouldn't\n    // be used, really, but it's pretty convenient sometimes,\n    // when you just want to work with a regex.\n    const set = this.set\n\n    if (!set.length) {\n      this.regexp = false\n      return this.regexp\n    }\n    const options = this.options\n\n    const twoStar = options.noglobstar\n      ? star\n      : options.dot\n      ? twoStarDot\n      : twoStarNoDot\n    const flags = new Set(options.nocase ? ['i'] : [])\n\n    // regexpify non-globstar patterns\n    // if ** is only item, then we just do one twoStar\n    // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n    // if ** is last, append (\\/twoStar|) to previous\n    // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n    // then filter out GLOBSTAR symbols\n    let re = set\n      .map(pattern => {\n        const pp: (string | typeof GLOBSTAR)[] = pattern.map(p => {\n          if (p instanceof RegExp) {\n            for (const f of p.flags.split('')) flags.add(f)\n          }\n          return typeof p === 'string'\n            ? regExpEscape(p)\n            : p === GLOBSTAR\n            ? GLOBSTAR\n            : p._src\n        }) as (string | typeof GLOBSTAR)[]\n        pp.forEach((p, i) => {\n          const next = pp[i + 1]\n          const prev = pp[i - 1]\n          if (p !== GLOBSTAR || prev === GLOBSTAR) {\n            return\n          }\n          if (prev === undefined) {\n            if (next !== undefined && next !== GLOBSTAR) {\n              pp[i + 1] = '(?:\\\\/|' + twoStar + '\\\\/)?' + next\n            } else {\n              pp[i] = twoStar\n            }\n          } else if (next === undefined) {\n            pp[i - 1] = prev + '(?:\\\\/|' + twoStar + ')?'\n          } else if (next !== GLOBSTAR) {\n            pp[i - 1] = prev + '(?:\\\\/|\\\\/' + twoStar + '\\\\/)' + next\n            pp[i + 1] = GLOBSTAR\n          }\n        })\n        return pp.filter(p => p !== GLOBSTAR).join('/')\n      })\n      .join('|')\n\n    // need to wrap in parens if we had more than one thing with |,\n    // otherwise only the first will be anchored to ^ and the last to $\n    const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', '']\n    // must match entire pattern\n    // ending in a * or ** will make it less strict.\n    re = '^' + open + re + close + '$'\n\n    // can match anything, as long as it's not this.\n    if (this.negate) re = '^(?!' + re + ').+$'\n\n    try {\n      this.regexp = new RegExp(re, [...flags].join(''))\n      /* c8 ignore start */\n    } catch (ex) {\n      // should be impossible\n      this.regexp = false\n    }\n    /* c8 ignore stop */\n    return this.regexp\n  }\n\n  slashSplit(p: string) {\n    // if p starts with // on windows, we preserve that\n    // so that UNC paths aren't broken.  Otherwise, any number of\n    // / characters are coalesced into one, unless\n    // preserveMultipleSlashes is set to true.\n    if (this.preserveMultipleSlashes) {\n      return p.split('/')\n    } else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n      // add an extra '' for the one we lose\n      return ['', ...p.split(/\\/+/)]\n    } else {\n      return p.split(/\\/+/)\n    }\n  }\n\n  match(f: string, partial = this.partial) {\n    this.debug('match', f, this.pattern)\n    // short-circuit in the case of busted things.\n    // comments, etc.\n    if (this.comment) {\n      return false\n    }\n    if (this.empty) {\n      return f === ''\n    }\n\n    if (f === '/' && partial) {\n      return true\n    }\n\n    const options = this.options\n\n    // windows: need to use /, not \\\n    if (this.isWindows) {\n      f = f.split('\\\\').join('/')\n    }\n\n    // treat the test path as a set of pathparts.\n    const ff = this.slashSplit(f)\n    this.debug(this.pattern, 'split', ff)\n\n    // just ONE of the pattern sets in this.set needs to match\n    // in order for it to be valid.  If negating, then just one\n    // match means that we have failed.\n    // Either way, return on the first hit.\n\n    const set = this.set\n    this.debug(this.pattern, 'set', set)\n\n    // Find the basename of the path by looking for the last non-empty segment\n    let filename: string = ff[ff.length - 1]\n    if (!filename) {\n      for (let i = ff.length - 2; !filename && i >= 0; i--) {\n        filename = ff[i]\n      }\n    }\n\n    for (let i = 0; i < set.length; i++) {\n      const pattern = set[i]\n      let file = ff\n      if (options.matchBase && pattern.length === 1) {\n        file = [filename]\n      }\n      const hit = this.matchOne(file, pattern, partial)\n      if (hit) {\n        if (options.flipNegate) {\n          return true\n        }\n        return !this.negate\n      }\n    }\n\n    // didn't get any hits.  this is success if it's a negative\n    // pattern, failure otherwise.\n    if (options.flipNegate) {\n      return false\n    }\n    return this.negate\n  }\n\n  static defaults(def: MinimatchOptions) {\n    return minimatch.defaults(def).Minimatch\n  }\n}\n/* c8 ignore start */\nexport { AST } from './ast.js'\nexport { escape } from './escape.js'\nexport { unescape } from './unescape.js'\n/* c8 ignore stop */\nminimatch.AST = AST\nminimatch.Minimatch = Minimatch\nminimatch.escape = escape\nminimatch.unescape = unescape\n", "const MAX_PATTERN_LENGTH = 1024 * 64\nexport const assertValidPattern: (pattern: any) => void = (\n  pattern: any\n): asserts pattern is string => {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n", "// translate the various posix character classes into unicode properties\n// this works across all unicode locales\n\n// { <posix class>: [<translation>, /u flag required, negated]\nconst posixClasses: { [k: string]: [e: string, u: boolean, n?: boolean] } = {\n  '[:alnum:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}', true],\n  '[:alpha:]': ['\\\\p{L}\\\\p{Nl}', true],\n  '[:ascii:]': ['\\\\x' + '00-\\\\x' + '7f', false],\n  '[:blank:]': ['\\\\p{Zs}\\\\t', true],\n  '[:cntrl:]': ['\\\\p{Cc}', true],\n  '[:digit:]': ['\\\\p{Nd}', true],\n  '[:graph:]': ['\\\\p{Z}\\\\p{C}', true, true],\n  '[:lower:]': ['\\\\p{Ll}', true],\n  '[:print:]': ['\\\\p{C}', true],\n  '[:punct:]': ['\\\\p{P}', true],\n  '[:space:]': ['\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f', true],\n  '[:upper:]': ['\\\\p{Lu}', true],\n  '[:word:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}', true],\n  '[:xdigit:]': ['A-Fa-f0-9', false],\n}\n\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst braceEscape = (s: string) => s.replace(/[[\\]\\\\-]/g, '\\\\$&')\n// escape all regexp magic characters\nconst regexpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// everything has already been escaped, we just have to join\nconst rangesToString = (ranges: string[]): string => ranges.join('')\n\nexport type ParseClassResult = [\n  src: string,\n  uFlag: boolean,\n  consumed: number,\n  hasMagic: boolean\n]\n\n// takes a glob string at a posix brace expression, and returns\n// an equivalent regular expression source, and boolean indicating\n// whether the /u flag needs to be applied, and the number of chars\n// consumed to parse the character class.\n// This also removes out of order ranges, and returns ($.) if the\n// entire class just no good.\nexport const parseClass = (\n  glob: string,\n  position: number\n): ParseClassResult => {\n  const pos = position\n  /* c8 ignore start */\n  if (glob.charAt(pos) !== '[') {\n    throw new Error('not in a brace expression')\n  }\n  /* c8 ignore stop */\n  const ranges: string[] = []\n  const negs: string[] = []\n\n  let i = pos + 1\n  let sawStart = false\n  let uflag = false\n  let escaping = false\n  let negate = false\n  let endPos = pos\n  let rangeStart = ''\n  WHILE: while (i < glob.length) {\n    const c = glob.charAt(i)\n    if ((c === '!' || c === '^') && i === pos + 1) {\n      negate = true\n      i++\n      continue\n    }\n\n    if (c === ']' && sawStart && !escaping) {\n      endPos = i + 1\n      break\n    }\n\n    sawStart = true\n    if (c === '\\\\') {\n      if (!escaping) {\n        escaping = true\n        i++\n        continue\n      }\n      // escaped \\ char, fall through and treat like normal char\n    }\n    if (c === '[' && !escaping) {\n      // either a posix class, a collation equivalent, or just a [\n      for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n        if (glob.startsWith(cls, i)) {\n          // invalid, [a-[] is fine, but not [a-[:alpha]]\n          if (rangeStart) {\n            return ['$.', false, glob.length - pos, true]\n          }\n          i += cls.length\n          if (neg) negs.push(unip)\n          else ranges.push(unip)\n          uflag = uflag || u\n          continue WHILE\n        }\n      }\n    }\n\n    // now it's just a normal character, effectively\n    escaping = false\n    if (rangeStart) {\n      // throw this range away if it's not valid, but others\n      // can still match.\n      if (c > rangeStart) {\n        ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c))\n      } else if (c === rangeStart) {\n        ranges.push(braceEscape(c))\n      }\n      rangeStart = ''\n      i++\n      continue\n    }\n\n    // now might be the start of a range.\n    // can be either c-d or c-] or c<more...>] or c] at this point\n    if (glob.startsWith('-]', i + 1)) {\n      ranges.push(braceEscape(c + '-'))\n      i += 2\n      continue\n    }\n    if (glob.startsWith('-', i + 1)) {\n      rangeStart = c\n      i += 2\n      continue\n    }\n\n    // not the start of a range, just a single character\n    ranges.push(braceEscape(c))\n    i++\n  }\n\n  if (endPos < i) {\n    // didn't see the end of the class, not a valid class,\n    // but might still be valid as a literal match.\n    return ['', false, 0, false]\n  }\n\n  // if we got no ranges and no negates, then we have a range that\n  // cannot possibly match anything, and that poisons the whole glob\n  if (!ranges.length && !negs.length) {\n    return ['$.', false, glob.length - pos, true]\n  }\n\n  // if we got one positive range, and it's a single character, then that's\n  // not actually a magic pattern, it's just that one literal character.\n  // we should not treat that as \"magic\", we should just return the literal\n  // character. [_] is a perfectly valid way to escape glob magic chars.\n  if (\n    negs.length === 0 &&\n    ranges.length === 1 &&\n    /^\\\\?.$/.test(ranges[0]) &&\n    !negate\n  ) {\n    const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0]\n    return [regexpEscape(r), false, endPos - pos, false]\n  }\n\n  const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']'\n  const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']'\n  const comb =\n    ranges.length && negs.length\n      ? '(' + sranges + '|' + snegs + ')'\n      : ranges.length\n      ? sranges\n      : snegs\n\n  return [comb, uflag, endPos - pos, true]\n}\n", "import { MinimatchOptions } from './index.js'\n/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */\nexport const unescape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  return windowsPathsNoEscape\n    ? s.replace(/\\[([^\\/\\\\])\\]/g, '$1')\n    : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, '$1$2').replace(/\\\\([^\\/])/g, '$1')\n}\n", "// parse a single path portion\n\nimport { parseClass } from './brace-expressions.js'\nimport { MinimatchOptions, MMRegExp } from './index.js'\nimport { unescape } from './unescape.js'\n\n// classes [] are handled by the parseClass method\n// for positive extglobs, we sub-parse the contents, and combine,\n// with the appropriate regexp close.\n// for negative extglobs, we sub-parse the contents, but then\n// have to include the rest of the pattern, then the parent, etc.,\n// as the thing that cannot be because RegExp negative lookaheads\n// are different from globs.\n//\n// So for example:\n// a@(i|w!(x|y)z|j)b => ^a(i|w((!?(x|y)zb).*)z|j)b$\n//   1   2 3   4 5 6      1   2    3   46      5 6\n//\n// Assembling the extglob requires not just the negated patterns themselves,\n// but also anything following the negative patterns up to the boundary\n// of the current pattern, plus anything following in the parent pattern.\n//\n//\n// So, first, we parse the string into an AST of extglobs, without turning\n// anything into regexps yet.\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y']}, 'z'], ['j']]}, 'b']\n//\n// Then, for all the negative extglobs, we append whatever comes after in\n// each parent as their tail\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y'], 'z', 'b'}, 'z'], ['j']]}, 'b']\n//\n// Lastly, we turn each of these pieces into a regexp, and join\n//\n//                                 v----- .* because there's more following,\n//                                 v    v  otherwise, .+ because it must be\n//                                 v    v  *something* there.\n// ['^a', {@ ['i', 'w(?:(!?(?:x|y).*zb$).*)z', 'j' ]}, 'b$']\n//   copy what follows into here--^^^^^\n// ['^a', '(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)', 'b$']\n// ['^a(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)b$']\n\nexport type ExtglobType = '!' | '?' | '+' | '*' | '@'\nconst types = new Set<ExtglobType>(['!', '?', '+', '*', '@'])\nconst isExtglobType = (c: string): c is ExtglobType =>\n  types.has(c as ExtglobType)\n\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst startNoTraversal = '(?!(?:^|/)\\\\.\\\\.?(?:$|/))'\nconst startNoDot = '(?!\\\\.)'\n\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst addPatternStart = new Set(['[', '.'])\n// cases where traversal is A-OK, no dot prevention needed\nconst justDots = new Set(['..', '.'])\nconst reSpecials = new Set('().*{}+?[]^$\\\\!')\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// any single thing other than /\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst starNoEmpty = qmark + '+?'\n\n// remove the \\ chars that we added if we end up doing a nonmagic compare\n// const deslash = (s: string) => s.replace(/\\\\(.)/g, '$1')\n\nexport class AST {\n  type: ExtglobType | null\n  readonly #root: AST\n\n  #hasMagic?: boolean\n  #uflag: boolean = false\n  #parts: (string | AST)[] = []\n  readonly #parent?: AST\n  readonly #parentIndex: number\n  #negs: AST[]\n  #filledNegs: boolean = false\n  #options: MinimatchOptions\n  #toString?: string\n  // set to true if it's an extglob with no children\n  // (which really means one child of '')\n  #emptyExt: boolean = false\n\n  constructor(\n    type: ExtglobType | null,\n    parent?: AST,\n    options: MinimatchOptions = {}\n  ) {\n    this.type = type\n    // extglobs are inherently magical\n    if (type) this.#hasMagic = true\n    this.#parent = parent\n    this.#root = this.#parent ? this.#parent.#root : this\n    this.#options = this.#root === this ? options : this.#root.#options\n    this.#negs = this.#root === this ? [] : this.#root.#negs\n    if (type === '!' && !this.#root.#filledNegs) this.#negs.push(this)\n    this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0\n  }\n\n  get hasMagic(): boolean | undefined {\n    /* c8 ignore start */\n    if (this.#hasMagic !== undefined) return this.#hasMagic\n    /* c8 ignore stop */\n    for (const p of this.#parts) {\n      if (typeof p === 'string') continue\n      if (p.type || p.hasMagic) return (this.#hasMagic = true)\n    }\n    // note: will be undefined until we generate the regexp src and find out\n    return this.#hasMagic\n  }\n\n  // reconstructs the pattern\n  toString(): string {\n    if (this.#toString !== undefined) return this.#toString\n    if (!this.type) {\n      return (this.#toString = this.#parts.map(p => String(p)).join(''))\n    } else {\n      return (this.#toString =\n        this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')')\n    }\n  }\n\n  #fillNegs() {\n    /* c8 ignore start */\n    if (this !== this.#root) throw new Error('should only call on root')\n    if (this.#filledNegs) return this\n    /* c8 ignore stop */\n\n    // call toString() once to fill this out\n    this.toString()\n    this.#filledNegs = true\n    let n: AST | undefined\n    while ((n = this.#negs.pop())) {\n      if (n.type !== '!') continue\n      // walk up the tree, appending everthing that comes AFTER parentIndex\n      let p: AST | undefined = n\n      let pp = p.#parent\n      while (pp) {\n        for (\n          let i = p.#parentIndex + 1;\n          !pp.type && i < pp.#parts.length;\n          i++\n        ) {\n          for (const part of n.#parts) {\n            /* c8 ignore start */\n            if (typeof part === 'string') {\n              throw new Error('string part in extglob AST??')\n            }\n            /* c8 ignore stop */\n            part.copyIn(pp.#parts[i])\n          }\n        }\n        p = pp\n        pp = p.#parent\n      }\n    }\n    return this\n  }\n\n  push(...parts: (string | AST)[]) {\n    for (const p of parts) {\n      if (p === '') continue\n      /* c8 ignore start */\n      if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {\n        throw new Error('invalid part: ' + p)\n      }\n      /* c8 ignore stop */\n      this.#parts.push(p)\n    }\n  }\n\n  toJSON() {\n    const ret: any[] =\n      this.type === null\n        ? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))\n        : [this.type, ...this.#parts.map(p => (p as AST).toJSON())]\n    if (this.isStart() && !this.type) ret.unshift([])\n    if (\n      this.isEnd() &&\n      (this === this.#root ||\n        (this.#root.#filledNegs && this.#parent?.type === '!'))\n    ) {\n      ret.push({})\n    }\n    return ret\n  }\n\n  isStart(): boolean {\n    if (this.#root === this) return true\n    // if (this.type) return !!this.#parent?.isStart()\n    if (!this.#parent?.isStart()) return false\n    if (this.#parentIndex === 0) return true\n    // if everything AHEAD of this is a negation, then it's still the \"start\"\n    const p = this.#parent\n    for (let i = 0; i < this.#parentIndex; i++) {\n      const pp = p.#parts[i]\n      if (!(pp instanceof AST && pp.type === '!')) {\n        return false\n      }\n    }\n    return true\n  }\n\n  isEnd(): boolean {\n    if (this.#root === this) return true\n    if (this.#parent?.type === '!') return true\n    if (!this.#parent?.isEnd()) return false\n    if (!this.type) return this.#parent?.isEnd()\n    // if not root, it'll always have a parent\n    /* c8 ignore start */\n    const pl = this.#parent ? this.#parent.#parts.length : 0\n    /* c8 ignore stop */\n    return this.#parentIndex === pl - 1\n  }\n\n  copyIn(part: AST | string) {\n    if (typeof part === 'string') this.push(part)\n    else this.push(part.clone(this))\n  }\n\n  clone(parent: AST) {\n    const c = new AST(this.type, parent)\n    for (const p of this.#parts) {\n      c.copyIn(p)\n    }\n    return c\n  }\n\n  static #parseAST(\n    str: string,\n    ast: AST,\n    pos: number,\n    opt: MinimatchOptions\n  ): number {\n    let escaping = false\n    let inBrace = false\n    let braceStart = -1\n    let braceNeg = false\n    if (ast.type === null) {\n      // outside of a extglob, append until we find a start\n      let i = pos\n      let acc = ''\n      while (i < str.length) {\n        const c = str.charAt(i++)\n        // still accumulate escapes at this point, but we do ignore\n        // starts that are escaped\n        if (escaping || c === '\\\\') {\n          escaping = !escaping\n          acc += c\n          continue\n        }\n\n        if (inBrace) {\n          if (i === braceStart + 1) {\n            if (c === '^' || c === '!') {\n              braceNeg = true\n            }\n          } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n            inBrace = false\n          }\n          acc += c\n          continue\n        } else if (c === '[') {\n          inBrace = true\n          braceStart = i\n          braceNeg = false\n          acc += c\n          continue\n        }\n\n        if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {\n          ast.push(acc)\n          acc = ''\n          const ext = new AST(c, ast)\n          i = AST.#parseAST(str, ext, i, opt)\n          ast.push(ext)\n          continue\n        }\n        acc += c\n      }\n      ast.push(acc)\n      return i\n    }\n\n    // some kind of extglob, pos is at the (\n    // find the next | or )\n    let i = pos + 1\n    let part = new AST(null, ast)\n    const parts: AST[] = []\n    let acc = ''\n    while (i < str.length) {\n      const c = str.charAt(i++)\n      // still accumulate escapes at this point, but we do ignore\n      // starts that are escaped\n      if (escaping || c === '\\\\') {\n        escaping = !escaping\n        acc += c\n        continue\n      }\n\n      if (inBrace) {\n        if (i === braceStart + 1) {\n          if (c === '^' || c === '!') {\n            braceNeg = true\n          }\n        } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n          inBrace = false\n        }\n        acc += c\n        continue\n      } else if (c === '[') {\n        inBrace = true\n        braceStart = i\n        braceNeg = false\n        acc += c\n        continue\n      }\n\n      if (isExtglobType(c) && str.charAt(i) === '(') {\n        part.push(acc)\n        acc = ''\n        const ext = new AST(c, part)\n        part.push(ext)\n        i = AST.#parseAST(str, ext, i, opt)\n        continue\n      }\n      if (c === '|') {\n        part.push(acc)\n        acc = ''\n        parts.push(part)\n        part = new AST(null, ast)\n        continue\n      }\n      if (c === ')') {\n        if (acc === '' && ast.#parts.length === 0) {\n          ast.#emptyExt = true\n        }\n        part.push(acc)\n        acc = ''\n        ast.push(...parts, part)\n        return i\n      }\n      acc += c\n    }\n\n    // unfinished extglob\n    // if we got here, it was a malformed extglob! not an extglob, but\n    // maybe something else in there.\n    ast.type = null\n    ast.#hasMagic = undefined\n    ast.#parts = [str.substring(pos - 1)]\n    return i\n  }\n\n  static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n    const ast = new AST(null, undefined, options)\n    AST.#parseAST(pattern, ast, 0, options)\n    return ast\n  }\n\n  // returns the regular expression if there's magic, or the unescaped\n  // string if not.\n  toMMPattern(): MMRegExp | string {\n    // should only be called on root\n    /* c8 ignore start */\n    if (this !== this.#root) return this.#root.toMMPattern()\n    /* c8 ignore stop */\n    const glob = this.toString()\n    const [re, body, hasMagic, uflag] = this.toRegExpSource()\n    // if we're in nocase mode, and not nocaseMagicOnly, then we do\n    // still need a regular expression if we have to case-insensitively\n    // match capital/lowercase characters.\n    const anyMagic =\n      hasMagic ||\n      this.#hasMagic ||\n      (this.#options.nocase &&\n        !this.#options.nocaseMagicOnly &&\n        glob.toUpperCase() !== glob.toLowerCase())\n    if (!anyMagic) {\n      return body\n    }\n\n    const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '')\n    return Object.assign(new RegExp(`^${re}$`, flags), {\n      _src: re,\n      _glob: glob,\n    })\n  }\n\n  get options() {\n    return this.#options\n  }\n\n  // returns the string match, the regexp source, whether there's magic\n  // in the regexp (so a regular expression is required) and whether or\n  // not the uflag is needed for the regular expression (for posix classes)\n  // TODO: instead of injecting the start/end at this point, just return\n  // the BODY of the regexp, along with the start/end portions suitable\n  // for binding the start/end in either a joined full-path makeRe context\n  // (where we bind to (^|/), or a standalone matchPart context (where\n  // we bind to ^, and not /).  Otherwise slashes get duped!\n  //\n  // In part-matching mode, the start is:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n  // - if dots allowed or not possible: ^\n  // - if dots possible and not allowed: ^(?!\\.)\n  // end is:\n  // - if not isEnd(): nothing\n  // - else: $\n  //\n  // In full-path matching mode, we put the slash at the START of the\n  // pattern, so start is:\n  // - if first pattern: same as part-matching mode\n  // - if not isStart(): nothing\n  // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n  // - if dots allowed or not possible: /\n  // - if dots possible and not allowed: /(?!\\.)\n  // end is:\n  // - if last pattern, same as part-matching mode\n  // - else nothing\n  //\n  // Always put the (?:$|/) on negated tails, though, because that has to be\n  // there to bind the end of the negated pattern portion, and it's easier to\n  // just stick it in now rather than try to inject it later in the middle of\n  // the pattern.\n  //\n  // We can just always return the same end, and leave it up to the caller\n  // to know whether it's going to be used joined or in parts.\n  // And, if the start is adjusted slightly, can do the same there:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n  // - if dots allowed or not possible: (?:/|^)\n  // - if dots possible and not allowed: (?:/|^)(?!\\.)\n  //\n  // But it's better to have a simpler binding without a conditional, for\n  // performance, so probably better to return both start options.\n  //\n  // Then the caller just ignores the end if it's not the first pattern,\n  // and the start always gets applied.\n  //\n  // But that's always going to be $ if it's the ending pattern, or nothing,\n  // so the caller can just attach $ at the end of the pattern when building.\n  //\n  // So the todo is:\n  // - better detect what kind of start is needed\n  // - return both flavors of starting pattern\n  // - attach $ at the end of the pattern when creating the actual RegExp\n  //\n  // Ah, but wait, no, that all only applies to the root when the first pattern\n  // is not an extglob. If the first pattern IS an extglob, then we need all\n  // that dot prevention biz to live in the extglob portions, because eg\n  // +(*|.x*) can match .xy but not .yx.\n  //\n  // So, return the two flavors if it's #root and the first child is not an\n  // AST, otherwise leave it to the child AST to handle it, and there,\n  // use the (?:^|/) style of start binding.\n  //\n  // Even simplified further:\n  // - Since the start for a join is eg /(?!\\.) and the start for a part\n  // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n  // or start or whatever) and prepend ^ or / at the Regexp construction.\n  toRegExpSource(\n    allowDot?: boolean\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    const dot = allowDot ?? !!this.#options.dot\n    if (this.#root === this) this.#fillNegs()\n    if (!this.type) {\n      const noEmpty = this.isStart() && this.isEnd()\n      const src = this.#parts\n        .map(p => {\n          const [re, _, hasMagic, uflag] =\n            typeof p === 'string'\n              ? AST.#parseGlob(p, this.#hasMagic, noEmpty)\n              : p.toRegExpSource(allowDot)\n          this.#hasMagic = this.#hasMagic || hasMagic\n          this.#uflag = this.#uflag || uflag\n          return re\n        })\n        .join('')\n\n      let start = ''\n      if (this.isStart()) {\n        if (typeof this.#parts[0] === 'string') {\n          // this is the string that will match the start of the pattern,\n          // so we need to protect against dots and such.\n\n          // '.' and '..' cannot match unless the pattern is that exactly,\n          // even if it starts with . or dot:true is set.\n          const dotTravAllowed =\n            this.#parts.length === 1 && justDots.has(this.#parts[0])\n          if (!dotTravAllowed) {\n            const aps = addPatternStart\n            // check if we have a possibility of matching . or ..,\n            // and prevent that.\n            const needNoTrav =\n              // dots are allowed, and the pattern starts with [ or .\n              (dot && aps.has(src.charAt(0))) ||\n              // the pattern starts with \\., and then [ or .\n              (src.startsWith('\\\\.') && aps.has(src.charAt(2))) ||\n              // the pattern starts with \\.\\., and then [ or .\n              (src.startsWith('\\\\.\\\\.') && aps.has(src.charAt(4)))\n            // no need to prevent dots if it can't match a dot, or if a\n            // sub-pattern will be preventing it anyway.\n            const needNoDot = !dot && !allowDot && aps.has(src.charAt(0))\n\n            start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : ''\n          }\n        }\n      }\n\n      // append the \"end of path portion\" pattern to negation tails\n      let end = ''\n      if (\n        this.isEnd() &&\n        this.#root.#filledNegs &&\n        this.#parent?.type === '!'\n      ) {\n        end = '(?:$|\\\\/)'\n      }\n      const final = start + src + end\n      return [\n        final,\n        unescape(src),\n        (this.#hasMagic = !!this.#hasMagic),\n        this.#uflag,\n      ]\n    }\n\n    // We need to calculate the body *twice* if it's a repeat pattern\n    // at the start, once in nodot mode, then again in dot mode, so a\n    // pattern like *(?) can match 'x.y'\n\n    const repeated = this.type === '*' || this.type === '+'\n    // some kind of extglob\n    const start = this.type === '!' ? '(?:(?!(?:' : '(?:'\n    let body = this.#partsToRegExp(dot)\n\n    if (this.isStart() && this.isEnd() && !body && this.type !== '!') {\n      // invalid extglob, has to at least be *something* present, if it's\n      // the entire path portion.\n      const s = this.toString()\n      this.#parts = [s]\n      this.type = null\n      this.#hasMagic = undefined\n      return [s, unescape(this.toString()), false, false]\n    }\n\n    // XXX abstract out this map method\n    let bodyDotAllowed =\n      !repeated || allowDot || dot || !startNoDot\n        ? ''\n        : this.#partsToRegExp(true)\n    if (bodyDotAllowed === body) {\n      bodyDotAllowed = ''\n    }\n    if (bodyDotAllowed) {\n      body = `(?:${body})(?:${bodyDotAllowed})*?`\n    }\n\n    // an empty !() is exactly equivalent to a starNoEmpty\n    let final = ''\n    if (this.type === '!' && this.#emptyExt) {\n      final = (this.isStart() && !dot ? startNoDot : '') + starNoEmpty\n    } else {\n      const close =\n        this.type === '!'\n          ? // !() must match something,but !(x) can match ''\n            '))' +\n            (this.isStart() && !dot && !allowDot ? startNoDot : '') +\n            star +\n            ')'\n          : this.type === '@'\n          ? ')'\n          : this.type === '?'\n          ? ')?'\n          : this.type === '+' && bodyDotAllowed\n          ? ')'\n          : this.type === '*' && bodyDotAllowed\n          ? `)?`\n          : `)${this.type}`\n      final = start + body + close\n    }\n    return [\n      final,\n      unescape(body),\n      (this.#hasMagic = !!this.#hasMagic),\n      this.#uflag,\n    ]\n  }\n\n  #partsToRegExp(dot: boolean) {\n    return this.#parts\n      .map(p => {\n        // extglob ASTs should only contain parent ASTs\n        /* c8 ignore start */\n        if (typeof p === 'string') {\n          throw new Error('string type in extglob ast??')\n        }\n        /* c8 ignore stop */\n        // can ignore hasMagic, because extglobs are already always magic\n        const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot)\n        this.#uflag = this.#uflag || uflag\n        return re\n      })\n      .filter(p => !(this.isStart() && this.isEnd()) || !!p)\n      .join('|')\n  }\n\n  static #parseGlob(\n    glob: string,\n    hasMagic: boolean | undefined,\n    noEmpty: boolean = false\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    let escaping = false\n    let re = ''\n    let uflag = false\n    for (let i = 0; i < glob.length; i++) {\n      const c = glob.charAt(i)\n      if (escaping) {\n        escaping = false\n        re += (reSpecials.has(c) ? '\\\\' : '') + c\n        continue\n      }\n      if (c === '\\\\') {\n        if (i === glob.length - 1) {\n          re += '\\\\\\\\'\n        } else {\n          escaping = true\n        }\n        continue\n      }\n      if (c === '[') {\n        const [src, needUflag, consumed, magic] = parseClass(glob, i)\n        if (consumed) {\n          re += src\n          uflag = uflag || needUflag\n          i += consumed - 1\n          hasMagic = hasMagic || magic\n          continue\n        }\n      }\n      if (c === '*') {\n        if (noEmpty && glob === '*') re += starNoEmpty\n        else re += star\n        hasMagic = true\n        continue\n      }\n      if (c === '?') {\n        re += qmark\n        hasMagic = true\n        continue\n      }\n      re += regExpEscape(c)\n    }\n    return [re, unescape(glob), !!hasMagic, uflag]\n  }\n}\n", "import { MinimatchOptions } from './index.js'\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nexport const escape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  // don't need to escape +@! because we escape the parens\n  // that make those magic, and escaping ! as [!] isn't valid,\n  // because [!]] is a valid glob class meaning not ']'.\n  return windowsPathsNoEscape\n    ? s.replace(/[?*()[\\]]/g, '[$&]')\n    : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&')\n}\n", "import { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { fileURLToPath } from 'node:url'\nimport {\n  FSOption,\n  Path,\n  PathScurry,\n  PathScurryDarwin,\n  PathScurryPosix,\n  PathScurryWin32,\n} from 'path-scurry'\nimport { IgnoreLike } from './ignore.js'\nimport { Pattern } from './pattern.js'\nimport { GlobStream, GlobWalker } from './walker.js'\n\nexport type MatchSet = Minimatch['set']\nexport type GlobParts = Exclude<Minimatch['globParts'], undefined>\n\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform: NodeJS.Platform =\n  (\n    typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string'\n  ) ?\n    process.platform\n  : 'linux'\n\n/**\n * A `GlobOptions` object may be provided to any of the exported methods, and\n * must be provided to the `Glob` constructor.\n *\n * All options are optional, boolean, and false by default, unless otherwise\n * noted.\n *\n * All resolved options are added to the Glob object as properties.\n *\n * If you are running many `glob` operations, you can pass a Glob object as the\n * `options` argument to a subsequent operation to share the previously loaded\n * cache.\n */\nexport interface GlobOptions {\n  /**\n   * Set to `true` to always receive absolute paths for\n   * matched files. Set to `false` to always return relative paths.\n   *\n   * When this option is not set, absolute paths are returned for patterns\n   * that are absolute, and otherwise paths are returned that are relative\n   * to the `cwd` setting.\n   *\n   * This does _not_ make an extra system call to get\n   * the realpath, it only does string path resolution.\n   *\n   * Conflicts with {@link withFileTypes}\n   */\n  absolute?: boolean\n\n  /**\n   * Set to false to enable {@link windowsPathsNoEscape}\n   *\n   * @deprecated\n   */\n  allowWindowsEscape?: boolean\n\n  /**\n   * The current working directory in which to search. Defaults to\n   * `process.cwd()`.\n   *\n   * May be eiher a string path or a `file://` URL object or string.\n   */\n  cwd?: string | URL\n\n  /**\n   * Include `.dot` files in normal matches and `globstar`\n   * matches. Note that an explicit dot in a portion of the pattern\n   * will always match dot files.\n   */\n  dot?: boolean\n\n  /**\n   * Prepend all relative path strings with `./` (or `.\\` on Windows).\n   *\n   * Without this option, returned relative paths are \"bare\", so instead of\n   * returning `'./foo/bar'`, they are returned as `'foo/bar'`.\n   *\n   * Relative patterns starting with `'../'` are not prepended with `./`, even\n   * if this option is set.\n   */\n  dotRelative?: boolean\n\n  /**\n   * Follow symlinked directories when expanding `**`\n   * patterns. This can result in a lot of duplicate references in\n   * the presence of cyclic links, and make performance quite bad.\n   *\n   * By default, a `**` in a pattern will follow 1 symbolic link if\n   * it is not the first item in the pattern, or none if it is the\n   * first item in the pattern, following the same behavior as Bash.\n   */\n  follow?: boolean\n\n  /**\n   * string or string[], or an object with `ignore` and `ignoreChildren`\n   * methods.\n   *\n   * If a string or string[] is provided, then this is treated as a glob\n   * pattern or array of glob patterns to exclude from matches. To ignore all\n   * children within a directory, as well as the entry itself, append `'/**'`\n   * to the ignore pattern.\n   *\n   * **Note** `ignore` patterns are _always_ in `dot:true` mode, regardless of\n   * any other settings.\n   *\n   * If an object is provided that has `ignored(path)` and/or\n   * `childrenIgnored(path)` methods, then these methods will be called to\n   * determine whether any Path is a match or if its children should be\n   * traversed, respectively.\n   */\n  ignore?: string | string[] | IgnoreLike\n\n  /**\n   * Treat brace expansion like `{a,b}` as a \"magic\" pattern. Has no\n   * effect if {@link nobrace} is set.\n   *\n   * Only has effect on the {@link hasMagic} function.\n   */\n  magicalBraces?: boolean\n\n  /**\n   * Add a `/` character to directory matches. Note that this requires\n   * additional stat calls in some cases.\n   */\n  mark?: boolean\n\n  /**\n   * Perform a basename-only match if the pattern does not contain any slash\n   * characters. That is, `*.js` would be treated as equivalent to\n   * `**\\/*.js`, matching all js files in all directories.\n   */\n  matchBase?: boolean\n\n  /**\n   * Limit the directory traversal to a given depth below the cwd.\n   * Note that this does NOT prevent traversal to sibling folders,\n   * root patterns, and so on. It only limits the maximum folder depth\n   * that the walk will descend, relative to the cwd.\n   */\n  maxDepth?: number\n\n  /**\n   * Do not expand `{a,b}` and `{1..3}` brace sets.\n   */\n  nobrace?: boolean\n\n  /**\n   * Perform a case-insensitive match. This defaults to `true` on macOS and\n   * Windows systems, and `false` on all others.\n   *\n   * **Note** `nocase` should only be explicitly set when it is\n   * known that the filesystem's case sensitivity differs from the\n   * platform default. If set `true` on case-sensitive file\n   * systems, or `false` on case-insensitive file systems, then the\n   * walk may return more or less results than expected.\n   */\n  nocase?: boolean\n\n  /**\n   * Do not match directories, only files. (Note: to match\n   * _only_ directories, put a `/` at the end of the pattern.)\n   */\n  nodir?: boolean\n\n  /**\n   * Do not match \"extglob\" patterns such as `+(a|b)`.\n   */\n  noext?: boolean\n\n  /**\n   * Do not match `**` against multiple filenames. (Ie, treat it as a normal\n   * `*` instead.)\n   *\n   * Conflicts with {@link matchBase}\n   */\n  noglobstar?: boolean\n\n  /**\n   * Defaults to value of `process.platform` if available, or `'linux'` if\n   * not. Setting `platform:'win32'` on non-Windows systems may cause strange\n   * behavior.\n   */\n  platform?: NodeJS.Platform\n\n  /**\n   * Set to true to call `fs.realpath` on all of the\n   * results. In the case of an entry that cannot be resolved, the\n   * entry is omitted. This incurs a slight performance penalty, of\n   * course, because of the added system calls.\n   */\n  realpath?: boolean\n\n  /**\n   *\n   * A string path resolved against the `cwd` option, which\n   * is used as the starting point for absolute patterns that start\n   * with `/`, (but not drive letters or UNC paths on Windows).\n   *\n   * Note that this _doesn't_ necessarily limit the walk to the\n   * `root` directory, and doesn't affect the cwd starting point for\n   * non-absolute patterns. A pattern containing `..` will still be\n   * able to traverse out of the root directory, if it is not an\n   * actual root directory on the filesystem, and any non-absolute\n   * patterns will be matched in the `cwd`. For example, the\n   * pattern `/../*` with `{root:'/some/path'}` will return all\n   * files in `/some`, not all files in `/some/path`. The pattern\n   * `*` with `{root:'/some/path'}` will return all the entries in\n   * the cwd, not the entries in `/some/path`.\n   *\n   * To start absolute and non-absolute patterns in the same\n   * path, you can use `{root:''}`. However, be aware that on\n   * Windows systems, a pattern like `x:/*` or `//host/share/*` will\n   * _always_ start in the `x:/` or `//host/share` directory,\n   * regardless of the `root` setting.\n   */\n  root?: string\n\n  /**\n   * A [PathScurry](http://npm.im/path-scurry) object used\n   * to traverse the file system. If the `nocase` option is set\n   * explicitly, then any provided `scurry` object must match this\n   * setting.\n   */\n  scurry?: PathScurry\n\n  /**\n   * Call `lstat()` on all entries, whether required or not to determine\n   * if it's a valid match. When used with {@link withFileTypes}, this means\n   * that matches will include data such as modified time, permissions, and\n   * so on.  Note that this will incur a performance cost due to the added\n   * system calls.\n   */\n  stat?: boolean\n\n  /**\n   * An AbortSignal which will cancel the Glob walk when\n   * triggered.\n   */\n  signal?: AbortSignal\n\n  /**\n   * Use `\\\\` as a path separator _only_, and\n   *  _never_ as an escape character. If set, all `\\\\` characters are\n   *  replaced with `/` in the pattern.\n   *\n   *  Note that this makes it **impossible** to match against paths\n   *  containing literal glob pattern characters, but allows matching\n   *  with patterns constructed using `path.join()` and\n   *  `path.resolve()` on Windows platforms, mimicking the (buggy!)\n   *  behavior of Glob v7 and before on Windows. Please use with\n   *  caution, and be mindful of [the caveat below about Windows\n   *  paths](#windows). (For legacy reasons, this is also set if\n   *  `allowWindowsEscape` is set to the exact value `false`.)\n   */\n  windowsPathsNoEscape?: boolean\n\n  /**\n   * Return [PathScurry](http://npm.im/path-scurry)\n   * `Path` objects instead of strings. These are similar to a\n   * NodeJS `Dirent` object, but with additional methods and\n   * properties.\n   *\n   * Conflicts with {@link absolute}\n   */\n  withFileTypes?: boolean\n\n  /**\n   * An fs implementation to override some or all of the defaults.  See\n   * http://npm.im/path-scurry for details about what can be overridden.\n   */\n  fs?: FSOption\n\n  /**\n   * Just passed along to Minimatch.  Note that this makes all pattern\n   * matching operations slower and *extremely* noisy.\n   */\n  debug?: boolean\n\n  /**\n   * Return `/` delimited paths, even on Windows.\n   *\n   * On posix systems, this has no effect.  But, on Windows, it means that\n   * paths will be `/` delimited, and absolute paths will be their full\n   * resolved UNC forms, eg instead of `'C:\\\\foo\\\\bar'`, it would return\n   * `'//?/C:/foo/bar'`\n   */\n  posix?: boolean\n\n  /**\n   * Do not match any children of any matches. For example, the pattern\n   * `**\\/foo` would match `a/foo`, but not `a/foo/b/foo` in this mode.\n   *\n   * This is especially useful for cases like \"find all `node_modules`\n   * folders, but not the ones in `node_modules`\".\n   *\n   * In order to support this, the `Ignore` implementation must support an\n   * `add(pattern: string)` method. If using the default `Ignore` class, then\n   * this is fine, but if this is set to `false`, and a custom `Ignore` is\n   * provided that does not have an `add()` method, then it will throw an\n   * error.\n   *\n   * **Caveat** It *only* ignores matches that would be a descendant of a\n   * previous match, and only if that descendant is matched *after* the\n   * ancestor is encountered. Since the file system walk happens in\n   * indeterminate order, it's possible that a match will already be added\n   * before its ancestor, if multiple or braced patterns are used.\n   *\n   * For example:\n   *\n   * ```ts\n   * const results = await glob([\n   *   // likely to match first, since it's just a stat\n   *   'a/b/c/d/e/f',\n   *\n   *   // this pattern is more complicated! It must to various readdir()\n   *   // calls and test the results against a regular expression, and that\n   *   // is certainly going to take a little bit longer.\n   *   //\n   *   // So, later on, it encounters a match at 'a/b/c/d/e', but it's too\n   *   // late to ignore a/b/c/d/e/f, because it's already been emitted.\n   *   'a/[bdf]/?/[a-z]/*',\n   * ], { includeChildMatches: false })\n   * ```\n   *\n   * It's best to only set this to `false` if you can be reasonably sure that\n   * no components of the pattern will potentially match one another's file\n   * system descendants, or if the occasional included child entry will not\n   * cause problems.\n   *\n   * @default true\n   */\n  includeChildMatches?: boolean\n}\n\nexport type GlobOptionsWithFileTypesTrue = GlobOptions & {\n  withFileTypes: true\n  // string options not relevant if returning Path objects.\n  absolute?: undefined\n  mark?: undefined\n  posix?: undefined\n}\n\nexport type GlobOptionsWithFileTypesFalse = GlobOptions & {\n  withFileTypes?: false\n}\n\nexport type GlobOptionsWithFileTypesUnset = GlobOptions & {\n  withFileTypes?: undefined\n}\n\nexport type Result<Opts> =\n  Opts extends GlobOptionsWithFileTypesTrue ? Path\n  : Opts extends GlobOptionsWithFileTypesFalse ? string\n  : Opts extends GlobOptionsWithFileTypesUnset ? string\n  : string | Path\nexport type Results<Opts> = Result<Opts>[]\n\nexport type FileTypes<Opts> =\n  Opts extends GlobOptionsWithFileTypesTrue ? true\n  : Opts extends GlobOptionsWithFileTypesFalse ? false\n  : Opts extends GlobOptionsWithFileTypesUnset ? false\n  : boolean\n\n/**\n * An object that can perform glob pattern traversals.\n */\nexport class Glob<Opts extends GlobOptions> implements GlobOptions {\n  absolute?: boolean\n  cwd: string\n  root?: string\n  dot: boolean\n  dotRelative: boolean\n  follow: boolean\n  ignore?: string | string[] | IgnoreLike\n  magicalBraces: boolean\n  mark?: boolean\n  matchBase: boolean\n  maxDepth: number\n  nobrace: boolean\n  nocase: boolean\n  nodir: boolean\n  noext: boolean\n  noglobstar: boolean\n  pattern: string[]\n  platform: NodeJS.Platform\n  realpath: boolean\n  scurry: PathScurry\n  stat: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape: boolean\n  withFileTypes: FileTypes<Opts>\n  includeChildMatches: boolean\n\n  /**\n   * The options provided to the constructor.\n   */\n  opts: Opts\n\n  /**\n   * An array of parsed immutable {@link Pattern} objects.\n   */\n  patterns: Pattern[]\n\n  /**\n   * All options are stored as properties on the `Glob` object.\n   *\n   * See {@link GlobOptions} for full options descriptions.\n   *\n   * Note that a previous `Glob` object can be passed as the\n   * `GlobOptions` to another `Glob` instantiation to re-use settings\n   * and caches with a new pattern.\n   *\n   * Traversal functions can be called multiple times to run the walk\n   * again.\n   */\n  constructor(pattern: string | string[], opts: Opts) {\n    /* c8 ignore start */\n    if (!opts) throw new TypeError('glob options required')\n    /* c8 ignore stop */\n    this.withFileTypes = !!opts.withFileTypes as FileTypes<Opts>\n    this.signal = opts.signal\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.dotRelative = !!opts.dotRelative\n    this.nodir = !!opts.nodir\n    this.mark = !!opts.mark\n    if (!opts.cwd) {\n      this.cwd = ''\n    } else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n      opts.cwd = fileURLToPath(opts.cwd)\n    }\n    this.cwd = opts.cwd || ''\n    this.root = opts.root\n    this.magicalBraces = !!opts.magicalBraces\n    this.nobrace = !!opts.nobrace\n    this.noext = !!opts.noext\n    this.realpath = !!opts.realpath\n    this.absolute = opts.absolute\n    this.includeChildMatches = opts.includeChildMatches !== false\n\n    this.noglobstar = !!opts.noglobstar\n    this.matchBase = !!opts.matchBase\n    this.maxDepth =\n      typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity\n    this.stat = !!opts.stat\n    this.ignore = opts.ignore\n\n    if (this.withFileTypes && this.absolute !== undefined) {\n      throw new Error('cannot set absolute and withFileTypes:true')\n    }\n\n    if (typeof pattern === 'string') {\n      pattern = [pattern]\n    }\n\n    this.windowsPathsNoEscape =\n      !!opts.windowsPathsNoEscape ||\n      (opts as { allowWindowsEscape?: boolean }).allowWindowsEscape ===\n        false\n\n    if (this.windowsPathsNoEscape) {\n      pattern = pattern.map(p => p.replace(/\\\\/g, '/'))\n    }\n\n    if (this.matchBase) {\n      if (opts.noglobstar) {\n        throw new TypeError('base matching requires globstar')\n      }\n      pattern = pattern.map(p => (p.includes('/') ? p : `./**/${p}`))\n    }\n\n    this.pattern = pattern\n\n    this.platform = opts.platform || defaultPlatform\n    this.opts = { ...opts, platform: this.platform }\n    if (opts.scurry) {\n      this.scurry = opts.scurry\n      if (\n        opts.nocase !== undefined &&\n        opts.nocase !== opts.scurry.nocase\n      ) {\n        throw new Error('nocase option contradicts provided scurry option')\n      }\n    } else {\n      const Scurry =\n        opts.platform === 'win32' ? PathScurryWin32\n        : opts.platform === 'darwin' ? PathScurryDarwin\n        : opts.platform ? PathScurryPosix\n        : PathScurry\n      this.scurry = new Scurry(this.cwd, {\n        nocase: opts.nocase,\n        fs: opts.fs,\n      })\n    }\n    this.nocase = this.scurry.nocase\n\n    // If you do nocase:true on a case-sensitive file system, then\n    // we need to use regexps instead of strings for non-magic\n    // path portions, because statting `aBc` won't return results\n    // for the file `AbC` for example.\n    const nocaseMagicOnly =\n      this.platform === 'darwin' || this.platform === 'win32'\n\n    const mmo: MinimatchOptions = {\n      // default nocase based on platform\n      ...opts,\n      dot: this.dot,\n      matchBase: this.matchBase,\n      nobrace: this.nobrace,\n      nocase: this.nocase,\n      nocaseMagicOnly,\n      nocomment: true,\n      noext: this.noext,\n      nonegate: true,\n      optimizationLevel: 2,\n      platform: this.platform,\n      windowsPathsNoEscape: this.windowsPathsNoEscape,\n      debug: !!this.opts.debug,\n    }\n\n    const mms = this.pattern.map(p => new Minimatch(p, mmo))\n    const [matchSet, globParts] = mms.reduce(\n      (set: [MatchSet, GlobParts], m) => {\n        set[0].push(...m.set)\n        set[1].push(...m.globParts)\n        return set\n      },\n      [[], []],\n    )\n    this.patterns = matchSet.map((set, i) => {\n      const g = globParts[i]\n      /* c8 ignore start */\n      if (!g) throw new Error('invalid pattern object')\n      /* c8 ignore stop */\n      return new Pattern(set, g, 0, this.platform)\n    })\n  }\n\n  /**\n   * Returns a Promise that resolves to the results array.\n   */\n  async walk(): Promise<Results<Opts>>\n  async walk(): Promise<(string | Path)[]> {\n    // Walkers always return array of Path objects, so we just have to\n    // coerce them into the right shape.  It will have already called\n    // realpath() if the option was set to do so, so we know that's cached.\n    // start out knowing the cwd, at least\n    return [\n      ...(await new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity ?\n            this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n        includeChildMatches: this.includeChildMatches,\n      }).walk()),\n    ]\n  }\n\n  /**\n   * synchronous {@link Glob.walk}\n   */\n  walkSync(): Results<Opts>\n  walkSync(): (string | Path)[] {\n    return [\n      ...new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity ?\n            this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n        includeChildMatches: this.includeChildMatches,\n      }).walkSync(),\n    ]\n  }\n\n  /**\n   * Stream results asynchronously.\n   */\n  stream(): Minipass<Result<Opts>, Result<Opts>>\n  stream(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity ?\n          this.maxDepth + this.scurry.cwd.depth()\n        : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n      includeChildMatches: this.includeChildMatches,\n    }).stream()\n  }\n\n  /**\n   * Stream results synchronously.\n   */\n  streamSync(): Minipass<Result<Opts>, Result<Opts>>\n  streamSync(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity ?\n          this.maxDepth + this.scurry.cwd.depth()\n        : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n      includeChildMatches: this.includeChildMatches,\n    }).streamSync()\n  }\n\n  /**\n   * Default sync iteration function. Returns a Generator that\n   * iterates over the results.\n   */\n  iterateSync(): Generator<Result<Opts>, void, void> {\n    return this.streamSync()[Symbol.iterator]()\n  }\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  /**\n   * Default async iteration function. Returns an AsyncGenerator that\n   * iterates over the results.\n   */\n  iterate(): AsyncGenerator<Result<Opts>, void, void> {\n    return this.stream()[Symbol.asyncIterator]()\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n}\n", "/**\n * @module LRUCache\n */\n\n// module-private names and types\ntype Perf = { now: () => number }\nconst perf: Perf =\n  typeof performance === 'object' &&\n  performance &&\n  typeof performance.now === 'function'\n    ? performance\n    : Date\n\nconst warned = new Set<string>()\n\n// either a function or a class\ntype ForC = ((...a: any[]) => any) | { new (...a: any[]): any }\n\n/* c8 ignore start */\nconst PROCESS = (\n  typeof process === 'object' && !!process ? process : {}\n) as { [k: string]: any }\n/* c8 ignore start */\n\nconst emitWarning = (\n  msg: string,\n  type: string,\n  code: string,\n  fn: ForC\n) => {\n  typeof PROCESS.emitWarning === 'function'\n    ? PROCESS.emitWarning(msg, type, code, fn)\n    : console.error(`[${code}] ${type}: ${msg}`)\n}\n\nlet AC = globalThis.AbortController\nlet AS = globalThis.AbortSignal\n\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n  //@ts-ignore\n  AS = class AbortSignal {\n    onabort?: (...a: any[]) => any\n    _onabort: ((...a: any[]) => any)[] = []\n    reason?: any\n    aborted: boolean = false\n    addEventListener(_: string, fn: (...a: any[]) => any) {\n      this._onabort.push(fn)\n    }\n  }\n  //@ts-ignore\n  AC = class AbortController {\n    constructor() {\n      warnACPolyfill()\n    }\n    signal = new AS()\n    abort(reason: any) {\n      if (this.signal.aborted) return\n      //@ts-ignore\n      this.signal.reason = reason\n      //@ts-ignore\n      this.signal.aborted = true\n      //@ts-ignore\n      for (const fn of this.signal._onabort) {\n        fn(reason)\n      }\n      this.signal.onabort?.(reason)\n    }\n  }\n  let printACPolyfillWarning =\n    PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1'\n  const warnACPolyfill = () => {\n    if (!printACPolyfillWarning) return\n    printACPolyfillWarning = false\n    emitWarning(\n      'AbortController is not defined. If using lru-cache in ' +\n        'node 14, load an AbortController polyfill from the ' +\n        '`node-abort-controller` package. A minimal polyfill is ' +\n        'provided for use by LRUCache.fetch(), but it should not be ' +\n        'relied upon in other contexts (eg, passing it to other APIs that ' +\n        'use AbortController/AbortSignal might have undesirable effects). ' +\n        'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.',\n      'NO_ABORT_CONTROLLER',\n      'ENOTSUP',\n      warnACPolyfill\n    )\n  }\n}\n/* c8 ignore stop */\n\nconst shouldWarn = (code: string) => !warned.has(code)\n\nconst TYPE = Symbol('type')\nexport type PosInt = number & { [TYPE]: 'Positive Integer' }\nexport type Index = number & { [TYPE]: 'LRUCache Index' }\n\nconst isPosInt = (n: any): n is PosInt =>\n  n && n === Math.floor(n) && n > 0 && isFinite(n)\n\nexport type UintArray = Uint8Array | Uint16Array | Uint32Array\nexport type NumberArray = UintArray | number[]\n\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max: number) =>\n  !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n    ? Uint8Array\n    : max <= Math.pow(2, 16)\n    ? Uint16Array\n    : max <= Math.pow(2, 32)\n    ? Uint32Array\n    : max <= Number.MAX_SAFE_INTEGER\n    ? ZeroArray\n    : null\n/* c8 ignore stop */\n\nclass ZeroArray extends Array<number> {\n  constructor(size: number) {\n    super(size)\n    this.fill(0)\n  }\n}\nexport type { ZeroArray }\nexport type { Stack }\n\nexport type StackLike = Stack | Index[]\nclass Stack {\n  heap: NumberArray\n  length: number\n  // private constructor\n  static #constructing: boolean = false\n  static create(max: number): StackLike {\n    const HeapCls = getUintArray(max)\n    if (!HeapCls) return []\n    Stack.#constructing = true\n    const s = new Stack(max, HeapCls)\n    Stack.#constructing = false\n    return s\n  }\n  constructor(\n    max: number,\n    HeapCls: { new (n: number): NumberArray }\n  ) {\n    /* c8 ignore start */\n    if (!Stack.#constructing) {\n      throw new TypeError('instantiate Stack using Stack.create(n)')\n    }\n    /* c8 ignore stop */\n    this.heap = new HeapCls(max)\n    this.length = 0\n  }\n  push(n: Index) {\n    this.heap[this.length++] = n\n  }\n  pop(): Index {\n    return this.heap[--this.length] as Index\n  }\n}\n\n/**\n * Promise representing an in-progress {@link LRUCache#fetch} call\n */\nexport type BackgroundFetch<V> = Promise<V | undefined> & {\n  __returned: BackgroundFetch<V> | undefined\n  __abortController: AbortController\n  __staleWhileFetching: V | undefined\n}\n\nexport type DisposeTask<K, V> = [\n  value: V,\n  key: K,\n  reason: LRUCache.DisposeReason\n]\n\nexport namespace LRUCache {\n  /**\n   * An integer greater than 0, reflecting the calculated size of items\n   */\n  export type Size = number\n\n  /**\n   * Integer greater than 0, representing some number of milliseconds, or the\n   * time at which a TTL started counting from.\n   */\n  export type Milliseconds = number\n\n  /**\n   * An integer greater than 0, reflecting a number of items\n   */\n  export type Count = number\n\n  /**\n   * The reason why an item was removed from the cache, passed\n   * to the {@link Disposer} methods.\n   *\n   * - `evict`: The item was evicted because it is the least recently used,\n   *   and the cache is full.\n   * - `set`: A new value was set, overwriting the old value being disposed.\n   * - `delete`: The item was explicitly deleted, either by calling\n   *   {@link LRUCache#delete}, {@link LRUCache#clear}, or\n   *   {@link LRUCache#set} with an undefined value.\n   * - `expire`: The item was removed due to exceeding its TTL.\n   * - `fetch`: A {@link OptionsBase#fetchMethod} operation returned\n   *   `undefined` or was aborted, causing the item to be deleted.\n   */\n  export type DisposeReason =\n    | 'evict'\n    | 'set'\n    | 'delete'\n    | 'expire'\n    | 'fetch'\n  /**\n   * A method called upon item removal, passed as the\n   * {@link OptionsBase.dispose} and/or\n   * {@link OptionsBase.disposeAfter} options.\n   */\n  export type Disposer<K, V> = (\n    value: V,\n    key: K,\n    reason: DisposeReason\n  ) => void\n\n  /**\n   * A function that returns the effective calculated size\n   * of an entry in the cache.\n   */\n  export type SizeCalculator<K, V> = (value: V, key: K) => Size\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.fetchMethod} function.\n   */\n  export interface FetcherOptions<K, V, FC = unknown> {\n    signal: AbortSignal\n    options: FetcherFetchOptions<K, V, FC>\n    /**\n     * Object provided in the {@link FetchOptions.context} option to\n     * {@link LRUCache#fetch}\n     */\n    context: FC\n  }\n\n  /**\n   * Occasionally, it may be useful to track the internal behavior of the\n   * cache, particularly for logging, debugging, or for behavior within the\n   * `fetchMethod`. To do this, you can pass a `status` object to the\n   * {@link LRUCache#fetch}, {@link LRUCache#get}, {@link LRUCache#set},\n   * {@link LRUCache#memo}, and {@link LRUCache#has} methods.\n   *\n   * The `status` option should be a plain JavaScript object. The following\n   * fields will be set on it appropriately, depending on the situation.\n   */\n  export interface Status<V> {\n    /**\n     * The status of a set() operation.\n     *\n     * - add: the item was not found in the cache, and was added\n     * - update: the item was in the cache, with the same value provided\n     * - replace: the item was in the cache, and replaced\n     * - miss: the item was not added to the cache for some reason\n     */\n    set?: 'add' | 'update' | 'replace' | 'miss'\n\n    /**\n     * the ttl stored for the item, or undefined if ttls are not used.\n     */\n    ttl?: Milliseconds\n\n    /**\n     * the start time for the item, or undefined if ttls are not used.\n     */\n    start?: Milliseconds\n\n    /**\n     * The timestamp used for TTL calculation\n     */\n    now?: Milliseconds\n\n    /**\n     * the remaining ttl for the item, or undefined if ttls are not used.\n     */\n    remainingTTL?: Milliseconds\n\n    /**\n     * The calculated size for the item, if sizes are used.\n     */\n    entrySize?: Size\n\n    /**\n     * The total calculated size of the cache, if sizes are used.\n     */\n    totalCalculatedSize?: Size\n\n    /**\n     * A flag indicating that the item was not stored, due to exceeding the\n     * {@link OptionsBase.maxEntrySize}\n     */\n    maxEntrySizeExceeded?: true\n\n    /**\n     * The old value, specified in the case of `set:'update'` or\n     * `set:'replace'`\n     */\n    oldValue?: V\n\n    /**\n     * The results of a {@link LRUCache#has} operation\n     *\n     * - hit: the item was found in the cache\n     * - stale: the item was found in the cache, but is stale\n     * - miss: the item was not found in the cache\n     */\n    has?: 'hit' | 'stale' | 'miss'\n\n    /**\n     * The status of a {@link LRUCache#fetch} operation.\n     * Note that this can change as the underlying fetch() moves through\n     * various states.\n     *\n     * - inflight: there is another fetch() for this key which is in process\n     * - get: there is no {@link OptionsBase.fetchMethod}, so\n     *   {@link LRUCache#get} was called.\n     * - miss: the item is not in cache, and will be fetched.\n     * - hit: the item is in the cache, and was resolved immediately.\n     * - stale: the item is in the cache, but stale.\n     * - refresh: the item is in the cache, and not stale, but\n     *   {@link FetchOptions.forceRefresh} was specified.\n     */\n    fetch?: 'get' | 'inflight' | 'miss' | 'hit' | 'stale' | 'refresh'\n\n    /**\n     * The {@link OptionsBase.fetchMethod} was called\n     */\n    fetchDispatched?: true\n\n    /**\n     * The cached value was updated after a successful call to\n     * {@link OptionsBase.fetchMethod}\n     */\n    fetchUpdated?: true\n\n    /**\n     * The reason for a fetch() rejection.  Either the error raised by the\n     * {@link OptionsBase.fetchMethod}, or the reason for an\n     * AbortSignal.\n     */\n    fetchError?: Error\n\n    /**\n     * The fetch received an abort signal\n     */\n    fetchAborted?: true\n\n    /**\n     * The abort signal received was ignored, and the fetch was allowed to\n     * continue.\n     */\n    fetchAbortIgnored?: true\n\n    /**\n     * The fetchMethod promise resolved successfully\n     */\n    fetchResolved?: true\n\n    /**\n     * The fetchMethod promise was rejected\n     */\n    fetchRejected?: true\n\n    /**\n     * The status of a {@link LRUCache#get} operation.\n     *\n     * - fetching: The item is currently being fetched.  If a previous value\n     *   is present and allowed, that will be returned.\n     * - stale: The item is in the cache, and is stale.\n     * - hit: the item is in the cache\n     * - miss: the item is not in the cache\n     */\n    get?: 'stale' | 'hit' | 'miss'\n\n    /**\n     * A fetch or get operation returned a stale value.\n     */\n    returnedStale?: true\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#fetch}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link OptionsBase.noDeleteOnFetchRejection},\n   * {@link OptionsBase.allowStaleOnFetchRejection},\n   * {@link FetchOptions.forceRefresh}, and\n   * {@link FetcherOptions.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.fetchMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the fetchMethod is called.\n   */\n  export interface FetcherFetchOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    status?: Status<V>\n    size?: Size\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#fetch} method.\n   */\n  export interface FetchOptions<K, V, FC>\n    extends FetcherFetchOptions<K, V, FC> {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.fetchMethod} as\n     * the {@link FetcherOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    signal?: AbortSignal\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface FetchOptionsWithContext<K, V, FC>\n    extends FetchOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface FetchOptionsNoContext<K, V>\n    extends FetchOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  export interface MemoOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.memoMethod} as\n     * the {@link MemoizerOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#memo} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface MemoOptionsWithContext<K, V, FC>\n    extends MemoOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#memo} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface MemoOptionsNoContext<K, V>\n    extends MemoOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.memoMethod} function.\n   */\n  export interface MemoizerOptions<K, V, FC = unknown> {\n    options: MemoizerMemoOptions<K, V, FC>\n    /**\n     * Object provided in the {@link MemoOptions.context} option to\n     * {@link LRUCache#memo}\n     */\n    context: FC\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#memo}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link MemoOptions.forceRefresh}, and\n   * {@link MemoOptions.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.memoMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the memoMethod is called.\n   */\n  export interface MemoizerMemoOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n    > {\n    status?: Status<V>\n    size?: Size\n    start?: Milliseconds\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#has} method.\n   */\n  export interface HasOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'updateAgeOnHas'> {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#get} method.\n   */\n  export interface GetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'allowStale' | 'updateAgeOnGet' | 'noDeleteOnStaleGet'\n    > {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#peek} method.\n   */\n  export interface PeekOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'allowStale'> {}\n\n  /**\n   * Options that may be passed to the {@link LRUCache#set} method.\n   */\n  export interface SetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'sizeCalculation' | 'ttl' | 'noDisposeOnSet' | 'noUpdateTTL'\n    > {\n    /**\n     * If size tracking is enabled, then setting an explicit size\n     * in the {@link LRUCache#set} call will prevent calling the\n     * {@link OptionsBase.sizeCalculation} function.\n     */\n    size?: Size\n    /**\n     * If TTL tracking is enabled, then setting an explicit start\n     * time in the {@link LRUCache#set} call will override the\n     * default time from `performance.now()` or `Date.now()`.\n     *\n     * Note that it must be a valid value for whichever time-tracking\n     * method is in use.\n     */\n    start?: Milliseconds\n    status?: Status<V>\n  }\n\n  /**\n   * The type signature for the {@link OptionsBase.fetchMethod} option.\n   */\n  export type Fetcher<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: FetcherOptions<K, V, FC>\n  ) => Promise<V | undefined | void> | V | undefined | void\n\n  /**\n   * the type signature for the {@link OptionsBase.memoMethod} option.\n   */\n  export type Memoizer<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: MemoizerOptions<K, V, FC>\n  ) => V\n\n  /**\n   * Options which may be passed to the {@link LRUCache} constructor.\n   *\n   * Most of these may be overridden in the various options that use\n   * them.\n   *\n   * Despite all being technically optional, the constructor requires that\n   * a cache is at minimum limited by one or more of {@link OptionsBase.max},\n   * {@link OptionsBase.ttl}, or {@link OptionsBase.maxSize}.\n   *\n   * If {@link OptionsBase.ttl} is used alone, then it is strongly advised\n   * (and in fact required by the type definitions here) that the cache\n   * also set {@link OptionsBase.ttlAutopurge}, to prevent potentially\n   * unbounded storage.\n   *\n   * All options are also available on the {@link LRUCache} instance, making\n   * it safe to pass an LRUCache instance as the options argumemnt to\n   * make another empty cache of the same type.\n   *\n   * Some options are marked as read-only, because changing them after\n   * instantiation is not safe. Changing any of the other options will of\n   * course only have an effect on subsequent method calls.\n   */\n  export interface OptionsBase<K, V, FC> {\n    /**\n     * The maximum number of items to store in the cache before evicting\n     * old entries. This is read-only on the {@link LRUCache} instance,\n     * and may not be overridden.\n     *\n     * If set, then storage space will be pre-allocated at construction\n     * time, and the cache will perform significantly faster.\n     *\n     * Note that significantly fewer items may be stored, if\n     * {@link OptionsBase.maxSize} and/or {@link OptionsBase.ttl} are also\n     * set.\n     *\n     * **It is strongly recommended to set a `max` to prevent unbounded growth\n     * of the cache.**\n     */\n    max?: Count\n\n    /**\n     * Max time in milliseconds for items to live in cache before they are\n     * considered stale.  Note that stale items are NOT preemptively removed by\n     * default, and MAY live in the cache, contributing to its LRU max, long\n     * after they have expired, unless {@link OptionsBase.ttlAutopurge} is\n     * set.\n     *\n     * If set to `0` (the default value), then that means \"do not track\n     * TTL\", not \"expire immediately\".\n     *\n     * Also, as this cache is optimized for LRU/MRU operations, some of\n     * the staleness/TTL checks will reduce performance, as they will incur\n     * overhead by deleting items.\n     *\n     * This is not primarily a TTL cache, and does not make strong TTL\n     * guarantees. There is no pre-emptive pruning of expired items, but you\n     * _may_ set a TTL on the cache, and it will treat expired items as missing\n     * when they are fetched, and delete them.\n     *\n     * Optional, but must be a non-negative integer in ms if specified.\n     *\n     * This may be overridden by passing an options object to `cache.set()`.\n     *\n     * At least one of `max`, `maxSize`, or `TTL` is required. This must be a\n     * positive integer if set.\n     *\n     * Even if ttl tracking is enabled, **it is strongly recommended to set a\n     * `max` to prevent unbounded growth of the cache.**\n     *\n     * If ttl tracking is enabled, and `max` and `maxSize` are not set,\n     * and `ttlAutopurge` is not set, then a warning will be emitted\n     * cautioning about the potential for unbounded memory consumption.\n     * (The TypeScript definitions will also discourage this.)\n     */\n    ttl?: Milliseconds\n\n    /**\n     * Minimum amount of time in ms in which to check for staleness.\n     * Defaults to 1, which means that the current time is checked\n     * at most once per millisecond.\n     *\n     * Set to 0 to check the current time every time staleness is tested.\n     * (This reduces performance, and is theoretically unnecessary.)\n     *\n     * Setting this to a higher value will improve performance somewhat\n     * while using ttl tracking, albeit at the expense of keeping stale\n     * items around a bit longer than their TTLs would indicate.\n     *\n     * @default 1\n     */\n    ttlResolution?: Milliseconds\n\n    /**\n     * Preemptively remove stale items from the cache.\n     *\n     * Note that this may *significantly* degrade performance, especially if\n     * the cache is storing a large number of items. It is almost always best\n     * to just leave the stale items in the cache, and let them fall out as new\n     * items are added.\n     *\n     * Note that this means that {@link OptionsBase.allowStale} is a bit\n     * pointless, as stale items will be deleted almost as soon as they\n     * expire.\n     *\n     * Use with caution!\n     */\n    ttlAutopurge?: boolean\n\n    /**\n     * When using time-expiring entries with `ttl`, setting this to `true` will\n     * make each item's age reset to 0 whenever it is retrieved from cache with\n     * {@link LRUCache#get}, causing it to not expire. (It can still fall out\n     * of cache based on recency of use, of course.)\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     */\n    updateAgeOnGet?: boolean\n\n    /**\n     * When using time-expiring entries with `ttl`, setting this to `true` will\n     * make each item's age reset to 0 whenever its presence in the cache is\n     * checked with {@link LRUCache#has}, causing it to not expire. (It can\n     * still fall out of cache based on recency of use, of course.)\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     */\n    updateAgeOnHas?: boolean\n\n    /**\n     * Allow {@link LRUCache#get} and {@link LRUCache#fetch} calls to return\n     * stale data, if available.\n     *\n     * By default, if you set `ttl`, stale items will only be deleted from the\n     * cache when you `get(key)`. That is, it's not preemptively pruning items,\n     * unless {@link OptionsBase.ttlAutopurge} is set.\n     *\n     * If you set `allowStale:true`, it'll return the stale value *as well as*\n     * deleting it. If you don't set this, then it'll return `undefined` when\n     * you try to get a stale entry.\n     *\n     * Note that when a stale entry is fetched, _even if it is returned due to\n     * `allowStale` being set_, it is removed from the cache immediately. You\n     * can suppress this behavior by setting\n     * {@link OptionsBase.noDeleteOnStaleGet}, either in the constructor, or in\n     * the options provided to {@link LRUCache#get}.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     * The `cache.has()` method will always return `false` for stale items.\n     *\n     * Only relevant if a ttl is set.\n     */\n    allowStale?: boolean\n\n    /**\n     * Function that is called on items when they are dropped from the\n     * cache, as `dispose(value, key, reason)`.\n     *\n     * This can be handy if you want to close file descriptors or do\n     * other cleanup tasks when items are no longer stored in the cache.\n     *\n     * **NOTE**: It is called _before_ the item has been fully removed\n     * from the cache, so if you want to put it right back in, you need\n     * to wait until the next tick. If you try to add it back in during\n     * the `dispose()` function call, it will break things in subtle and\n     * weird ways.\n     *\n     * Unlike several other options, this may _not_ be overridden by\n     * passing an option to `set()`, for performance reasons.\n     *\n     * The `reason` will be one of the following strings, corresponding\n     * to the reason for the item's deletion:\n     *\n     * - `evict` Item was evicted to make space for a new addition\n     * - `set` Item was overwritten by a new value\n     * - `expire` Item expired its TTL\n     * - `fetch` Item was deleted due to a failed or aborted fetch, or a\n     *   fetchMethod returning `undefined.\n     * - `delete` Item was removed by explicit `cache.delete(key)`,\n     *   `cache.clear()`, or `cache.set(key, undefined)`.\n     */\n    dispose?: Disposer<K, V>\n\n    /**\n     * The same as {@link OptionsBase.dispose}, but called *after* the entry\n     * is completely removed and the cache is once again in a clean state.\n     *\n     * It is safe to add an item right back into the cache at this point.\n     * However, note that it is *very* easy to inadvertently create infinite\n     * recursion this way.\n     */\n    disposeAfter?: Disposer<K, V>\n\n    /**\n     * Set to true to suppress calling the\n     * {@link OptionsBase.dispose} function if the entry key is\n     * still accessible within the cache.\n     *\n     * This may be overridden by passing an options object to\n     * {@link LRUCache#set}.\n     *\n     * Only relevant if `dispose` or `disposeAfter` are set.\n     */\n    noDisposeOnSet?: boolean\n\n    /**\n     * Boolean flag to tell the cache to not update the TTL when setting a new\n     * value for an existing key (ie, when updating a value rather than\n     * inserting a new value).  Note that the TTL value is _always_ set (if\n     * provided) when adding a new entry into the cache.\n     *\n     * Has no effect if a {@link OptionsBase.ttl} is not set.\n     *\n     * May be passed as an option to {@link LRUCache#set}.\n     */\n    noUpdateTTL?: boolean\n\n    /**\n     * Set to a positive integer to track the sizes of items added to the\n     * cache, and automatically evict items in order to stay below this size.\n     * Note that this may result in fewer than `max` items being stored.\n     *\n     * Attempting to add an item to the cache whose calculated size is greater\n     * that this amount will be a no-op. The item will not be cached, and no\n     * other items will be evicted.\n     *\n     * Optional, must be a positive integer if provided.\n     *\n     * Sets `maxEntrySize` to the same value, unless a different value is\n     * provided for `maxEntrySize`.\n     *\n     * At least one of `max`, `maxSize`, or `TTL` is required. This must be a\n     * positive integer if set.\n     *\n     * Even if size tracking is enabled, **it is strongly recommended to set a\n     * `max` to prevent unbounded growth of the cache.**\n     *\n     * Note also that size tracking can negatively impact performance,\n     * though for most cases, only minimally.\n     */\n    maxSize?: Size\n\n    /**\n     * The maximum allowed size for any single item in the cache.\n     *\n     * If a larger item is passed to {@link LRUCache#set} or returned by a\n     * {@link OptionsBase.fetchMethod} or {@link OptionsBase.memoMethod}, then\n     * it will not be stored in the cache.\n     *\n     * Attempting to add an item whose calculated size is greater than\n     * this amount will not cache the item or evict any old items, but\n     * WILL delete an existing value if one is already present.\n     *\n     * Optional, must be a positive integer if provided. Defaults to\n     * the value of `maxSize` if provided.\n     */\n    maxEntrySize?: Size\n\n    /**\n     * A function that returns a number indicating the item's size.\n     *\n     * Requires {@link OptionsBase.maxSize} to be set.\n     *\n     * If not provided, and {@link OptionsBase.maxSize} or\n     * {@link OptionsBase.maxEntrySize} are set, then all\n     * {@link LRUCache#set} calls **must** provide an explicit\n     * {@link SetOptions.size} or sizeCalculation param.\n     */\n    sizeCalculation?: SizeCalculator<K, V>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#fetch}\n     *\n     * ```ts\n     * fetchMethod(key, staleValue, { signal, options, context })\n     * ```\n     *\n     * If `fetchMethod` is not provided, then `cache.fetch(key)` is equivalent\n     * to `Promise.resolve(cache.get(key))`.\n     *\n     * If at any time, `signal.aborted` is set to `true`, or if the\n     * `signal.onabort` method is called, or if it emits an `'abort'` event\n     * which you can listen to with `addEventListener`, then that means that\n     * the fetch should be abandoned. This may be passed along to async\n     * functions aware of AbortController/AbortSignal behavior.\n     *\n     * The `fetchMethod` should **only** return `undefined` or a Promise\n     * resolving to `undefined` if the AbortController signaled an `abort`\n     * event. In all other cases, it should return or resolve to a value\n     * suitable for adding to the cache.\n     *\n     * The `options` object is a union of the options that may be provided to\n     * `set()` and `get()`. If they are modified, then that will result in\n     * modifying the settings to `cache.set()` when the value is resolved, and\n     * in the case of\n     * {@link OptionsBase.noDeleteOnFetchRejection} and\n     * {@link OptionsBase.allowStaleOnFetchRejection}, the handling of\n     * `fetchMethod` failures.\n     *\n     * For example, a DNS cache may update the TTL based on the value returned\n     * from a remote DNS server by changing `options.ttl` in the `fetchMethod`.\n     */\n    fetchMethod?: Fetcher<K, V, FC>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#memo}\n     */\n    memoMethod?: Memoizer<K, V, FC>\n\n    /**\n     * Set to true to suppress the deletion of stale data when a\n     * {@link OptionsBase.fetchMethod} returns a rejected promise.\n     */\n    noDeleteOnFetchRejection?: boolean\n\n    /**\n     * Do not delete stale items when they are retrieved with\n     * {@link LRUCache#get}.\n     *\n     * Note that the `get` return value will still be `undefined`\n     * unless {@link OptionsBase.allowStale} is true.\n     *\n     * When using time-expiring entries with `ttl`, by default stale\n     * items will be removed from the cache when the key is accessed\n     * with `cache.get()`.\n     *\n     * Setting this option will cause stale items to remain in the cache, until\n     * they are explicitly deleted with `cache.delete(key)`, or retrieved with\n     * `noDeleteOnStaleGet` set to `false`.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     *\n     * Only relevant if a ttl is used.\n     */\n    noDeleteOnStaleGet?: boolean\n\n    /**\n     * Set to true to allow returning stale data when a\n     * {@link OptionsBase.fetchMethod} throws an error or returns a rejected\n     * promise.\n     *\n     * This differs from using {@link OptionsBase.allowStale} in that stale\n     * data will ONLY be returned in the case that the {@link LRUCache#fetch}\n     * fails, not any other times.\n     *\n     * If a `fetchMethod` fails, and there is no stale value available, the\n     * `fetch()` will resolve to `undefined`. Ie, all `fetchMethod` errors are\n     * suppressed.\n     *\n     * Implies `noDeleteOnFetchRejection`.\n     *\n     * This may be set in calls to `fetch()`, or defaulted on the constructor,\n     * or overridden by modifying the options object in the `fetchMethod`.\n     */\n    allowStaleOnFetchRejection?: boolean\n\n    /**\n     * Set to true to return a stale value from the cache when the\n     * `AbortSignal` passed to the {@link OptionsBase.fetchMethod} dispatches\n     * an `'abort'` event, whether user-triggered, or due to internal cache\n     * behavior.\n     *\n     * Unless {@link OptionsBase.ignoreFetchAbort} is also set, the underlying\n     * {@link OptionsBase.fetchMethod} will still be considered canceled, and\n     * any value it returns will be ignored and not cached.\n     *\n     * Caveat: since fetches are aborted when a new value is explicitly\n     * set in the cache, this can lead to fetch returning a stale value,\n     * since that was the fallback value _at the moment the `fetch()` was\n     * initiated_, even though the new updated value is now present in\n     * the cache.\n     *\n     * For example:\n     *\n     * ```ts\n     * const cache = new LRUCache<string, any>({\n     *   ttl: 100,\n     *   fetchMethod: async (url, oldValue, { signal }) =>  {\n     *     const res = await fetch(url, { signal })\n     *     return await res.json()\n     *   }\n     * })\n     * cache.set('https://example.com/', { some: 'data' })\n     * // 100ms go by...\n     * const result = cache.fetch('https://example.com/')\n     * cache.set('https://example.com/', { other: 'thing' })\n     * console.log(await result) // { some: 'data' }\n     * console.log(cache.get('https://example.com/')) // { other: 'thing' }\n     * ```\n     */\n    allowStaleOnFetchAbort?: boolean\n\n    /**\n     * Set to true to ignore the `abort` event emitted by the `AbortSignal`\n     * object passed to {@link OptionsBase.fetchMethod}, and still cache the\n     * resulting resolution value, as long as it is not `undefined`.\n     *\n     * When used on its own, this means aborted {@link LRUCache#fetch} calls\n     * are not immediately resolved or rejected when they are aborted, and\n     * instead take the full time to await.\n     *\n     * When used with {@link OptionsBase.allowStaleOnFetchAbort}, aborted\n     * {@link LRUCache#fetch} calls will resolve immediately to their stale\n     * cached value or `undefined`, and will continue to process and eventually\n     * update the cache when they resolve, as long as the resulting value is\n     * not `undefined`, thus supporting a \"return stale on timeout while\n     * refreshing\" mechanism by passing `AbortSignal.timeout(n)` as the signal.\n     *\n     * For example:\n     *\n     * ```ts\n     * const c = new LRUCache({\n     *   ttl: 100,\n     *   ignoreFetchAbort: true,\n     *   allowStaleOnFetchAbort: true,\n     *   fetchMethod: async (key, oldValue, { signal }) => {\n     *     // note: do NOT pass the signal to fetch()!\n     *     // let's say this fetch can take a long time.\n     *     const res = await fetch(`https://slow-backend-server/${key}`)\n     *     return await res.json()\n     *   },\n     * })\n     *\n     * // this will return the stale value after 100ms, while still\n     * // updating in the background for next time.\n     * const val = await c.fetch('key', { signal: AbortSignal.timeout(100) })\n     * ```\n     *\n     * **Note**: regardless of this setting, an `abort` event _is still\n     * emitted on the `AbortSignal` object_, so may result in invalid results\n     * when passed to other underlying APIs that use AbortSignals.\n     *\n     * This may be overridden in the {@link OptionsBase.fetchMethod} or the\n     * call to {@link LRUCache#fetch}.\n     */\n    ignoreFetchAbort?: boolean\n  }\n\n  export interface OptionsMaxLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    max: Count\n  }\n  export interface OptionsTTLLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    ttl: Milliseconds\n    ttlAutopurge: boolean\n  }\n  export interface OptionsSizeLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    maxSize: Size\n  }\n\n  /**\n   * The valid safe options for the {@link LRUCache} constructor\n   */\n  export type Options<K, V, FC> =\n    | OptionsMaxLimit<K, V, FC>\n    | OptionsSizeLimit<K, V, FC>\n    | OptionsTTLLimit<K, V, FC>\n\n  /**\n   * Entry objects used by {@link LRUCache#load} and {@link LRUCache#dump},\n   * and returned by {@link LRUCache#info}.\n   */\n  export interface Entry<V> {\n    value: V\n    ttl?: Milliseconds\n    size?: Size\n    start?: Milliseconds\n  }\n}\n\n/**\n * Default export, the thing you're using this module to get.\n *\n * The `K` and `V` types define the key and value types, respectively. The\n * optional `FC` type defines the type of the `context` object passed to\n * `cache.fetch()` and `cache.memo()`.\n *\n * Keys and values **must not** be `null` or `undefined`.\n *\n * All properties from the options object (with the exception of `max`,\n * `maxSize`, `fetchMethod`, `memoMethod`, `dispose` and `disposeAfter`) are\n * added as normal public members. (The listed options are read-only getters.)\n *\n * Changing any of these will alter the defaults for subsequent method calls.\n */\nexport class LRUCache<K extends {}, V extends {}, FC = unknown> {\n  // options that cannot be changed without disaster\n  readonly #max: LRUCache.Count\n  readonly #maxSize: LRUCache.Size\n  readonly #dispose?: LRUCache.Disposer<K, V>\n  readonly #disposeAfter?: LRUCache.Disposer<K, V>\n  readonly #fetchMethod?: LRUCache.Fetcher<K, V, FC>\n  readonly #memoMethod?: LRUCache.Memoizer<K, V, FC>\n\n  /**\n   * {@link LRUCache.OptionsBase.ttl}\n   */\n  ttl: LRUCache.Milliseconds\n\n  /**\n   * {@link LRUCache.OptionsBase.ttlResolution}\n   */\n  ttlResolution: LRUCache.Milliseconds\n  /**\n   * {@link LRUCache.OptionsBase.ttlAutopurge}\n   */\n  ttlAutopurge: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnGet}\n   */\n  updateAgeOnGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnHas}\n   */\n  updateAgeOnHas: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStale}\n   */\n  allowStale: boolean\n\n  /**\n   * {@link LRUCache.OptionsBase.noDisposeOnSet}\n   */\n  noDisposeOnSet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noUpdateTTL}\n   */\n  noUpdateTTL: boolean\n  /**\n   * {@link LRUCache.OptionsBase.maxEntrySize}\n   */\n  maxEntrySize: LRUCache.Size\n  /**\n   * {@link LRUCache.OptionsBase.sizeCalculation}\n   */\n  sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n   */\n  noDeleteOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n   */\n  noDeleteOnStaleGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n   */\n  allowStaleOnFetchAbort: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n   */\n  allowStaleOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n   */\n  ignoreFetchAbort: boolean\n\n  // computed properties\n  #size: LRUCache.Count\n  #calculatedSize: LRUCache.Size\n  #keyMap: Map<K, Index>\n  #keyList: (K | undefined)[]\n  #valList: (V | BackgroundFetch<V> | undefined)[]\n  #next: NumberArray\n  #prev: NumberArray\n  #head: Index\n  #tail: Index\n  #free: StackLike\n  #disposed?: DisposeTask<K, V>[]\n  #sizes?: ZeroArray\n  #starts?: ZeroArray\n  #ttls?: ZeroArray\n\n  #hasDispose: boolean\n  #hasFetchMethod: boolean\n  #hasDisposeAfter: boolean\n\n  /**\n   * Do not call this method unless you need to inspect the\n   * inner workings of the cache.  If anything returned by this\n   * object is modified in any way, strange breakage may occur.\n   *\n   * These fields are private for a reason!\n   *\n   * @internal\n   */\n  static unsafeExposeInternals<\n    K extends {},\n    V extends {},\n    FC extends unknown = unknown\n  >(c: LRUCache<K, V, FC>) {\n    return {\n      // properties\n      starts: c.#starts,\n      ttls: c.#ttls,\n      sizes: c.#sizes,\n      keyMap: c.#keyMap as Map<K, number>,\n      keyList: c.#keyList,\n      valList: c.#valList,\n      next: c.#next,\n      prev: c.#prev,\n      get head() {\n        return c.#head\n      },\n      get tail() {\n        return c.#tail\n      },\n      free: c.#free,\n      // methods\n      isBackgroundFetch: (p: any) => c.#isBackgroundFetch(p),\n      backgroundFetch: (\n        k: K,\n        index: number | undefined,\n        options: LRUCache.FetchOptions<K, V, FC>,\n        context: any\n      ): BackgroundFetch<V> =>\n        c.#backgroundFetch(\n          k,\n          index as Index | undefined,\n          options,\n          context\n        ),\n      moveToTail: (index: number): void =>\n        c.#moveToTail(index as Index),\n      indexes: (options?: { allowStale: boolean }) =>\n        c.#indexes(options),\n      rindexes: (options?: { allowStale: boolean }) =>\n        c.#rindexes(options),\n      isStale: (index: number | undefined) =>\n        c.#isStale(index as Index),\n    }\n  }\n\n  // Protected read-only members\n\n  /**\n   * {@link LRUCache.OptionsBase.max} (read-only)\n   */\n  get max(): LRUCache.Count {\n    return this.#max\n  }\n  /**\n   * {@link LRUCache.OptionsBase.maxSize} (read-only)\n   */\n  get maxSize(): LRUCache.Count {\n    return this.#maxSize\n  }\n  /**\n   * The total computed size of items in the cache (read-only)\n   */\n  get calculatedSize(): LRUCache.Size {\n    return this.#calculatedSize\n  }\n  /**\n   * The number of items stored in the cache (read-only)\n   */\n  get size(): LRUCache.Count {\n    return this.#size\n  }\n  /**\n   * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n   */\n  get fetchMethod(): LRUCache.Fetcher<K, V, FC> | undefined {\n    return this.#fetchMethod\n  }\n  get memoMethod(): LRUCache.Memoizer<K, V, FC> | undefined {\n    return this.#memoMethod\n  }\n  /**\n   * {@link LRUCache.OptionsBase.dispose} (read-only)\n   */\n  get dispose() {\n    return this.#dispose\n  }\n  /**\n   * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n   */\n  get disposeAfter() {\n    return this.#disposeAfter\n  }\n\n  constructor(\n    options: LRUCache.Options<K, V, FC> | LRUCache<K, V, FC>\n  ) {\n    const {\n      max = 0,\n      ttl,\n      ttlResolution = 1,\n      ttlAutopurge,\n      updateAgeOnGet,\n      updateAgeOnHas,\n      allowStale,\n      dispose,\n      disposeAfter,\n      noDisposeOnSet,\n      noUpdateTTL,\n      maxSize = 0,\n      maxEntrySize = 0,\n      sizeCalculation,\n      fetchMethod,\n      memoMethod,\n      noDeleteOnFetchRejection,\n      noDeleteOnStaleGet,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n    } = options\n\n    if (max !== 0 && !isPosInt(max)) {\n      throw new TypeError('max option must be a nonnegative integer')\n    }\n\n    const UintArray = max ? getUintArray(max) : Array\n    if (!UintArray) {\n      throw new Error('invalid max value: ' + max)\n    }\n\n    this.#max = max\n    this.#maxSize = maxSize\n    this.maxEntrySize = maxEntrySize || this.#maxSize\n    this.sizeCalculation = sizeCalculation\n    if (this.sizeCalculation) {\n      if (!this.#maxSize && !this.maxEntrySize) {\n        throw new TypeError(\n          'cannot set sizeCalculation without setting maxSize or maxEntrySize'\n        )\n      }\n      if (typeof this.sizeCalculation !== 'function') {\n        throw new TypeError('sizeCalculation set to non-function')\n      }\n    }\n\n    if (\n      memoMethod !== undefined &&\n      typeof memoMethod !== 'function'\n    ) {\n      throw new TypeError('memoMethod must be a function if defined')\n    }\n    this.#memoMethod = memoMethod\n\n    if (\n      fetchMethod !== undefined &&\n      typeof fetchMethod !== 'function'\n    ) {\n      throw new TypeError(\n        'fetchMethod must be a function if specified'\n      )\n    }\n    this.#fetchMethod = fetchMethod\n    this.#hasFetchMethod = !!fetchMethod\n\n    this.#keyMap = new Map()\n    this.#keyList = new Array(max).fill(undefined)\n    this.#valList = new Array(max).fill(undefined)\n    this.#next = new UintArray(max)\n    this.#prev = new UintArray(max)\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free = Stack.create(max)\n    this.#size = 0\n    this.#calculatedSize = 0\n\n    if (typeof dispose === 'function') {\n      this.#dispose = dispose\n    }\n    if (typeof disposeAfter === 'function') {\n      this.#disposeAfter = disposeAfter\n      this.#disposed = []\n    } else {\n      this.#disposeAfter = undefined\n      this.#disposed = undefined\n    }\n    this.#hasDispose = !!this.#dispose\n    this.#hasDisposeAfter = !!this.#disposeAfter\n\n    this.noDisposeOnSet = !!noDisposeOnSet\n    this.noUpdateTTL = !!noUpdateTTL\n    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection\n    this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection\n    this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort\n    this.ignoreFetchAbort = !!ignoreFetchAbort\n\n    // NB: maxEntrySize is set to maxSize if it's set\n    if (this.maxEntrySize !== 0) {\n      if (this.#maxSize !== 0) {\n        if (!isPosInt(this.#maxSize)) {\n          throw new TypeError(\n            'maxSize must be a positive integer if specified'\n          )\n        }\n      }\n      if (!isPosInt(this.maxEntrySize)) {\n        throw new TypeError(\n          'maxEntrySize must be a positive integer if specified'\n        )\n      }\n      this.#initializeSizeTracking()\n    }\n\n    this.allowStale = !!allowStale\n    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet\n    this.updateAgeOnGet = !!updateAgeOnGet\n    this.updateAgeOnHas = !!updateAgeOnHas\n    this.ttlResolution =\n      isPosInt(ttlResolution) || ttlResolution === 0\n        ? ttlResolution\n        : 1\n    this.ttlAutopurge = !!ttlAutopurge\n    this.ttl = ttl || 0\n    if (this.ttl) {\n      if (!isPosInt(this.ttl)) {\n        throw new TypeError(\n          'ttl must be a positive integer if specified'\n        )\n      }\n      this.#initializeTTLTracking()\n    }\n\n    // do not allow completely unbounded caches\n    if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n      throw new TypeError(\n        'At least one of max, maxSize, or ttl is required'\n      )\n    }\n    if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n      const code = 'LRU_CACHE_UNBOUNDED'\n      if (shouldWarn(code)) {\n        warned.add(code)\n        const msg =\n          'TTL caching without ttlAutopurge, max, or maxSize can ' +\n          'result in unbounded memory consumption.'\n        emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache)\n      }\n    }\n  }\n\n  /**\n   * Return the number of ms left in the item's TTL. If item is not in cache,\n   * returns `0`. Returns `Infinity` if item is in cache without a defined TTL.\n   */\n  getRemainingTTL(key: K) {\n    return this.#keyMap.has(key) ? Infinity : 0\n  }\n\n  #initializeTTLTracking() {\n    const ttls = new ZeroArray(this.#max)\n    const starts = new ZeroArray(this.#max)\n    this.#ttls = ttls\n    this.#starts = starts\n\n    this.#setItemTTL = (index, ttl, start = perf.now()) => {\n      starts[index] = ttl !== 0 ? start : 0\n      ttls[index] = ttl\n      if (ttl !== 0 && this.ttlAutopurge) {\n        const t = setTimeout(() => {\n          if (this.#isStale(index)) {\n            this.#delete(this.#keyList[index] as K, 'expire')\n          }\n        }, ttl + 1)\n        // unref() not supported on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n    }\n\n    this.#updateItemAge = index => {\n      starts[index] = ttls[index] !== 0 ? perf.now() : 0\n    }\n\n    this.#statusTTL = (status, index) => {\n      if (ttls[index]) {\n        const ttl = ttls[index]\n        const start = starts[index]\n        /* c8 ignore next */\n        if (!ttl || !start) return\n        status.ttl = ttl\n        status.start = start\n        status.now = cachedNow || getNow()\n        const age = status.now - start\n        status.remainingTTL = ttl - age\n      }\n    }\n\n    // debounce calls to perf.now() to 1s so we're not hitting\n    // that costly call repeatedly.\n    let cachedNow = 0\n    const getNow = () => {\n      const n = perf.now()\n      if (this.ttlResolution > 0) {\n        cachedNow = n\n        const t = setTimeout(\n          () => (cachedNow = 0),\n          this.ttlResolution\n        )\n        // not available on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n      return n\n    }\n\n    this.getRemainingTTL = key => {\n      const index = this.#keyMap.get(key)\n      if (index === undefined) {\n        return 0\n      }\n      const ttl = ttls[index]\n      const start = starts[index]\n      if (!ttl || !start) {\n        return Infinity\n      }\n      const age = (cachedNow || getNow()) - start\n      return ttl - age\n    }\n\n    this.#isStale = index => {\n      const s = starts[index]\n      const t = ttls[index]\n      return !!t && !!s && (cachedNow || getNow()) - s > t\n    }\n  }\n\n  // conditionally set private methods related to TTL\n  #updateItemAge: (index: Index) => void = () => {}\n  #statusTTL: (status: LRUCache.Status<V>, index: Index) => void =\n    () => {}\n  #setItemTTL: (\n    index: Index,\n    ttl: LRUCache.Milliseconds,\n    start?: LRUCache.Milliseconds\n    // ignore because we never call this if we're not already in TTL mode\n    /* c8 ignore start */\n  ) => void = () => {}\n  /* c8 ignore stop */\n\n  #isStale: (index: Index) => boolean = () => false\n\n  #initializeSizeTracking() {\n    const sizes = new ZeroArray(this.#max)\n    this.#calculatedSize = 0\n    this.#sizes = sizes\n    this.#removeItemSize = index => {\n      this.#calculatedSize -= sizes[index] as number\n      sizes[index] = 0\n    }\n    this.#requireSize = (k, v, size, sizeCalculation) => {\n      // provisionally accept background fetches.\n      // actual value size will be checked when they return.\n      if (this.#isBackgroundFetch(v)) {\n        return 0\n      }\n      if (!isPosInt(size)) {\n        if (sizeCalculation) {\n          if (typeof sizeCalculation !== 'function') {\n            throw new TypeError('sizeCalculation must be a function')\n          }\n          size = sizeCalculation(v, k)\n          if (!isPosInt(size)) {\n            throw new TypeError(\n              'sizeCalculation return invalid (expect positive integer)'\n            )\n          }\n        } else {\n          throw new TypeError(\n            'invalid size value (must be positive integer). ' +\n              'When maxSize or maxEntrySize is used, sizeCalculation ' +\n              'or size must be set.'\n          )\n        }\n      }\n      return size\n    }\n    this.#addItemSize = (\n      index: Index,\n      size: LRUCache.Size,\n      status?: LRUCache.Status<V>\n    ) => {\n      sizes[index] = size\n      if (this.#maxSize) {\n        const maxSize = this.#maxSize - (sizes[index] as number)\n        while (this.#calculatedSize > maxSize) {\n          this.#evict(true)\n        }\n      }\n      this.#calculatedSize += sizes[index] as number\n      if (status) {\n        status.entrySize = size\n        status.totalCalculatedSize = this.#calculatedSize\n      }\n    }\n  }\n\n  #removeItemSize: (index: Index) => void = _i => {}\n  #addItemSize: (\n    index: Index,\n    size: LRUCache.Size,\n    status?: LRUCache.Status<V>\n  ) => void = (_i, _s, _st) => {}\n  #requireSize: (\n    k: K,\n    v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => LRUCache.Size = (\n    _k: K,\n    _v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => {\n    if (size || sizeCalculation) {\n      throw new TypeError(\n        'cannot set size without setting maxSize or maxEntrySize on cache'\n      )\n    }\n    return 0\n  };\n\n  *#indexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#tail; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#head) {\n          break\n        } else {\n          i = this.#prev[i] as Index\n        }\n      }\n    }\n  }\n\n  *#rindexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#head; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#tail) {\n          break\n        } else {\n          i = this.#next[i] as Index\n        }\n      }\n    }\n  }\n\n  #isValidIndex(index: Index) {\n    return (\n      index !== undefined &&\n      this.#keyMap.get(this.#keyList[index] as K) === index\n    )\n  }\n\n  /**\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from most recently used to least recently used.\n   */\n  *entries() {\n    for (const i of this.#indexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]] as [K, V]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.entries}\n   *\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from least recently used to most recently used.\n   */\n  *rentries() {\n    for (const i of this.#rindexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the keys in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *keys() {\n    for (const i of this.#indexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.keys}\n   *\n   * Return a generator yielding the keys in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rkeys() {\n    for (const i of this.#rindexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the values in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *values() {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i] as V\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.values}\n   *\n   * Return a generator yielding the values in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rvalues() {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Iterating over the cache itself yields the same results as\n   * {@link LRUCache.entries}\n   */\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n\n  /**\n   * A String value that is used in the creation of the default string\n   * description of an object. Called by the built-in method\n   * `Object.prototype.toString`.\n   */\n  [Symbol.toStringTag] = 'LRUCache'\n\n  /**\n   * Find a value for which the supplied fn method returns a truthy value,\n   * similar to `Array.find()`. fn is called as `fn(value, key, cache)`.\n   */\n  find(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => boolean,\n    getOptions: LRUCache.GetOptions<K, V, FC> = {}\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      if (fn(value, this.#keyList[i] as K, this)) {\n        return this.get(this.#keyList[i] as K, getOptions)\n      }\n    }\n  }\n\n  /**\n   * Call the supplied function on each item in the cache, in order from most\n   * recently used to least recently used.\n   *\n   * `fn` is called as `fn(value, key, cache)`.\n   *\n   * If `thisp` is provided, function will be called in the `this`-context of\n   * the provided object, or the cache if no `thisp` object is provided.\n   *\n   * Does not update age or recenty of use, or iterate over stale values.\n   */\n  forEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * The same as {@link LRUCache.forEach} but items are iterated over in\n   * reverse order.  (ie, less recently used items are iterated over first.)\n   */\n  rforEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * Delete any stale entries. Returns true if anything was removed,\n   * false otherwise.\n   */\n  purgeStale() {\n    let deleted = false\n    for (const i of this.#rindexes({ allowStale: true })) {\n      if (this.#isStale(i)) {\n        this.#delete(this.#keyList[i] as K, 'expire')\n        deleted = true\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Get the extended info about a given entry, to get its value, size, and\n   * TTL info simultaneously. Returns `undefined` if the key is not present.\n   *\n   * Unlike {@link LRUCache#dump}, which is designed to be portable and survive\n   * serialization, the `start` value is always the current timestamp, and the\n   * `ttl` is a calculated remaining time to live (negative if expired).\n   *\n   * Always returns stale values, if their info is found in the cache, so be\n   * sure to check for expirations (ie, a negative {@link LRUCache.Entry#ttl})\n   * if relevant.\n   */\n  info(key: K): LRUCache.Entry<V> | undefined {\n    const i = this.#keyMap.get(key)\n    if (i === undefined) return undefined\n    const v = this.#valList[i]\n    const value: V | undefined = this.#isBackgroundFetch(v)\n      ? v.__staleWhileFetching\n      : v\n    if (value === undefined) return undefined\n    const entry: LRUCache.Entry<V> = { value }\n    if (this.#ttls && this.#starts) {\n      const ttl = this.#ttls[i]\n      const start = this.#starts[i]\n      if (ttl && start) {\n        const remain = ttl - (perf.now() - start)\n        entry.ttl = remain\n        entry.start = Date.now()\n      }\n    }\n    if (this.#sizes) {\n      entry.size = this.#sizes[i]\n    }\n    return entry\n  }\n\n  /**\n   * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n   * passed to {@link LRUCache#load}.\n   *\n   * The `start` fields are calculated relative to a portable `Date.now()`\n   * timestamp, even if `performance.now()` is available.\n   *\n   * Stale entries are always included in the `dump`, even if\n   * {@link LRUCache.OptionsBase.allowStale} is false.\n   *\n   * Note: this returns an actual array, not a generator, so it can be more\n   * easily passed around.\n   */\n  dump() {\n    const arr: [K, LRUCache.Entry<V>][] = []\n    for (const i of this.#indexes({ allowStale: true })) {\n      const key = this.#keyList[i]\n      const v = this.#valList[i]\n      const value: V | undefined = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined || key === undefined) continue\n      const entry: LRUCache.Entry<V> = { value }\n      if (this.#ttls && this.#starts) {\n        entry.ttl = this.#ttls[i]\n        // always dump the start relative to a portable timestamp\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = perf.now() - (this.#starts[i] as number)\n        entry.start = Math.floor(Date.now() - age)\n      }\n      if (this.#sizes) {\n        entry.size = this.#sizes[i]\n      }\n      arr.unshift([key, entry])\n    }\n    return arr\n  }\n\n  /**\n   * Reset the cache and load in the items in entries in the order listed.\n   *\n   * The shape of the resulting cache may be different if the same options are\n   * not used in both caches.\n   *\n   * The `start` fields are assumed to be calculated relative to a portable\n   * `Date.now()` timestamp, even if `performance.now()` is available.\n   */\n  load(arr: [K, LRUCache.Entry<V>][]) {\n    this.clear()\n    for (const [key, entry] of arr) {\n      if (entry.start) {\n        // entry.start is a portable timestamp, but we may be using\n        // node's performance.now(), so calculate the offset, so that\n        // we get the intended remaining TTL, no matter how long it's\n        // been on ice.\n        //\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = Date.now() - entry.start\n        entry.start = perf.now() - age\n      }\n      this.set(key, entry.value, entry)\n    }\n  }\n\n  /**\n   * Add a value to the cache.\n   *\n   * Note: if `undefined` is specified as a value, this is an alias for\n   * {@link LRUCache#delete}\n   *\n   * Fields on the {@link LRUCache.SetOptions} options param will override\n   * their corresponding values in the constructor options for the scope\n   * of this single `set()` operation.\n   *\n   * If `start` is provided, then that will set the effective start\n   * time for the TTL calculation. Note that this must be a previous\n   * value of `performance.now()` if supported, or a previous value of\n   * `Date.now()` if not.\n   *\n   * Options object may also include `size`, which will prevent\n   * calling the `sizeCalculation` function and just use the specified\n   * number if it is a positive integer, and `noDisposeOnSet` which\n   * will prevent calling a `dispose` function in the case of\n   * overwrites.\n   *\n   * If the `size` (or return value of `sizeCalculation`) for a given\n   * entry is greater than `maxEntrySize`, then the item will not be\n   * added to the cache.\n   *\n   * Will update the recency of the entry.\n   *\n   * If the value is `undefined`, then this is an alias for\n   * `cache.delete(key)`. `undefined` is never stored in the cache.\n   */\n  set(\n    k: K,\n    v: V | BackgroundFetch<V> | undefined,\n    setOptions: LRUCache.SetOptions<K, V, FC> = {}\n  ) {\n    if (v === undefined) {\n      this.delete(k)\n      return this\n    }\n    const {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      sizeCalculation = this.sizeCalculation,\n      status,\n    } = setOptions\n    let { noUpdateTTL = this.noUpdateTTL } = setOptions\n\n    const size = this.#requireSize(\n      k,\n      v,\n      setOptions.size || 0,\n      sizeCalculation\n    )\n    // if the item doesn't fit, don't do anything\n    // NB: maxEntrySize set to maxSize by default\n    if (this.maxEntrySize && size > this.maxEntrySize) {\n      if (status) {\n        status.set = 'miss'\n        status.maxEntrySizeExceeded = true\n      }\n      // have to delete, in case something is there already.\n      this.#delete(k, 'set')\n      return this\n    }\n    let index = this.#size === 0 ? undefined : this.#keyMap.get(k)\n    if (index === undefined) {\n      // addition\n      index = (\n        this.#size === 0\n          ? this.#tail\n          : this.#free.length !== 0\n          ? this.#free.pop()\n          : this.#size === this.#max\n          ? this.#evict(false)\n          : this.#size\n      ) as Index\n      this.#keyList[index] = k\n      this.#valList[index] = v\n      this.#keyMap.set(k, index)\n      this.#next[this.#tail] = index\n      this.#prev[index] = this.#tail\n      this.#tail = index\n      this.#size++\n      this.#addItemSize(index, size, status)\n      if (status) status.set = 'add'\n      noUpdateTTL = false\n    } else {\n      // update\n      this.#moveToTail(index)\n      const oldVal = this.#valList[index] as V | BackgroundFetch<V>\n      if (v !== oldVal) {\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n          oldVal.__abortController.abort(new Error('replaced'))\n          const { __staleWhileFetching: s } = oldVal\n          if (s !== undefined && !noDisposeOnSet) {\n            if (this.#hasDispose) {\n              this.#dispose?.(s as V, k, 'set')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([s as V, k, 'set'])\n            }\n          }\n        } else if (!noDisposeOnSet) {\n          if (this.#hasDispose) {\n            this.#dispose?.(oldVal as V, k, 'set')\n          }\n          if (this.#hasDisposeAfter) {\n            this.#disposed?.push([oldVal as V, k, 'set'])\n          }\n        }\n        this.#removeItemSize(index)\n        this.#addItemSize(index, size, status)\n        this.#valList[index] = v\n        if (status) {\n          status.set = 'replace'\n          const oldValue =\n            oldVal && this.#isBackgroundFetch(oldVal)\n              ? oldVal.__staleWhileFetching\n              : oldVal\n          if (oldValue !== undefined) status.oldValue = oldValue\n        }\n      } else if (status) {\n        status.set = 'update'\n      }\n    }\n    if (ttl !== 0 && !this.#ttls) {\n      this.#initializeTTLTracking()\n    }\n    if (this.#ttls) {\n      if (!noUpdateTTL) {\n        this.#setItemTTL(index, ttl, start)\n      }\n      if (status) this.#statusTTL(status, index)\n    }\n    if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return this\n  }\n\n  /**\n   * Evict the least recently used item, returning its value or\n   * `undefined` if cache is empty.\n   */\n  pop(): V | undefined {\n    try {\n      while (this.#size) {\n        const val = this.#valList[this.#head]\n        this.#evict(true)\n        if (this.#isBackgroundFetch(val)) {\n          if (val.__staleWhileFetching) {\n            return val.__staleWhileFetching\n          }\n        } else if (val !== undefined) {\n          return val\n        }\n      }\n    } finally {\n      if (this.#hasDisposeAfter && this.#disposed) {\n        const dt = this.#disposed\n        let task: DisposeTask<K, V> | undefined\n        while ((task = dt?.shift())) {\n          this.#disposeAfter?.(...task)\n        }\n      }\n    }\n  }\n\n  #evict(free: boolean) {\n    const head = this.#head\n    const k = this.#keyList[head] as K\n    const v = this.#valList[head] as V\n    if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n      v.__abortController.abort(new Error('evicted'))\n    } else if (this.#hasDispose || this.#hasDisposeAfter) {\n      if (this.#hasDispose) {\n        this.#dispose?.(v, k, 'evict')\n      }\n      if (this.#hasDisposeAfter) {\n        this.#disposed?.push([v, k, 'evict'])\n      }\n    }\n    this.#removeItemSize(head)\n    // if we aren't about to use the index, then null these out\n    if (free) {\n      this.#keyList[head] = undefined\n      this.#valList[head] = undefined\n      this.#free.push(head)\n    }\n    if (this.#size === 1) {\n      this.#head = this.#tail = 0 as Index\n      this.#free.length = 0\n    } else {\n      this.#head = this.#next[head] as Index\n    }\n    this.#keyMap.delete(k)\n    this.#size--\n    return head\n  }\n\n  /**\n   * Check if a key is in the cache, without updating the recency of use.\n   * Will return false if the item is stale, even though it is technically\n   * in the cache.\n   *\n   * Check if a key is in the cache, without updating the recency of\n   * use. Age is updated if {@link LRUCache.OptionsBase.updateAgeOnHas} is set\n   * to `true` in either the options or the constructor.\n   *\n   * Will return `false` if the item is stale, even though it is technically in\n   * the cache. The difference can be determined (if it matters) by using a\n   * `status` argument, and inspecting the `has` field.\n   *\n   * Will not update item age unless\n   * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n   */\n  has(k: K, hasOptions: LRUCache.HasOptions<K, V, FC> = {}) {\n    const { updateAgeOnHas = this.updateAgeOnHas, status } =\n      hasOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const v = this.#valList[index]\n      if (\n        this.#isBackgroundFetch(v) &&\n        v.__staleWhileFetching === undefined\n      ) {\n        return false\n      }\n      if (!this.#isStale(index)) {\n        if (updateAgeOnHas) {\n          this.#updateItemAge(index)\n        }\n        if (status) {\n          status.has = 'hit'\n          this.#statusTTL(status, index)\n        }\n        return true\n      } else if (status) {\n        status.has = 'stale'\n        this.#statusTTL(status, index)\n      }\n    } else if (status) {\n      status.has = 'miss'\n    }\n    return false\n  }\n\n  /**\n   * Like {@link LRUCache#get} but doesn't update recency or delete stale\n   * items.\n   *\n   * Returns `undefined` if the item is stale, unless\n   * {@link LRUCache.OptionsBase.allowStale} is set.\n   */\n  peek(k: K, peekOptions: LRUCache.PeekOptions<K, V, FC> = {}) {\n    const { allowStale = this.allowStale } = peekOptions\n    const index = this.#keyMap.get(k)\n    if (\n      index === undefined ||\n      (!allowStale && this.#isStale(index))\n    ) {\n      return\n    }\n    const v = this.#valList[index]\n    // either stale and allowed, or forcing a refresh of non-stale value\n    return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v\n  }\n\n  #backgroundFetch(\n    k: K,\n    index: Index | undefined,\n    options: LRUCache.FetchOptions<K, V, FC>,\n    context: any\n  ): BackgroundFetch<V> {\n    const v = index === undefined ? undefined : this.#valList[index]\n    if (this.#isBackgroundFetch(v)) {\n      return v\n    }\n\n    const ac = new AC()\n    const { signal } = options\n    // when/if our AC signals, then stop listening to theirs.\n    signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n      signal: ac.signal,\n    })\n\n    const fetchOpts = {\n      signal: ac.signal,\n      options,\n      context,\n    }\n\n    const cb = (\n      v: V | undefined,\n      updateCache = false\n    ): V | undefined => {\n      const { aborted } = ac.signal\n      const ignoreAbort = options.ignoreFetchAbort && v !== undefined\n      if (options.status) {\n        if (aborted && !updateCache) {\n          options.status.fetchAborted = true\n          options.status.fetchError = ac.signal.reason\n          if (ignoreAbort) options.status.fetchAbortIgnored = true\n        } else {\n          options.status.fetchResolved = true\n        }\n      }\n      if (aborted && !ignoreAbort && !updateCache) {\n        return fetchFail(ac.signal.reason)\n      }\n      // either we didn't abort, and are still here, or we did, and ignored\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        if (v === undefined) {\n          if (bf.__staleWhileFetching) {\n            this.#valList[index as Index] = bf.__staleWhileFetching\n          } else {\n            this.#delete(k, 'fetch')\n          }\n        } else {\n          if (options.status) options.status.fetchUpdated = true\n          this.set(k, v, fetchOpts.options)\n        }\n      }\n      return v\n    }\n\n    const eb = (er: any) => {\n      if (options.status) {\n        options.status.fetchRejected = true\n        options.status.fetchError = er\n      }\n      return fetchFail(er)\n    }\n\n    const fetchFail = (er: any): V | undefined => {\n      const { aborted } = ac.signal\n      const allowStaleAborted =\n        aborted && options.allowStaleOnFetchAbort\n      const allowStale =\n        allowStaleAborted || options.allowStaleOnFetchRejection\n      const noDelete = allowStale || options.noDeleteOnFetchRejection\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        // if we allow stale on fetch rejections, then we need to ensure that\n        // the stale value is not removed from the cache when the fetch fails.\n        const del = !noDelete || bf.__staleWhileFetching === undefined\n        if (del) {\n          this.#delete(k, 'fetch')\n        } else if (!allowStaleAborted) {\n          // still replace the *promise* with the stale value,\n          // since we are done with the promise at this point.\n          // leave it untouched if we're still waiting for an\n          // aborted background fetch that hasn't yet returned.\n          this.#valList[index as Index] = bf.__staleWhileFetching\n        }\n      }\n      if (allowStale) {\n        if (options.status && bf.__staleWhileFetching !== undefined) {\n          options.status.returnedStale = true\n        }\n        return bf.__staleWhileFetching\n      } else if (bf.__returned === bf) {\n        throw er\n      }\n    }\n\n    const pcall = (\n      res: (v: V | undefined) => void,\n      rej: (e: any) => void\n    ) => {\n      const fmp = this.#fetchMethod?.(k, v, fetchOpts)\n      if (fmp && fmp instanceof Promise) {\n        fmp.then(v => res(v === undefined ? undefined : v), rej)\n      }\n      // ignored, we go until we finish, regardless.\n      // defer check until we are actually aborting,\n      // so fetchMethod can override.\n      ac.signal.addEventListener('abort', () => {\n        if (\n          !options.ignoreFetchAbort ||\n          options.allowStaleOnFetchAbort\n        ) {\n          res(undefined)\n          // when it eventually resolves, update the cache.\n          if (options.allowStaleOnFetchAbort) {\n            res = v => cb(v, true)\n          }\n        }\n      })\n    }\n\n    if (options.status) options.status.fetchDispatched = true\n    const p = new Promise(pcall).then(cb, eb)\n    const bf: BackgroundFetch<V> = Object.assign(p, {\n      __abortController: ac,\n      __staleWhileFetching: v,\n      __returned: undefined,\n    })\n\n    if (index === undefined) {\n      // internal, don't expose status.\n      this.set(k, bf, { ...fetchOpts.options, status: undefined })\n      index = this.#keyMap.get(k)\n    } else {\n      this.#valList[index] = bf\n    }\n    return bf\n  }\n\n  #isBackgroundFetch(p: any): p is BackgroundFetch<V> {\n    if (!this.#hasFetchMethod) return false\n    const b = p as BackgroundFetch<V>\n    return (\n      !!b &&\n      b instanceof Promise &&\n      b.hasOwnProperty('__staleWhileFetching') &&\n      b.__abortController instanceof AC\n    )\n  }\n\n  /**\n   * Make an asynchronous cached fetch using the\n   * {@link LRUCache.OptionsBase.fetchMethod} function.\n   *\n   * If the value is in the cache and not stale, then the returned\n   * Promise resolves to the value.\n   *\n   * If not in the cache, or beyond its TTL staleness, then\n   * `fetchMethod(key, staleValue, { options, signal, context })` is\n   * called, and the value returned will be added to the cache once\n   * resolved.\n   *\n   * If called with `allowStale`, and an asynchronous fetch is\n   * currently in progress to reload a stale value, then the former\n   * stale value will be returned.\n   *\n   * If called with `forceRefresh`, then the cached item will be\n   * re-fetched, even if it is not stale. However, if `allowStale` is also\n   * set, then the old value will still be returned. This is useful\n   * in cases where you want to force a reload of a cached value. If\n   * a background fetch is already in progress, then `forceRefresh`\n   * has no effect.\n   *\n   * If multiple fetches for the same key are issued, then they will all be\n   * coalesced into a single call to fetchMethod.\n   *\n   * Note that this means that handling options such as\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort},\n   * {@link LRUCache.FetchOptions.signal},\n   * and {@link LRUCache.OptionsBase.allowStaleOnFetchRejection} will be\n   * determined by the FIRST fetch() call for a given key.\n   *\n   * This is a known (fixable) shortcoming which will be addresed on when\n   * someone complains about it, as the fix would involve added complexity and\n   * may not be worth the costs for this edge case.\n   *\n   * If {@link LRUCache.OptionsBase.fetchMethod} is not specified, then this is\n   * effectively an alias for `Promise.resolve(cache.get(key))`.\n   *\n   * When the fetch method resolves to a value, if the fetch has not\n   * been aborted due to deletion, eviction, or being overwritten,\n   * then it is added to the cache using the options provided.\n   *\n   * If the key is evicted or deleted before the `fetchMethod`\n   * resolves, then the AbortSignal passed to the `fetchMethod` will\n   * receive an `abort` event, and the promise returned by `fetch()`\n   * will reject with the reason for the abort.\n   *\n   * If a `signal` is passed to the `fetch()` call, then aborting the\n   * signal will abort the fetch and cause the `fetch()` promise to\n   * reject with the reason provided.\n   *\n   * **Setting `context`**\n   *\n   * If an `FC` type is set to a type other than `unknown`, `void`, or\n   * `undefined` in the {@link LRUCache} constructor, then all\n   * calls to `cache.fetch()` _must_ provide a `context` option. If\n   * set to `undefined` or `void`, then calls to fetch _must not_\n   * provide a `context` option.\n   *\n   * The `context` param allows you to provide arbitrary data that\n   * might be relevant in the course of fetching the data. It is only\n   * relevant for the course of a single `fetch()` operation, and\n   * discarded afterwards.\n   *\n   * **Note: `fetch()` calls are inflight-unique**\n   *\n   * If you call `fetch()` multiple times with the same key value,\n   * then every call after the first will resolve on the same\n   * promise<sup>1</sup>,\n   * _even if they have different settings that would otherwise change\n   * the behavior of the fetch_, such as `noDeleteOnFetchRejection`\n   * or `ignoreFetchAbort`.\n   *\n   * In most cases, this is not a problem (in fact, only fetching\n   * something once is what you probably want, if you're caching in\n   * the first place). If you are changing the fetch() options\n   * dramatically between runs, there's a good chance that you might\n   * be trying to fit divergent semantics into a single object, and\n   * would be better off with multiple cache instances.\n   *\n   * **1**: Ie, they're not the \"same Promise\", but they resolve at\n   * the same time, because they're both waiting on the same\n   * underlying fetchMethod response.\n   */\n\n  fetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<undefined | V>\n\n  // this overload not allowed if context is required\n  fetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<undefined | V>\n\n  async fetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<undefined | V> {\n    const {\n      // get options\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      // set options\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      // fetch exclusive options\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n      ignoreFetchAbort = this.ignoreFetchAbort,\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n      context,\n      forceRefresh = false,\n      status,\n      signal,\n    } = fetchOptions\n\n    if (!this.#hasFetchMethod) {\n      if (status) status.fetch = 'get'\n      return this.get(k, {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n        status,\n      })\n    }\n\n    const options = {\n      allowStale,\n      updateAgeOnGet,\n      noDeleteOnStaleGet,\n      ttl,\n      noDisposeOnSet,\n      size,\n      sizeCalculation,\n      noUpdateTTL,\n      noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n      status,\n      signal,\n    }\n\n    let index = this.#keyMap.get(k)\n    if (index === undefined) {\n      if (status) status.fetch = 'miss'\n      const p = this.#backgroundFetch(k, index, options, context)\n      return (p.__returned = p)\n    } else {\n      // in cache, maybe already fetching\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        const stale =\n          allowStale && v.__staleWhileFetching !== undefined\n        if (status) {\n          status.fetch = 'inflight'\n          if (stale) status.returnedStale = true\n        }\n        return stale ? v.__staleWhileFetching : (v.__returned = v)\n      }\n\n      // if we force a refresh, that means do NOT serve the cached value,\n      // unless we are already in the process of refreshing the cache.\n      const isStale = this.#isStale(index)\n      if (!forceRefresh && !isStale) {\n        if (status) status.fetch = 'hit'\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        if (status) this.#statusTTL(status, index)\n        return v\n      }\n\n      // ok, it is stale or a forced refresh, and not already fetching.\n      // refresh the cache.\n      const p = this.#backgroundFetch(k, index, options, context)\n      const hasStale = p.__staleWhileFetching !== undefined\n      const staleVal = hasStale && allowStale\n      if (status) {\n        status.fetch = isStale ? 'stale' : 'refresh'\n        if (staleVal && isStale) status.returnedStale = true\n      }\n      return staleVal ? p.__staleWhileFetching : (p.__returned = p)\n    }\n  }\n\n  /**\n   * In some cases, `cache.fetch()` may resolve to `undefined`, either because\n   * a {@link LRUCache.OptionsBase#fetchMethod} was not provided (turning\n   * `cache.fetch(k)` into just an async wrapper around `cache.get(k)`) or\n   * because `ignoreFetchAbort` was specified (either to the constructor or\n   * in the {@link LRUCache.FetchOptions}). Also, the\n   * {@link LRUCache.OptionsBase.fetchMethod} may return `undefined` or `void`, making\n   * the test even more complicated.\n   *\n   * Because inferring the cases where `undefined` might be returned are so\n   * cumbersome, but testing for `undefined` can also be annoying, this method\n   * can be used, which will reject if `this.fetch()` resolves to undefined.\n   */\n  forceFetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<V>\n  // this overload not allowed if context is required\n  forceFetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<V>\n  async forceFetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<V> {\n    const v = await this.fetch(\n      k,\n      fetchOptions as unknown extends FC\n        ? LRUCache.FetchOptions<K, V, FC>\n        : FC extends undefined | void\n        ? LRUCache.FetchOptionsNoContext<K, V>\n        : LRUCache.FetchOptionsWithContext<K, V, FC>\n    )\n    if (v === undefined) throw new Error('fetch() returned undefined')\n    return v\n  }\n\n  /**\n   * If the key is found in the cache, then this is equivalent to\n   * {@link LRUCache#get}. If not, in the cache, then calculate the value using\n   * the {@link LRUCache.OptionsBase.memoMethod}, and add it to the cache.\n   *\n   * If an `FC` type is set to a type other than `unknown`, `void`, or\n   * `undefined` in the LRUCache constructor, then all calls to `cache.memo()`\n   * _must_ provide a `context` option. If set to `undefined` or `void`, then\n   * calls to memo _must not_ provide a `context` option.\n   *\n   * The `context` param allows you to provide arbitrary data that might be\n   * relevant in the course of fetching the data. It is only relevant for the\n   * course of a single `memo()` operation, and discarded afterwards.\n   */\n  memo(\n    k: K,\n    memoOptions: unknown extends FC\n      ? LRUCache.MemoOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.MemoOptionsNoContext<K, V>\n      : LRUCache.MemoOptionsWithContext<K, V, FC>\n  ): V\n  // this overload not allowed if context is required\n  memo(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    memoOptions?: unknown extends FC\n      ? LRUCache.MemoOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.MemoOptionsNoContext<K, V>\n      : never\n  ): V\n  memo(k: K, memoOptions: LRUCache.MemoOptions<K, V, FC> = {}) {\n    const memoMethod = this.#memoMethod\n    if (!memoMethod) {\n      throw new Error('no memoMethod provided to constructor')\n    }\n    const { context, forceRefresh, ...options } = memoOptions\n    const v = this.get(k, options)\n    if (!forceRefresh && v !== undefined) return v\n    const vv = memoMethod(k, v, {\n      options,\n      context,\n    } as LRUCache.MemoizerOptions<K, V, FC>)\n    this.set(k, vv, options)\n    return vv\n  }\n\n  /**\n   * Return a value from the cache. Will update the recency of the cache\n   * entry found.\n   *\n   * If the key is not found, get() will return `undefined`.\n   */\n  get(k: K, getOptions: LRUCache.GetOptions<K, V, FC> = {}) {\n    const {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      status,\n    } = getOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const value = this.#valList[index]\n      const fetching = this.#isBackgroundFetch(value)\n      if (status) this.#statusTTL(status, index)\n      if (this.#isStale(index)) {\n        if (status) status.get = 'stale'\n        // delete only if not an in-flight background fetch\n        if (!fetching) {\n          if (!noDeleteOnStaleGet) {\n            this.#delete(k, 'expire')\n          }\n          if (status && allowStale) status.returnedStale = true\n          return allowStale ? value : undefined\n        } else {\n          if (\n            status &&\n            allowStale &&\n            value.__staleWhileFetching !== undefined\n          ) {\n            status.returnedStale = true\n          }\n          return allowStale ? value.__staleWhileFetching : undefined\n        }\n      } else {\n        if (status) status.get = 'hit'\n        // if we're currently fetching it, we don't actually have it yet\n        // it's not stale, which means this isn't a staleWhileRefetching.\n        // If it's not stale, and fetching, AND has a __staleWhileFetching\n        // value, then that means the user fetched with {forceRefresh:true},\n        // so it's safe to return that value.\n        if (fetching) {\n          return value.__staleWhileFetching\n        }\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        return value\n      }\n    } else if (status) {\n      status.get = 'miss'\n    }\n  }\n\n  #connect(p: Index, n: Index) {\n    this.#prev[n] = p\n    this.#next[p] = n\n  }\n\n  #moveToTail(index: Index): void {\n    // if tail already, nothing to do\n    // if head, move head to next[index]\n    // else\n    //   move next[prev[index]] to next[index] (head has no prev)\n    //   move prev[next[index]] to prev[index]\n    // prev[index] = tail\n    // next[tail] = index\n    // tail = index\n    if (index !== this.#tail) {\n      if (index === this.#head) {\n        this.#head = this.#next[index] as Index\n      } else {\n        this.#connect(\n          this.#prev[index] as Index,\n          this.#next[index] as Index\n        )\n      }\n      this.#connect(this.#tail, index)\n      this.#tail = index\n    }\n  }\n\n  /**\n   * Deletes a key out of the cache.\n   *\n   * Returns true if the key was deleted, false otherwise.\n   */\n  delete(k: K) {\n    return this.#delete(k, 'delete')\n  }\n\n  #delete(k: K, reason: LRUCache.DisposeReason) {\n    let deleted = false\n    if (this.#size !== 0) {\n      const index = this.#keyMap.get(k)\n      if (index !== undefined) {\n        deleted = true\n        if (this.#size === 1) {\n          this.#clear(reason)\n        } else {\n          this.#removeItemSize(index)\n          const v = this.#valList[index]\n          if (this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('deleted'))\n          } else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n              this.#dispose?.(v as V, k, reason)\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([v as V, k, reason])\n            }\n          }\n          this.#keyMap.delete(k)\n          this.#keyList[index] = undefined\n          this.#valList[index] = undefined\n          if (index === this.#tail) {\n            this.#tail = this.#prev[index] as Index\n          } else if (index === this.#head) {\n            this.#head = this.#next[index] as Index\n          } else {\n            const pi = this.#prev[index] as number\n            this.#next[pi] = this.#next[index] as number\n            const ni = this.#next[index] as number\n            this.#prev[ni] = this.#prev[index] as number\n          }\n          this.#size--\n          this.#free.push(index)\n        }\n      }\n    }\n    if (this.#hasDisposeAfter && this.#disposed?.length) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Clear the cache entirely, throwing away all values.\n   */\n  clear() {\n    return this.#clear('delete')\n  }\n  #clear(reason: LRUCache.DisposeReason) {\n    for (const index of this.#rindexes({ allowStale: true })) {\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error('deleted'))\n      } else {\n        const k = this.#keyList[index]\n        if (this.#hasDispose) {\n          this.#dispose?.(v as V, k as K, reason)\n        }\n        if (this.#hasDisposeAfter) {\n          this.#disposed?.push([v as V, k as K, reason])\n        }\n      }\n    }\n\n    this.#keyMap.clear()\n    this.#valList.fill(undefined)\n    this.#keyList.fill(undefined)\n    if (this.#ttls && this.#starts) {\n      this.#ttls.fill(0)\n      this.#starts.fill(0)\n    }\n    if (this.#sizes) {\n      this.#sizes.fill(0)\n    }\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free.length = 0\n    this.#calculatedSize = 0\n    this.#size = 0\n    if (this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n  }\n}\n", "import { LRUCache } from 'lru-cache'\nimport { posix, win32 } from 'node:path'\n\nimport { fileURLToPath } from 'node:url'\n\nimport {\n  lstatSync,\n  readdir as readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync as rps,\n} from 'fs'\nimport * as actualFS from 'node:fs'\n\nconst realpathSync = rps.native\n// TODO: test perf of fs/promises realpath vs realpathCB,\n// since the promises one uses realpath.native\n\nimport { lstat, readdir, readlink, realpath } from 'node:fs/promises'\n\nimport { Minipass } from 'minipass'\nimport type { Dirent, Stats } from 'node:fs'\n\n/**\n * An object that will be used to override the default `fs`\n * methods.  Any methods that are not overridden will use Node's\n * built-in implementations.\n *\n * - lstatSync\n * - readdir (callback `withFileTypes` Dirent variant, used for\n *   readdirCB and most walks)\n * - readdirSync\n * - readlinkSync\n * - realpathSync\n * - promises: Object containing the following async methods:\n *   - lstat\n *   - readdir (Dirent variant only)\n *   - readlink\n *   - realpath\n */\nexport interface FSOption {\n  lstatSync?: (path: string) => Stats\n  readdir?: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any,\n  ) => void\n  readdirSync?: (\n    path: string,\n    options: { withFileTypes: true },\n  ) => Dirent[]\n  readlinkSync?: (path: string) => string\n  realpathSync?: (path: string) => string\n  promises?: {\n    lstat?: (path: string) => Promise<Stats>\n    readdir?: (\n      path: string,\n      options: { withFileTypes: true },\n    ) => Promise<Dirent[]>\n    readlink?: (path: string) => Promise<string>\n    realpath?: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\ninterface FSValue {\n  lstatSync: (path: string) => Stats\n  readdir: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any,\n  ) => void\n  readdirSync: (path: string, options: { withFileTypes: true }) => Dirent[]\n  readlinkSync: (path: string) => string\n  realpathSync: (path: string) => string\n  promises: {\n    lstat: (path: string) => Promise<Stats>\n    readdir: (\n      path: string,\n      options: { withFileTypes: true },\n    ) => Promise<Dirent[]>\n    readlink: (path: string) => Promise<string>\n    realpath: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\nconst defaultFS: FSValue = {\n  lstatSync,\n  readdir: readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync,\n  promises: {\n    lstat,\n    readdir,\n    readlink,\n    realpath,\n  },\n}\n\n// if they just gave us require('fs') then use our default\nconst fsFromOption = (fsOption?: FSOption): FSValue =>\n  !fsOption || fsOption === defaultFS || fsOption === actualFS ?\n    defaultFS\n  : {\n      ...defaultFS,\n      ...fsOption,\n      promises: {\n        ...defaultFS.promises,\n        ...(fsOption.promises || {}),\n      },\n    }\n\n// turn something like //?/c:/ into c:\\\nconst uncDriveRegexp = /^\\\\\\\\\\?\\\\([a-z]:)\\\\?$/i\nconst uncToDrive = (rootPath: string): string =>\n  rootPath.replace(/\\//g, '\\\\').replace(uncDriveRegexp, '$1\\\\')\n\n// windows paths are separated by either / or \\\nconst eitherSep = /[\\\\\\/]/\n\nconst UNKNOWN = 0 // may not even exist, for all we know\nconst IFIFO = 0b0001\nconst IFCHR = 0b0010\nconst IFDIR = 0b0100\nconst IFBLK = 0b0110\nconst IFREG = 0b1000\nconst IFLNK = 0b1010\nconst IFSOCK = 0b1100\nconst IFMT = 0b1111\n\nexport type Type =\n  | 'Unknown'\n  | 'FIFO'\n  | 'CharacterDevice'\n  | 'Directory'\n  | 'BlockDevice'\n  | 'File'\n  | 'SymbolicLink'\n  | 'Socket'\n\n// mask to unset low 4 bits\nconst IFMT_UNKNOWN = ~IFMT\n\n// set after successfully calling readdir() and getting entries.\nconst READDIR_CALLED = 0b0000_0001_0000\n// set after a successful lstat()\nconst LSTAT_CALLED = 0b0000_0010_0000\n// set if an entry (or one of its parents) is definitely not a dir\nconst ENOTDIR = 0b0000_0100_0000\n// set if an entry (or one of its parents) does not exist\n// (can also be set on lstat errors like EACCES or ENAMETOOLONG)\nconst ENOENT = 0b0000_1000_0000\n// cannot have child entries -- also verify &IFMT is either IFDIR or IFLNK\n// set if we fail to readlink\nconst ENOREADLINK = 0b0001_0000_0000\n// set if we know realpath() will fail\nconst ENOREALPATH = 0b0010_0000_0000\n\nconst ENOCHILD = ENOTDIR | ENOENT | ENOREALPATH\nconst TYPEMASK = 0b0011_1111_1111\n\nconst entToType = (s: Dirent | Stats) =>\n  s.isFile() ? IFREG\n  : s.isDirectory() ? IFDIR\n  : s.isSymbolicLink() ? IFLNK\n  : s.isCharacterDevice() ? IFCHR\n  : s.isBlockDevice() ? IFBLK\n  : s.isSocket() ? IFSOCK\n  : s.isFIFO() ? IFIFO\n  : UNKNOWN\n\n// normalize unicode path names\nconst normalizeCache = new Map<string, string>()\nconst normalize = (s: string) => {\n  const c = normalizeCache.get(s)\n  if (c) return c\n  const n = s.normalize('NFKD')\n  normalizeCache.set(s, n)\n  return n\n}\n\nconst normalizeNocaseCache = new Map<string, string>()\nconst normalizeNocase = (s: string) => {\n  const c = normalizeNocaseCache.get(s)\n  if (c) return c\n  const n = normalize(s.toLowerCase())\n  normalizeNocaseCache.set(s, n)\n  return n\n}\n\n/**\n * Options that may be provided to the Path constructor\n */\nexport interface PathOpts {\n  fullpath?: string\n  relative?: string\n  relativePosix?: string\n  parent?: PathBase\n  /**\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * An LRUCache for storing resolved path strings or Path objects.\n * @internal\n */\nexport class ResolveCache extends LRUCache<string, string> {\n  constructor() {\n    super({ max: 256 })\n  }\n}\n\n// In order to prevent blowing out the js heap by allocating hundreds of\n// thousands of Path entries when walking extremely large trees, the \"children\"\n// in this tree are represented by storing an array of Path entries in an\n// LRUCache, indexed by the parent.  At any time, Path.children() may return an\n// empty array, indicating that it doesn't know about any of its children, and\n// thus has to rebuild that cache.  This is fine, it just means that we don't\n// benefit as much from having the cached entries, but huge directory walks\n// don't blow out the stack, and smaller ones are still as fast as possible.\n//\n//It does impose some complexity when building up the readdir data, because we\n//need to pass a reference to the children array that we started with.\n\n/**\n * an LRUCache for storing child entries.\n * @internal\n */\nexport class ChildrenCache extends LRUCache<PathBase, Children> {\n  constructor(maxSize: number = 16 * 1024) {\n    super({\n      maxSize,\n      // parent + children\n      sizeCalculation: a => a.length + 1,\n    })\n  }\n}\n\n/**\n * Array of Path objects, plus a marker indicating the first provisional entry\n *\n * @internal\n */\nexport type Children = PathBase[] & { provisional: number }\n\nconst setAsCwd = Symbol('PathScurry setAsCwd')\n\n/**\n * Path objects are sort of like a super-powered\n * {@link https://nodejs.org/docs/latest/api/fs.html#class-fsdirent fs.Dirent}\n *\n * Each one represents a single filesystem entry on disk, which may or may not\n * exist. It includes methods for reading various types of information via\n * lstat, readlink, and readdir, and caches all information to the greatest\n * degree possible.\n *\n * Note that fs operations that would normally throw will instead return an\n * \"empty\" value. This is in order to prevent excessive overhead from error\n * stack traces.\n */\nexport abstract class PathBase implements Dirent {\n  /**\n   * the basename of this path\n   *\n   * **Important**: *always* test the path name against any test string\n   * usingthe {@link isNamed} method, and not by directly comparing this\n   * string. Otherwise, unicode path strings that the system sees as identical\n   * will not be properly treated as the same path, leading to incorrect\n   * behavior and possible security issues.\n   */\n  name: string\n  /**\n   * the Path entry corresponding to the path root.\n   *\n   * @internal\n   */\n  root: PathBase\n  /**\n   * All roots found within the current PathScurry family\n   *\n   * @internal\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * a reference to the parent path, or undefined in the case of root entries\n   *\n   * @internal\n   */\n  parent?: PathBase\n  /**\n   * boolean indicating whether paths are compared case-insensitively\n   * @internal\n   */\n  nocase: boolean\n\n  /**\n   * boolean indicating that this path is the current working directory\n   * of the PathScurry collection that contains it.\n   */\n  isCWD: boolean = false\n\n  /**\n   * the string or regexp used to split paths. On posix, it is `'/'`, and on\n   * windows it is a RegExp matching either `'/'` or `'\\\\'`\n   */\n  abstract splitSep: string | RegExp\n  /**\n   * The path separator string to use when joining paths\n   */\n  abstract sep: string\n\n  // potential default fs override\n  #fs: FSValue\n\n  // Stats fields\n  #dev?: number\n  get dev() {\n    return this.#dev\n  }\n  #mode?: number\n  get mode() {\n    return this.#mode\n  }\n  #nlink?: number\n  get nlink() {\n    return this.#nlink\n  }\n  #uid?: number\n  get uid() {\n    return this.#uid\n  }\n  #gid?: number\n  get gid() {\n    return this.#gid\n  }\n  #rdev?: number\n  get rdev() {\n    return this.#rdev\n  }\n  #blksize?: number\n  get blksize() {\n    return this.#blksize\n  }\n  #ino?: number\n  get ino() {\n    return this.#ino\n  }\n  #size?: number\n  get size() {\n    return this.#size\n  }\n  #blocks?: number\n  get blocks() {\n    return this.#blocks\n  }\n  #atimeMs?: number\n  get atimeMs() {\n    return this.#atimeMs\n  }\n  #mtimeMs?: number\n  get mtimeMs() {\n    return this.#mtimeMs\n  }\n  #ctimeMs?: number\n  get ctimeMs() {\n    return this.#ctimeMs\n  }\n  #birthtimeMs?: number\n  get birthtimeMs() {\n    return this.#birthtimeMs\n  }\n  #atime?: Date\n  get atime() {\n    return this.#atime\n  }\n  #mtime?: Date\n  get mtime() {\n    return this.#mtime\n  }\n  #ctime?: Date\n  get ctime() {\n    return this.#ctime\n  }\n  #birthtime?: Date\n  get birthtime() {\n    return this.#birthtime\n  }\n\n  #matchName: string\n  #depth?: number\n  #fullpath?: string\n  #fullpathPosix?: string\n  #relative?: string\n  #relativePosix?: string\n  #type: number\n  #children: ChildrenCache\n  #linkTarget?: PathBase\n  #realpath?: PathBase\n\n  /**\n   * This property is for compatibility with the Dirent class as of\n   * Node v20, where Dirent['parentPath'] refers to the path of the\n   * directory that was passed to readdir. For root entries, it's the path\n   * to the entry itself.\n   */\n  get parentPath(): string {\n    return (this.parent || this).fullpath()\n  }\n\n  /**\n   * Deprecated alias for Dirent['parentPath'] Somewhat counterintuitively,\n   * this property refers to the *parent* path, not the path object itself.\n   *\n   * @deprecated\n   */\n  get path(): string {\n    return this.parentPath\n  }\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    this.name = name\n    this.#matchName = nocase ? normalizeNocase(name) : normalize(name)\n    this.#type = type & TYPEMASK\n    this.nocase = nocase\n    this.roots = roots\n    this.root = root || this\n    this.#children = children\n    this.#fullpath = opts.fullpath\n    this.#relative = opts.relative\n    this.#relativePosix = opts.relativePosix\n    this.parent = opts.parent\n    if (this.parent) {\n      this.#fs = this.parent.#fs\n    } else {\n      this.#fs = fsFromOption(opts.fs)\n    }\n  }\n\n  /**\n   * Returns the depth of the Path object from its root.\n   *\n   * For example, a path at `/foo/bar` would have a depth of 2.\n   */\n  depth(): number {\n    if (this.#depth !== undefined) return this.#depth\n    if (!this.parent) return (this.#depth = 0)\n    return (this.#depth = this.parent.depth() + 1)\n  }\n\n  /**\n   * @internal\n   */\n  abstract getRootString(path: string): string\n  /**\n   * @internal\n   */\n  abstract getRoot(rootPath: string): PathBase\n  /**\n   * @internal\n   */\n  abstract newChild(name: string, type?: number, opts?: PathOpts): PathBase\n\n  /**\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Get the Path object referenced by the string path, resolved from this Path\n   */\n  resolve(path?: string): PathBase {\n    if (!path) {\n      return this\n    }\n    const rootPath = this.getRootString(path)\n    const dir = path.substring(rootPath.length)\n    const dirParts = dir.split(this.splitSep)\n    const result: PathBase =\n      rootPath ?\n        this.getRoot(rootPath).#resolveParts(dirParts)\n      : this.#resolveParts(dirParts)\n    return result\n  }\n\n  #resolveParts(dirParts: string[]) {\n    let p: PathBase = this\n    for (const part of dirParts) {\n      p = p.child(part)\n    }\n    return p\n  }\n\n  /**\n   * Returns the cached children Path objects, if still available.  If they\n   * have fallen out of the cache, then returns an empty array, and resets the\n   * READDIR_CALLED bit, so that future calls to readdir() will require an fs\n   * lookup.\n   *\n   * @internal\n   */\n  children(): Children {\n    const cached = this.#children.get(this)\n    if (cached) {\n      return cached\n    }\n    const children: Children = Object.assign([], { provisional: 0 })\n    this.#children.set(this, children)\n    this.#type &= ~READDIR_CALLED\n    return children\n  }\n\n  /**\n   * Resolves a path portion and returns or creates the child Path.\n   *\n   * Returns `this` if pathPart is `''` or `'.'`, or `parent` if pathPart is\n   * `'..'`.\n   *\n   * This should not be called directly.  If `pathPart` contains any path\n   * separators, it will lead to unsafe undefined behavior.\n   *\n   * Use `Path.resolve()` instead.\n   *\n   * @internal\n   */\n  child(pathPart: string, opts?: PathOpts): PathBase {\n    if (pathPart === '' || pathPart === '.') {\n      return this\n    }\n    if (pathPart === '..') {\n      return this.parent || this\n    }\n\n    // find the child\n    const children = this.children()\n    const name =\n      this.nocase ? normalizeNocase(pathPart) : normalize(pathPart)\n    for (const p of children) {\n      if (p.#matchName === name) {\n        return p\n      }\n    }\n\n    // didn't find it, create provisional child, since it might not\n    // actually exist.  If we know the parent isn't a dir, then\n    // in fact it CAN'T exist.\n    const s = this.parent ? this.sep : ''\n    const fullpath =\n      this.#fullpath ? this.#fullpath + s + pathPart : undefined\n    const pchild = this.newChild(pathPart, UNKNOWN, {\n      ...opts,\n      parent: this,\n      fullpath,\n    })\n\n    if (!this.canReaddir()) {\n      pchild.#type |= ENOENT\n    }\n\n    // don't have to update provisional, because if we have real children,\n    // then provisional is set to children.length, otherwise a lower number\n    children.push(pchild)\n    return pchild\n  }\n\n  /**\n   * The relative path from the cwd. If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpath()\n   */\n  relative(): string {\n    if (this.isCWD) return ''\n    if (this.#relative !== undefined) {\n      return this.#relative\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relative = this.name)\n    }\n    const pv = p.relative()\n    return pv + (!pv || !p.parent ? '' : this.sep) + name\n  }\n\n  /**\n   * The relative path from the cwd, using / as the path separator.\n   * If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpathPosix()\n   * On posix systems, this is identical to relative().\n   */\n  relativePosix(): string {\n    if (this.sep === '/') return this.relative()\n    if (this.isCWD) return ''\n    if (this.#relativePosix !== undefined) return this.#relativePosix\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relativePosix = this.fullpathPosix())\n    }\n    const pv = p.relativePosix()\n    return pv + (!pv || !p.parent ? '' : '/') + name\n  }\n\n  /**\n   * The fully resolved path string for this Path entry\n   */\n  fullpath(): string {\n    if (this.#fullpath !== undefined) {\n      return this.#fullpath\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#fullpath = this.name)\n    }\n    const pv = p.fullpath()\n    const fp = pv + (!p.parent ? '' : this.sep) + name\n    return (this.#fullpath = fp)\n  }\n\n  /**\n   * On platforms other than windows, this is identical to fullpath.\n   *\n   * On windows, this is overridden to return the forward-slash form of the\n   * full UNC path.\n   */\n  fullpathPosix(): string {\n    if (this.#fullpathPosix !== undefined) return this.#fullpathPosix\n    if (this.sep === '/') return (this.#fullpathPosix = this.fullpath())\n    if (!this.parent) {\n      const p = this.fullpath().replace(/\\\\/g, '/')\n      if (/^[a-z]:\\//i.test(p)) {\n        return (this.#fullpathPosix = `//?/${p}`)\n      } else {\n        return (this.#fullpathPosix = p)\n      }\n    }\n    const p = this.parent\n    const pfpp = p.fullpathPosix()\n    const fpp = pfpp + (!pfpp || !p.parent ? '' : '/') + this.name\n    return (this.#fullpathPosix = fpp)\n  }\n\n  /**\n   * Is the Path of an unknown type?\n   *\n   * Note that we might know *something* about it if there has been a previous\n   * filesystem operation, for example that it does not exist, or is not a\n   * link, or whether it has child entries.\n   */\n  isUnknown(): boolean {\n    return (this.#type & IFMT) === UNKNOWN\n  }\n\n  isType(type: Type): boolean {\n    return this[`is${type}`]()\n  }\n\n  getType(): Type {\n    return (\n      this.isUnknown() ? 'Unknown'\n      : this.isDirectory() ? 'Directory'\n      : this.isFile() ? 'File'\n      : this.isSymbolicLink() ? 'SymbolicLink'\n      : this.isFIFO() ? 'FIFO'\n      : this.isCharacterDevice() ? 'CharacterDevice'\n      : this.isBlockDevice() ? 'BlockDevice'\n      : /* c8 ignore start */ this.isSocket() ? 'Socket'\n      : 'Unknown'\n    )\n    /* c8 ignore stop */\n  }\n\n  /**\n   * Is the Path a regular file?\n   */\n  isFile(): boolean {\n    return (this.#type & IFMT) === IFREG\n  }\n\n  /**\n   * Is the Path a directory?\n   */\n  isDirectory(): boolean {\n    return (this.#type & IFMT) === IFDIR\n  }\n\n  /**\n   * Is the path a character device?\n   */\n  isCharacterDevice(): boolean {\n    return (this.#type & IFMT) === IFCHR\n  }\n\n  /**\n   * Is the path a block device?\n   */\n  isBlockDevice(): boolean {\n    return (this.#type & IFMT) === IFBLK\n  }\n\n  /**\n   * Is the path a FIFO pipe?\n   */\n  isFIFO(): boolean {\n    return (this.#type & IFMT) === IFIFO\n  }\n\n  /**\n   * Is the path a socket?\n   */\n  isSocket(): boolean {\n    return (this.#type & IFMT) === IFSOCK\n  }\n\n  /**\n   * Is the path a symbolic link?\n   */\n  isSymbolicLink(): boolean {\n    return (this.#type & IFLNK) === IFLNK\n  }\n\n  /**\n   * Return the entry if it has been subject of a successful lstat, or\n   * undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* simply\n   * mean that we haven't called lstat on it.\n   */\n  lstatCached(): PathBase | undefined {\n    return this.#type & LSTAT_CALLED ? this : undefined\n  }\n\n  /**\n   * Return the cached link target if the entry has been the subject of a\n   * successful readlink, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readlink() has been called at some point.\n   */\n  readlinkCached(): PathBase | undefined {\n    return this.#linkTarget\n  }\n\n  /**\n   * Returns the cached realpath target if the entry has been the subject\n   * of a successful realpath, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * realpath() has been called at some point.\n   */\n  realpathCached(): PathBase | undefined {\n    return this.#realpath\n  }\n\n  /**\n   * Returns the cached child Path entries array if the entry has been the\n   * subject of a successful readdir(), or [] otherwise.\n   *\n   * Does not read the filesystem, so an empty array *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readdir() has been called recently enough to still be valid.\n   */\n  readdirCached(): PathBase[] {\n    const children = this.children()\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * Return true if it's worth trying to readlink.  Ie, we don't (yet) have\n   * any indication that readlink will definitely fail.\n   *\n   * Returns false if the path is known to not be a symlink, if a previous\n   * readlink failed, or if the entry does not exist.\n   */\n  canReadlink(): boolean {\n    if (this.#linkTarget) return true\n    if (!this.parent) return false\n    // cases where it cannot possibly succeed\n    const ifmt = this.#type & IFMT\n    return !(\n      (ifmt !== UNKNOWN && ifmt !== IFLNK) ||\n      this.#type & ENOREADLINK ||\n      this.#type & ENOENT\n    )\n  }\n\n  /**\n   * Return true if readdir has previously been successfully called on this\n   * path, indicating that cachedReaddir() is likely valid.\n   */\n  calledReaddir(): boolean {\n    return !!(this.#type & READDIR_CALLED)\n  }\n\n  /**\n   * Returns true if the path is known to not exist. That is, a previous lstat\n   * or readdir failed to verify its existence when that would have been\n   * expected, or a parent entry was marked either enoent or enotdir.\n   */\n  isENOENT(): boolean {\n    return !!(this.#type & ENOENT)\n  }\n\n  /**\n   * Return true if the path is a match for the given path name.  This handles\n   * case sensitivity and unicode normalization.\n   *\n   * Note: even on case-sensitive systems, it is **not** safe to test the\n   * equality of the `.name` property to determine whether a given pathname\n   * matches, due to unicode normalization mismatches.\n   *\n   * Always use this method instead of testing the `path.name` property\n   * directly.\n   */\n  isNamed(n: string): boolean {\n    return !this.nocase ?\n        this.#matchName === normalize(n)\n      : this.#matchName === normalizeNocase(n)\n  }\n\n  /**\n   * Return the Path object corresponding to the target of a symbolic link.\n   *\n   * If the Path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   */\n  async readlink(): Promise<PathBase | undefined> {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = await this.#fs.promises.readlink(this.fullpath())\n      const linkTarget = (await this.parent.realpath())?.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  /**\n   * Synchronous {@link PathBase.readlink}\n   */\n  readlinkSync(): PathBase | undefined {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = this.#fs.readlinkSync(this.fullpath())\n      const linkTarget = this.parent.realpathSync()?.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  #readdirSuccess(children: Children) {\n    // succeeded, mark readdir called bit\n    this.#type |= READDIR_CALLED\n    // mark all remaining provisional children as ENOENT\n    for (let p = children.provisional; p < children.length; p++) {\n      const c = children[p]\n      if (c) c.#markENOENT()\n    }\n  }\n\n  #markENOENT() {\n    // mark as UNKNOWN and ENOENT\n    if (this.#type & ENOENT) return\n    this.#type = (this.#type | ENOENT) & IFMT_UNKNOWN\n    this.#markChildrenENOENT()\n  }\n\n  #markChildrenENOENT() {\n    // all children are provisional and do not exist\n    const children = this.children()\n    children.provisional = 0\n    for (const p of children) {\n      p.#markENOENT()\n    }\n  }\n\n  #markENOREALPATH() {\n    this.#type |= ENOREALPATH\n    this.#markENOTDIR()\n  }\n\n  // save the information when we know the entry is not a dir\n  #markENOTDIR() {\n    // entry is not a directory, so any children can't exist.\n    // this *should* be impossible, since any children created\n    // after it's been marked ENOTDIR should be marked ENOENT,\n    // so it won't even get to this point.\n    /* c8 ignore start */\n    if (this.#type & ENOTDIR) return\n    /* c8 ignore stop */\n    let t = this.#type\n    // this could happen if we stat a dir, then delete it,\n    // then try to read it or one of its children.\n    if ((t & IFMT) === IFDIR) t &= IFMT_UNKNOWN\n    this.#type = t | ENOTDIR\n    this.#markChildrenENOENT()\n  }\n\n  #readdirFail(code: string = '') {\n    // markENOTDIR and markENOENT also set provisional=0\n    if (code === 'ENOTDIR' || code === 'EPERM') {\n      this.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      this.#markENOENT()\n    } else {\n      this.children().provisional = 0\n    }\n  }\n\n  #lstatFail(code: string = '') {\n    // Windows just raises ENOENT in this case, disable for win CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR') {\n      // already know it has a parent by this point\n      const p = this.parent as PathBase\n      p.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      /* c8 ignore stop */\n      this.#markENOENT()\n    }\n  }\n\n  #readlinkFail(code: string = '') {\n    let ter = this.#type\n    ter |= ENOREADLINK\n    if (code === 'ENOENT') ter |= ENOENT\n    // windows gets a weird error when you try to readlink a file\n    if (code === 'EINVAL' || code === 'UNKNOWN') {\n      // exists, but not a symlink, we don't know WHAT it is, so remove\n      // all IFMT bits.\n      ter &= IFMT_UNKNOWN\n    }\n    this.#type = ter\n    // windows just gets ENOENT in this case.  We do cover the case,\n    // just disabled because it's impossible on Windows CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR' && this.parent) {\n      this.parent.#markENOTDIR()\n    }\n    /* c8 ignore stop */\n  }\n\n  #readdirAddChild(e: Dirent, c: Children) {\n    return (\n      this.#readdirMaybePromoteChild(e, c) ||\n      this.#readdirAddNewChild(e, c)\n    )\n  }\n\n  #readdirAddNewChild(e: Dirent, c: Children): PathBase {\n    // alloc new entry at head, so it's never provisional\n    const type = entToType(e)\n    const child = this.newChild(e.name, type, { parent: this })\n    const ifmt = child.#type & IFMT\n    if (ifmt !== IFDIR && ifmt !== IFLNK && ifmt !== UNKNOWN) {\n      child.#type |= ENOTDIR\n    }\n    c.unshift(child)\n    c.provisional++\n    return child\n  }\n\n  #readdirMaybePromoteChild(e: Dirent, c: Children): PathBase | undefined {\n    for (let p = c.provisional; p < c.length; p++) {\n      const pchild = c[p]\n      const name =\n        this.nocase ? normalizeNocase(e.name) : normalize(e.name)\n      if (name !== pchild!.#matchName) {\n        continue\n      }\n\n      return this.#readdirPromoteChild(e, pchild!, p, c)\n    }\n  }\n\n  #readdirPromoteChild(\n    e: Dirent,\n    p: PathBase,\n    index: number,\n    c: Children,\n  ): PathBase {\n    const v = p.name\n    // retain any other flags, but set ifmt from dirent\n    p.#type = (p.#type & IFMT_UNKNOWN) | entToType(e)\n    // case sensitivity fixing when we learn the true name.\n    if (v !== e.name) p.name = e.name\n\n    // just advance provisional index (potentially off the list),\n    // otherwise we have to splice/pop it out and re-insert at head\n    if (index !== c.provisional) {\n      if (index === c.length - 1) c.pop()\n      else c.splice(index, 1)\n      c.unshift(p)\n    }\n    c.provisional++\n    return p\n  }\n\n  /**\n   * Call lstat() on this Path, and update all known information that can be\n   * determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(): Promise<PathBase | undefined> {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(await this.#fs.promises.lstat(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  /**\n   * synchronous {@link PathBase.lstat}\n   */\n  lstatSync(): PathBase | undefined {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(this.#fs.lstatSync(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  #applyStat(st: Stats) {\n    const {\n      atime,\n      atimeMs,\n      birthtime,\n      birthtimeMs,\n      blksize,\n      blocks,\n      ctime,\n      ctimeMs,\n      dev,\n      gid,\n      ino,\n      mode,\n      mtime,\n      mtimeMs,\n      nlink,\n      rdev,\n      size,\n      uid,\n    } = st\n    this.#atime = atime\n    this.#atimeMs = atimeMs\n    this.#birthtime = birthtime\n    this.#birthtimeMs = birthtimeMs\n    this.#blksize = blksize\n    this.#blocks = blocks\n    this.#ctime = ctime\n    this.#ctimeMs = ctimeMs\n    this.#dev = dev\n    this.#gid = gid\n    this.#ino = ino\n    this.#mode = mode\n    this.#mtime = mtime\n    this.#mtimeMs = mtimeMs\n    this.#nlink = nlink\n    this.#rdev = rdev\n    this.#size = size\n    this.#uid = uid\n    const ifmt = entToType(st)\n    // retain any other flags, but set the ifmt\n    this.#type = (this.#type & IFMT_UNKNOWN) | ifmt | LSTAT_CALLED\n    if (ifmt !== UNKNOWN && ifmt !== IFDIR && ifmt !== IFLNK) {\n      this.#type |= ENOTDIR\n    }\n  }\n\n  #onReaddirCB: ((\n    er: NodeJS.ErrnoException | null,\n    entries: Path[],\n  ) => any)[] = []\n  #readdirCBInFlight: boolean = false\n  #callOnReaddirCB(children: Path[]) {\n    this.#readdirCBInFlight = false\n    const cbs = this.#onReaddirCB.slice()\n    this.#onReaddirCB.length = 0\n    cbs.forEach(cb => cb(null, children))\n  }\n\n  /**\n   * Standard node-style callback interface to get list of directory entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * @param cb The callback called with (er, entries).  Note that the `er`\n   * param is somewhat extraneous, as all readdir() errors are handled and\n   * simply result in an empty set of entries being returned.\n   * @param allowZalgo Boolean indicating that immediately known results should\n   * *not* be deferred with `queueMicrotask`. Defaults to `false`. Release\n   * zalgo at your peril, the dark pony lord is devious and unforgiving.\n   */\n  readdirCB(\n    cb: (er: NodeJS.ErrnoException | null, entries: PathBase[]) => any,\n    allowZalgo: boolean = false,\n  ): void {\n    if (!this.canReaddir()) {\n      if (allowZalgo) cb(null, [])\n      else queueMicrotask(() => cb(null, []))\n      return\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      const c = children.slice(0, children.provisional)\n      if (allowZalgo) cb(null, c)\n      else queueMicrotask(() => cb(null, c))\n      return\n    }\n\n    // don't have to worry about zalgo at this point.\n    this.#onReaddirCB.push(cb)\n    if (this.#readdirCBInFlight) {\n      return\n    }\n    this.#readdirCBInFlight = true\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    this.#fs.readdir(fullpath, { withFileTypes: true }, (er, entries) => {\n      if (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      } else {\n        // if we didn't get an error, we always get entries.\n        //@ts-ignore\n        for (const e of entries) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      }\n      this.#callOnReaddirCB(children.slice(0, children.provisional))\n      return\n    })\n  }\n\n  #asyncReaddirInFlight?: Promise<void>\n\n  /**\n   * Return an array of known child entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async readdir(): Promise<PathBase[]> {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    if (this.#asyncReaddirInFlight) {\n      await this.#asyncReaddirInFlight\n    } else {\n      /* c8 ignore start */\n      let resolve: () => void = () => {}\n      /* c8 ignore stop */\n      this.#asyncReaddirInFlight = new Promise<void>(\n        res => (resolve = res),\n      )\n      try {\n        for (const e of await this.#fs.promises.readdir(fullpath, {\n          withFileTypes: true,\n        })) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      } catch (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      }\n      this.#asyncReaddirInFlight = undefined\n      resolve()\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * synchronous {@link PathBase.readdir}\n   */\n  readdirSync(): PathBase[] {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    try {\n      for (const e of this.#fs.readdirSync(fullpath, {\n        withFileTypes: true,\n      })) {\n        this.#readdirAddChild(e, children)\n      }\n      this.#readdirSuccess(children)\n    } catch (er) {\n      this.#readdirFail((er as NodeJS.ErrnoException).code)\n      children.provisional = 0\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  canReaddir() {\n    if (this.#type & ENOCHILD) return false\n    const ifmt = IFMT & this.#type\n    // we always set ENOTDIR when setting IFMT, so should be impossible\n    /* c8 ignore start */\n    if (!(ifmt === UNKNOWN || ifmt === IFDIR || ifmt === IFLNK)) {\n      return false\n    }\n    /* c8 ignore stop */\n    return true\n  }\n\n  shouldWalk(\n    dirs: Set<PathBase | undefined>,\n    walkFilter?: (e: PathBase) => boolean,\n  ): boolean {\n    return (\n      (this.#type & IFDIR) === IFDIR &&\n      !(this.#type & ENOCHILD) &&\n      !dirs.has(this) &&\n      (!walkFilter || walkFilter(this))\n    )\n  }\n\n  /**\n   * Return the Path object corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   * On success, returns a Path object.\n   */\n  async realpath(): Promise<PathBase | undefined> {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = await this.#fs.promises.realpath(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Synchronous {@link realpath}\n   */\n  realpathSync(): PathBase | undefined {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = this.#fs.realpathSync(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Internal method to mark this Path object as the scurry cwd,\n   * called by {@link PathScurry#chdir}\n   *\n   * @internal\n   */\n  [setAsCwd](oldCwd: PathBase): void {\n    if (oldCwd === this) return\n    oldCwd.isCWD = false\n    this.isCWD = true\n\n    const changed = new Set<PathBase>([])\n    let rp = []\n    let p: PathBase = this\n    while (p && p.parent) {\n      changed.add(p)\n      p.#relative = rp.join(this.sep)\n      p.#relativePosix = rp.join('/')\n      p = p.parent\n      rp.push('..')\n    }\n    // now un-memoize parents of old cwd\n    p = oldCwd\n    while (p && p.parent && !changed.has(p)) {\n      p.#relative = undefined\n      p.#relativePosix = undefined\n      p = p.parent\n    }\n  }\n}\n\n/**\n * Path class used on win32 systems\n *\n * Uses `'\\\\'` as the path separator for returned paths, either `'\\\\'` or `'/'`\n * as the path separator for parsing paths.\n */\nexport class PathWin32 extends PathBase {\n  /**\n   * Separator for generating path strings.\n   */\n  sep: '\\\\' = '\\\\'\n  /**\n   * Separator for parsing path strings.\n   */\n  splitSep: RegExp = eitherSep\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathWin32(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts,\n    )\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return win32.parse(path).root\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(rootPath: string): PathBase {\n    rootPath = uncToDrive(rootPath.toUpperCase())\n    if (rootPath === this.root.name) {\n      return this.root\n    }\n    // ok, not that one, check if it matches another we know about\n    for (const [compare, root] of Object.entries(this.roots)) {\n      if (this.sameRoot(rootPath, compare)) {\n        return (this.roots[rootPath] = root)\n      }\n    }\n    // otherwise, have to create a new one.\n    return (this.roots[rootPath] = new PathScurryWin32(\n      rootPath,\n      this,\n    ).root)\n  }\n\n  /**\n   * @internal\n   */\n  sameRoot(rootPath: string, compare: string = this.root.name): boolean {\n    // windows can (rarely) have case-sensitive filesystem, but\n    // UNC and drive letters are always case-insensitive, and canonically\n    // represented uppercase.\n    rootPath = rootPath\n      .toUpperCase()\n      .replace(/\\//g, '\\\\')\n      .replace(uncDriveRegexp, '$1\\\\')\n    return rootPath === compare\n  }\n}\n\n/**\n * Path class used on all posix systems.\n *\n * Uses `'/'` as the path separator.\n */\nexport class PathPosix extends PathBase {\n  /**\n   * separator for parsing path strings\n   */\n  splitSep: '/' = '/'\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return path.startsWith('/') ? '/' : ''\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(_rootPath: string): PathBase {\n    return this.root\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathPosix(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts,\n    )\n  }\n}\n\n/**\n * Options that may be provided to the PathScurry constructor\n */\nexport interface PathScurryOpts {\n  /**\n   * perform case-insensitive path matching. Default based on platform\n   * subclass.\n   */\n  nocase?: boolean\n  /**\n   * Number of Path entries to keep in the cache of Path child references.\n   *\n   * Setting this higher than 65536 will dramatically increase the data\n   * consumption and construction time overhead of each PathScurry.\n   *\n   * Setting this value to 256 or lower will significantly reduce the data\n   * consumption and construction time overhead, but may also reduce resolve()\n   * and readdir() performance on large filesystems.\n   *\n   * Default `16384`.\n   */\n  childrenCacheSize?: number\n  /**\n   * An object that overrides the built-in functions from the fs and\n   * fs/promises modules.\n   *\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * The base class for all PathScurry classes, providing the interface for path\n * resolution and filesystem operations.\n *\n * Typically, you should *not* instantiate this class directly, but rather one\n * of the platform-specific classes, or the exported {@link PathScurry} which\n * defaults to the current platform.\n */\nexport abstract class PathScurryBase {\n  /**\n   * The root Path entry for the current working directory of this Scurry\n   */\n  root: PathBase\n  /**\n   * The string path for the root of this Scurry's current working directory\n   */\n  rootPath: string\n  /**\n   * A collection of all roots encountered, referenced by rootPath\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * The Path entry corresponding to this PathScurry's current working directory.\n   */\n  cwd: PathBase\n  #resolveCache: ResolveCache\n  #resolvePosixCache: ResolveCache\n  #children: ChildrenCache\n  /**\n   * Perform path comparisons case-insensitively.\n   *\n   * Defaults true on Darwin and Windows systems, false elsewhere.\n   */\n  nocase: boolean\n\n  /**\n   * The path separator used for parsing paths\n   *\n   * `'/'` on Posix systems, either `'/'` or `'\\\\'` on Windows\n   */\n  abstract sep: string | RegExp\n\n  #fs: FSValue\n\n  /**\n   * This class should not be instantiated directly.\n   *\n   * Use PathScurryWin32, PathScurryDarwin, PathScurryPosix, or PathScurry\n   *\n   * @internal\n   */\n  constructor(\n    cwd: URL | string = process.cwd(),\n    pathImpl: typeof win32 | typeof posix,\n    sep: string | RegExp,\n    {\n      nocase,\n      childrenCacheSize = 16 * 1024,\n      fs = defaultFS,\n    }: PathScurryOpts = {},\n  ) {\n    this.#fs = fsFromOption(fs)\n    if (cwd instanceof URL || cwd.startsWith('file://')) {\n      cwd = fileURLToPath(cwd)\n    }\n    // resolve and split root, and then add to the store.\n    // this is the only time we call path.resolve()\n    const cwdPath = pathImpl.resolve(cwd)\n    this.roots = Object.create(null)\n    this.rootPath = this.parseRootPath(cwdPath)\n    this.#resolveCache = new ResolveCache()\n    this.#resolvePosixCache = new ResolveCache()\n    this.#children = new ChildrenCache(childrenCacheSize)\n\n    const split = cwdPath.substring(this.rootPath.length).split(sep)\n    // resolve('/') leaves '', splits to [''], we don't want that.\n    if (split.length === 1 && !split[0]) {\n      split.pop()\n    }\n    /* c8 ignore start */\n    if (nocase === undefined) {\n      throw new TypeError(\n        'must provide nocase setting to PathScurryBase ctor',\n      )\n    }\n    /* c8 ignore stop */\n    this.nocase = nocase\n    this.root = this.newRoot(this.#fs)\n    this.roots[this.rootPath] = this.root\n    let prev: PathBase = this.root\n    let len = split.length - 1\n    const joinSep = pathImpl.sep\n    let abs = this.rootPath\n    let sawFirst = false\n    for (const part of split) {\n      const l = len--\n      prev = prev.child(part, {\n        relative: new Array(l).fill('..').join(joinSep),\n        relativePosix: new Array(l).fill('..').join('/'),\n        fullpath: (abs += (sawFirst ? '' : joinSep) + part),\n      })\n      sawFirst = true\n    }\n    this.cwd = prev\n  }\n\n  /**\n   * Get the depth of a provided path, string, or the cwd\n   */\n  depth(path: Path | string = this.cwd): number {\n    if (typeof path === 'string') {\n      path = this.cwd.resolve(path)\n    }\n    return path.depth()\n  }\n\n  /**\n   * Parse the root portion of a path string\n   *\n   * @internal\n   */\n  abstract parseRootPath(dir: string): string\n  /**\n   * create a new Path to use as root during construction.\n   *\n   * @internal\n   */\n  abstract newRoot(fs: FSValue): PathBase\n  /**\n   * Determine whether a given path string is absolute\n   */\n  abstract isAbsolute(p: string): boolean\n\n  /**\n   * Return the cache of child entries.  Exposed so subclasses can create\n   * child Path objects in a platform-specific way.\n   *\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolve(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolveCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpath()\n    this.#resolveCache.set(r, result)\n    return result\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string, returning\n   * the posix path.  Identical to .resolve() on posix systems, but on\n   * windows will return a forward-slash separated UNC path.\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolvePosix(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolvePosixCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpathPosix()\n    this.#resolvePosixCache.set(r, result)\n    return result\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or entry\n   */\n  relative(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relative()\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or\n   * entry, using / as the path delimiter, even on Windows.\n   */\n  relativePosix(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relativePosix()\n  }\n\n  /**\n   * Return the basename for the provided string or Path object\n   */\n  basename(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.name\n  }\n\n  /**\n   * Return the dirname for the provided string or Path object\n   */\n  dirname(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return (entry.parent || entry).fullpath()\n  }\n\n  /**\n   * Return an array of known child entries.\n   *\n   * First argument may be either a string, or a Path object.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * Unlike `fs.readdir()`, the `withFileTypes` option defaults to `true`. Set\n   * `{ withFileTypes: false }` to return strings.\n   */\n\n  readdir(): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: true }): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: false }): Promise<string[]>\n  readdir(opts: { withFileTypes: boolean }): Promise<PathBase[] | string[]>\n  readdir(entry: PathBase | string): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: true },\n  ): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: false },\n  ): Promise<string[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean },\n  ): Promise<PathBase[] | string[]>\n  async readdir(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    },\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else {\n      const p = await entry.readdir()\n      return withFileTypes ? p : p.map(e => e.name)\n    }\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readdir}\n   */\n  readdirSync(): PathBase[]\n  readdirSync(opts: { withFileTypes: true }): PathBase[]\n  readdirSync(opts: { withFileTypes: false }): string[]\n  readdirSync(opts: { withFileTypes: boolean }): PathBase[] | string[]\n  readdirSync(entry: PathBase | string): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: true },\n  ): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: false },\n  ): string[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean },\n  ): PathBase[] | string[]\n  readdirSync(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    },\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes = true } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else if (withFileTypes) {\n      return entry.readdirSync()\n    } else {\n      return entry.readdirSync().map(e => e.name)\n    }\n  }\n\n  /**\n   * Call lstat() on the string or Path object, and update all known\n   * information that can be determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(\n    entry: string | PathBase = this.cwd,\n  ): Promise<PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstat()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.lstat}\n   */\n  lstatSync(entry: string | PathBase = this.cwd): PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstatSync()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to the target of a\n   * symbolic link.\n   *\n   * If the path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  readlink(): Promise<string | undefined>\n  readlink(opt: { withFileTypes: false }): Promise<string | undefined>\n  readlink(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  readlink(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): Promise<string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): Promise<PathBase | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): Promise<string | PathBase | undefined>\n  async readlink(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.readlink()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readlink}\n   */\n  readlinkSync(): string | undefined\n  readlinkSync(opt: { withFileTypes: false }): string | undefined\n  readlinkSync(opt: { withFileTypes: true }): PathBase | undefined\n  readlinkSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): string | PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.readlinkSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  realpath(): Promise<string | undefined>\n  realpath(opt: { withFileTypes: false }): Promise<string | undefined>\n  realpath(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  realpath(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): Promise<string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): Promise<PathBase | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): Promise<string | PathBase | undefined>\n  async realpath(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.realpath()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  realpathSync(): string | undefined\n  realpathSync(opt: { withFileTypes: false }): string | undefined\n  realpathSync(opt: { withFileTypes: true }): PathBase | undefined\n  realpathSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): PathBase | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): string | PathBase | undefined\n  realpathSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.realpathSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Asynchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walk(): Promise<PathBase[]>\n  walk(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Promise<PathBase[]>\n  walk(opts: WalkOptionsWithFileTypesFalse): Promise<string[]>\n  walk(opts: WalkOptions): Promise<string[] | PathBase[]>\n  walk(entry: string | PathBase): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Promise<string[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Promise<PathBase[] | string[]>\n  async walk(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const walk = (\n      dir: PathBase,\n      cb: (er?: NodeJS.ErrnoException) => void,\n    ) => {\n      dirs.add(dir)\n      dir.readdirCB((er, entries) => {\n        /* c8 ignore start */\n        if (er) {\n          return cb(er)\n        }\n        /* c8 ignore stop */\n        let len = entries.length\n        if (!len) return cb()\n        const next = () => {\n          if (--len === 0) {\n            cb()\n          }\n        }\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            results.push(withFileTypes ? e : e.fullpath())\n          }\n          if (follow && e.isSymbolicLink()) {\n            e.realpath()\n              .then(r => (r?.isUnknown() ? r.lstat() : r))\n              .then(r =>\n                r?.shouldWalk(dirs, walkFilter) ? walk(r, next) : next(),\n              )\n          } else {\n            if (e.shouldWalk(dirs, walkFilter)) {\n              walk(e, next)\n            } else {\n              next()\n            }\n          }\n        }\n      }, true) // zalgooooooo\n    }\n\n    const start = entry\n    return new Promise<PathBase[] | string[]>((res, rej) => {\n      walk(start, er => {\n        /* c8 ignore start */\n        if (er) return rej(er)\n        /* c8 ignore stop */\n        res(results as PathBase[] | string[])\n      })\n    })\n  }\n\n  /**\n   * Synchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walkSync(): PathBase[]\n  walkSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): PathBase[]\n  walkSync(opts: WalkOptionsWithFileTypesFalse): string[]\n  walkSync(opts: WalkOptions): string[] | PathBase[]\n  walkSync(entry: string | PathBase): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): string[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): PathBase[] | string[]\n  walkSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          results.push(withFileTypes ? e : e.fullpath())\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n    return results as string[] | PathBase[]\n  }\n\n  /**\n   * Support for `for await`\n   *\n   * Alias for {@link PathScurryBase.iterate}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n\n  /**\n   * Async generator form of {@link PathScurryBase.walk}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking, especially if most/all of the directory tree has been previously\n   * walked.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  iterate(): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesFalse,\n  ): AsyncGenerator<string, void, void>\n  iterate(opts: WalkOptions): AsyncGenerator<string | PathBase, void, void>\n  iterate(entry: string | PathBase): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): AsyncGenerator<string, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): AsyncGenerator<PathBase | string, void, void>\n  iterate(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    options: WalkOptions = {},\n  ): AsyncGenerator<PathBase | string, void, void> {\n    // iterating async over the stream is significantly more performant,\n    // especially in the warm-cache scenario, because it buffers up directory\n    // entries in the background instead of waiting for a yield for each one.\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      options = entry\n      entry = this.cwd\n    }\n    return this.stream(entry, options)[Symbol.asyncIterator]()\n  }\n\n  /**\n   * Iterating over a PathScurry performs a synchronous walk.\n   *\n   * Alias for {@link PathScurryBase.iterateSync}\n   */\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  iterateSync(): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Generator<string, void, void>\n  iterateSync(opts: WalkOptions): Generator<string | PathBase, void, void>\n  iterateSync(entry: string | PathBase): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Generator<string, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Generator<PathBase | string, void, void>\n  *iterateSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Generator<PathBase | string, void, void> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    if (!filter || filter(entry)) {\n      yield withFileTypes ? entry : entry.fullpath()\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          yield withFileTypes ? e : e.fullpath()\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n  }\n\n  /**\n   * Stream form of {@link PathScurryBase.walk}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   */\n  stream(): Minipass<PathBase>\n  stream(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Minipass<PathBase>\n  stream(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  stream(opts: WalkOptions): Minipass<string | PathBase>\n  stream(entry: string | PathBase): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Minipass<string>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Minipass<string> | Minipass<PathBase>\n  stream(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n\n        processing++\n        dirs.add(dir)\n\n        const onReaddir = (\n          er: null | NodeJS.ErrnoException,\n          entries: PathBase[],\n          didRealpaths: boolean = false,\n        ) => {\n          /* c8 ignore start */\n          if (er) return results.emit('error', er)\n          /* c8 ignore stop */\n          if (follow && !didRealpaths) {\n            const promises: Promise<PathBase | undefined>[] = []\n            for (const e of entries) {\n              if (e.isSymbolicLink()) {\n                promises.push(\n                  e\n                    .realpath()\n                    .then((r: PathBase | undefined) =>\n                      r?.isUnknown() ? r.lstat() : r,\n                    ),\n                )\n              }\n            }\n            if (promises.length) {\n              Promise.all(promises).then(() =>\n                onReaddir(null, entries, true),\n              )\n              return\n            }\n          }\n\n          for (const e of entries) {\n            if (e && (!filter || filter(e))) {\n              if (!results.write(withFileTypes ? e : e.fullpath())) {\n                paused = true\n              }\n            }\n          }\n\n          processing--\n          for (const e of entries) {\n            const r = e.realpathCached() || e\n            if (r.shouldWalk(dirs, walkFilter)) {\n              queue.push(r)\n            }\n          }\n          if (paused && !results.flowing) {\n            results.once('drain', process)\n          } else if (!sync) {\n            process()\n          }\n        }\n\n        // zalgo containment\n        let sync = true\n        dir.readdirCB(onReaddir, true)\n        sync = false\n      }\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  /**\n   * Synchronous form of {@link PathScurryBase.stream}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   *\n   * Will complete the walk in a single tick if the stream is consumed fully.\n   * Otherwise, will pause as needed for stream backpressure.\n   */\n  streamSync(): Minipass<PathBase>\n  streamSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Minipass<PathBase>\n  streamSync(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  streamSync(opts: WalkOptions): Minipass<string | PathBase>\n  streamSync(entry: string | PathBase): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Minipass<string>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Minipass<string> | Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    const dirs = new Set<PathBase>()\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n        processing++\n        dirs.add(dir)\n\n        const entries = dir.readdirSync()\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            if (!results.write(withFileTypes ? e : e.fullpath())) {\n              paused = true\n            }\n          }\n        }\n        processing--\n        for (const e of entries) {\n          let r: PathBase | undefined = e\n          if (e.isSymbolicLink()) {\n            if (!(follow && (r = e.realpathSync()))) continue\n            if (r.isUnknown()) r.lstatSync()\n          }\n          if (r.shouldWalk(dirs, walkFilter)) {\n            queue.push(r)\n          }\n        }\n      }\n      if (paused && !results.flowing) results.once('drain', process)\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  chdir(path: string | Path = this.cwd) {\n    const oldCwd = this.cwd\n    this.cwd = typeof path === 'string' ? this.cwd.resolve(path) : path\n    this.cwd[setAsCwd](oldCwd)\n  }\n}\n\n/**\n * Options provided to all walk methods.\n */\nexport interface WalkOptions {\n  /**\n   * Return results as {@link PathBase} objects rather than strings.\n   * When set to false, results are fully resolved paths, as returned by\n   * {@link PathBase.fullpath}.\n   * @default true\n   */\n  withFileTypes?: boolean\n\n  /**\n   *  Attempt to read directory entries from symbolic links. Otherwise, only\n   *  actual directories are traversed. Regardless of this setting, a given\n   *  target path will only ever be walked once, meaning that a symbolic link\n   *  to a previously traversed directory will never be followed.\n   *\n   *  Setting this imposes a slight performance penalty, because `readlink`\n   *  must be called on all symbolic links encountered, in order to avoid\n   *  infinite cycles.\n   * @default false\n   */\n  follow?: boolean\n\n  /**\n   * Only return entries where the provided function returns true.\n   *\n   * This will not prevent directories from being traversed, even if they do\n   * not pass the filter, though it will prevent directories themselves from\n   * being included in the result set.  See {@link walkFilter}\n   *\n   * Asynchronous functions are not supported here.\n   *\n   * By default, if no filter is provided, all entries and traversed\n   * directories are included.\n   */\n  filter?: (entry: PathBase) => boolean\n\n  /**\n   * Only traverse directories (and in the case of {@link follow} being set to\n   * true, symbolic links to directories) if the provided function returns\n   * true.\n   *\n   * This will not prevent directories from being included in the result set,\n   * even if they do not pass the supplied filter function.  See {@link filter}\n   * to do that.\n   *\n   * Asynchronous functions are not supported here.\n   */\n  walkFilter?: (entry: PathBase) => boolean\n}\n\nexport type WalkOptionsWithFileTypesUnset = WalkOptions & {\n  withFileTypes?: undefined\n}\nexport type WalkOptionsWithFileTypesTrue = WalkOptions & {\n  withFileTypes: true\n}\nexport type WalkOptionsWithFileTypesFalse = WalkOptions & {\n  withFileTypes: false\n}\n\n/**\n * Windows implementation of {@link PathScurryBase}\n *\n * Defaults to case insensitve, uses `'\\\\'` to generate path strings.  Uses\n * {@link PathWin32} for Path objects.\n */\nexport class PathScurryWin32 extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '\\\\' = '\\\\'\n\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = true } = opts\n    super(cwd, win32, '\\\\', { ...opts, nocase })\n    this.nocase = nocase\n    for (let p: PathBase | undefined = this.cwd; p; p = p.parent) {\n      p.nocase = this.nocase\n    }\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(dir: string): string {\n    // if the path starts with a single separator, it's not a UNC, and we'll\n    // just get separator as the root, and driveFromUNC will return \\\n    // In that case, mount \\ on the root from the cwd.\n    return win32.parse(dir).root.toUpperCase()\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathWin32(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs },\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return (\n      p.startsWith('/') || p.startsWith('\\\\') || /^[a-z]:(\\/|\\\\)/i.test(p)\n    )\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for all posix systems other than Darwin.\n *\n * Defaults to case-sensitive matching, uses `'/'` to generate path strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryPosix extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = false } = opts\n    super(cwd, posix, '/', { ...opts, nocase })\n    this.nocase = nocase\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(_dir: string): string {\n    return '/'\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathPosix(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs },\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return p.startsWith('/')\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for Darwin (macOS) systems.\n *\n * Defaults to case-insensitive matching, uses `'/'` for generating path\n * strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryDarwin extends PathScurryPosix {\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = true } = opts\n    super(cwd, { ...opts, nocase })\n  }\n}\n\n/**\n * Default {@link PathBase} implementation for the current platform.\n *\n * {@link PathWin32} on Windows systems, {@link PathPosix} on all others.\n */\nexport const Path = process.platform === 'win32' ? PathWin32 : PathPosix\nexport type Path = PathBase | InstanceType<typeof Path>\n\n/**\n * Default {@link PathScurryBase} implementation for the current platform.\n *\n * {@link PathScurryWin32} on Windows systems, {@link PathScurryDarwin} on\n * Darwin (macOS) systems, {@link PathScurryPosix} on all others.\n */\nexport const PathScurry:\n  | typeof PathScurryWin32\n  | typeof PathScurryDarwin\n  | typeof PathScurryPosix =\n  process.platform === 'win32' ? PathScurryWin32\n  : process.platform === 'darwin' ? PathScurryDarwin\n  : PathScurryPosix\nexport type PathScurry = PathScurryBase | InstanceType<typeof PathScurry>\n", "const proc =\n  typeof process === 'object' && process\n    ? process\n    : {\n        stdout: null,\n        stderr: null,\n      }\nimport { EventEmitter } from 'node:events'\nimport Stream from 'node:stream'\nimport { StringDecoder } from 'node:string_decoder'\n\n/**\n * Same as StringDecoder, but exposing the `lastNeed` flag on the type\n */\ntype SD = StringDecoder & { lastNeed: boolean }\n\nexport type { SD, Pipe, PipeProxyErrors }\n\n/**\n * Return true if the argument is a Minipass stream, Node stream, or something\n * else that Minipass can interact with.\n */\nexport const isStream = (\n  s: any\n): s is Minipass.Readable | Minipass.Writable =>\n  !!s &&\n  typeof s === 'object' &&\n  (s instanceof Minipass ||\n    s instanceof Stream ||\n    isReadable(s) ||\n    isWritable(s))\n\n/**\n * Return true if the argument is a valid {@link Minipass.Readable}\n */\nexport const isReadable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Readable).pipe === 'function' &&\n  // node core Writable streams have a pipe() method, but it throws\n  (s as Minipass.Readable).pipe !== Stream.Writable.prototype.pipe\n\n/**\n * Return true if the argument is a valid {@link Minipass.Writable}\n */\nexport const isWritable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Writable).write === 'function' &&\n  typeof (s as Minipass.Writable).end === 'function'\n\nconst EOF = Symbol('EOF')\nconst MAYBE_EMIT_END = Symbol('maybeEmitEnd')\nconst EMITTED_END = Symbol('emittedEnd')\nconst EMITTING_END = Symbol('emittingEnd')\nconst EMITTED_ERROR = Symbol('emittedError')\nconst CLOSED = Symbol('closed')\nconst READ = Symbol('read')\nconst FLUSH = Symbol('flush')\nconst FLUSHCHUNK = Symbol('flushChunk')\nconst ENCODING = Symbol('encoding')\nconst DECODER = Symbol('decoder')\nconst FLOWING = Symbol('flowing')\nconst PAUSED = Symbol('paused')\nconst RESUME = Symbol('resume')\nconst BUFFER = Symbol('buffer')\nconst PIPES = Symbol('pipes')\nconst BUFFERLENGTH = Symbol('bufferLength')\nconst BUFFERPUSH = Symbol('bufferPush')\nconst BUFFERSHIFT = Symbol('bufferShift')\nconst OBJECTMODE = Symbol('objectMode')\n// internal event when stream is destroyed\nconst DESTROYED = Symbol('destroyed')\n// internal event when stream has an error\nconst ERROR = Symbol('error')\nconst EMITDATA = Symbol('emitData')\nconst EMITEND = Symbol('emitEnd')\nconst EMITEND2 = Symbol('emitEnd2')\nconst ASYNC = Symbol('async')\nconst ABORT = Symbol('abort')\nconst ABORTED = Symbol('aborted')\nconst SIGNAL = Symbol('signal')\nconst DATALISTENERS = Symbol('dataListeners')\nconst DISCARDED = Symbol('discarded')\n\nconst defer = (fn: (...a: any[]) => any) => Promise.resolve().then(fn)\nconst nodefer = (fn: (...a: any[]) => any) => fn()\n\n// events that mean 'the stream is over'\n// these are treated specially, and re-emitted\n// if they are listened for after emitting.\ntype EndishEvent = 'end' | 'finish' | 'prefinish'\nconst isEndish = (ev: any): ev is EndishEvent =>\n  ev === 'end' || ev === 'finish' || ev === 'prefinish'\n\nconst isArrayBufferLike = (b: any): b is ArrayBufferLike =>\n  b instanceof ArrayBuffer ||\n  (!!b &&\n    typeof b === 'object' &&\n    b.constructor &&\n    b.constructor.name === 'ArrayBuffer' &&\n    b.byteLength >= 0)\n\nconst isArrayBufferView = (b: any): b is ArrayBufferView =>\n  !Buffer.isBuffer(b) && ArrayBuffer.isView(b)\n\n/**\n * Options that may be passed to stream.pipe()\n */\nexport interface PipeOptions {\n  /**\n   * end the destination stream when the source stream ends\n   */\n  end?: boolean\n  /**\n   * proxy errors from the source stream to the destination stream\n   */\n  proxyErrors?: boolean\n}\n\n/**\n * Internal class representing a pipe to a destination stream.\n *\n * @internal\n */\nclass Pipe<T extends unknown> {\n  src: Minipass<T>\n  dest: Minipass<any, T>\n  opts: PipeOptions\n  ondrain: () => any\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    this.src = src\n    this.dest = dest as Minipass<any, T>\n    this.opts = opts\n    this.ondrain = () => src[RESUME]()\n    this.dest.on('drain', this.ondrain)\n  }\n  unpipe() {\n    this.dest.removeListener('drain', this.ondrain)\n  }\n  // only here for the prototype\n  /* c8 ignore start */\n  proxyErrors(_er: any) {}\n  /* c8 ignore stop */\n  end() {\n    this.unpipe()\n    if (this.opts.end) this.dest.end()\n  }\n}\n\n/**\n * Internal class representing a pipe to a destination stream where\n * errors are proxied.\n *\n * @internal\n */\nclass PipeProxyErrors<T> extends Pipe<T> {\n  unpipe() {\n    this.src.removeListener('error', this.proxyErrors)\n    super.unpipe()\n  }\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    super(src, dest, opts)\n    this.proxyErrors = er => dest.emit('error', er)\n    src.on('error', this.proxyErrors)\n  }\n}\n\nexport namespace Minipass {\n  /**\n   * Encoding used to create a stream that outputs strings rather than\n   * Buffer objects.\n   */\n  export type Encoding = BufferEncoding | 'buffer' | null\n\n  /**\n   * Any stream that Minipass can pipe into\n   */\n  export type Writable =\n    | Minipass<any, any, any>\n    | NodeJS.WriteStream\n    | (NodeJS.WriteStream & { fd: number })\n    | (EventEmitter & {\n        end(): any\n        write(chunk: any, ...args: any[]): any\n      })\n\n  /**\n   * Any stream that can be read from\n   */\n  export type Readable =\n    | Minipass<any, any, any>\n    | NodeJS.ReadStream\n    | (NodeJS.ReadStream & { fd: number })\n    | (EventEmitter & {\n        pause(): any\n        resume(): any\n        pipe(...destArgs: any[]): any\n      })\n\n  /**\n   * Utility type that can be iterated sync or async\n   */\n  export type DualIterable<T> = Iterable<T> & AsyncIterable<T>\n\n  type EventArguments = Record<string | symbol, unknown[]>\n\n  /**\n   * The listing of events that a Minipass class can emit.\n   * Extend this when extending the Minipass class, and pass as\n   * the third template argument.  The key is the name of the event,\n   * and the value is the argument list.\n   *\n   * Any undeclared events will still be allowed, but the handler will get\n   * arguments as `unknown[]`.\n   */\n  export interface Events<RType extends any = Buffer>\n    extends EventArguments {\n    readable: []\n    data: [chunk: RType]\n    error: [er: unknown]\n    abort: [reason: unknown]\n    drain: []\n    resume: []\n    end: []\n    finish: []\n    prefinish: []\n    close: []\n    [DESTROYED]: [er?: unknown]\n    [ERROR]: [er: unknown]\n  }\n\n  /**\n   * String or buffer-like data that can be joined and sliced\n   */\n  export type ContiguousData =\n    | Buffer\n    | ArrayBufferLike\n    | ArrayBufferView\n    | string\n  export type BufferOrString = Buffer | string\n\n  /**\n   * Options passed to the Minipass constructor.\n   */\n  export type SharedOptions = {\n    /**\n     * Defer all data emission and other events until the end of the\n     * current tick, similar to Node core streams\n     */\n    async?: boolean\n    /**\n     * A signal which will abort the stream\n     */\n    signal?: AbortSignal\n    /**\n     * Output string encoding. Set to `null` or `'buffer'` (or omit) to\n     * emit Buffer objects rather than strings.\n     *\n     * Conflicts with `objectMode`\n     */\n    encoding?: BufferEncoding | null | 'buffer'\n    /**\n     * Output data exactly as it was written, supporting non-buffer/string\n     * data (such as arbitrary objects, falsey values, etc.)\n     *\n     * Conflicts with `encoding`\n     */\n    objectMode?: boolean\n  }\n\n  /**\n   * Options for a string encoded output\n   */\n  export type EncodingOptions = SharedOptions & {\n    encoding: BufferEncoding\n    objectMode?: false\n  }\n\n  /**\n   * Options for contiguous data buffer output\n   */\n  export type BufferOptions = SharedOptions & {\n    encoding?: null | 'buffer'\n    objectMode?: false\n  }\n\n  /**\n   * Options for objectMode arbitrary output\n   */\n  export type ObjectModeOptions = SharedOptions & {\n    objectMode: true\n    encoding?: null\n  }\n\n  /**\n   * Utility type to determine allowed options based on read type\n   */\n  export type Options<T> =\n    | ObjectModeOptions\n    | (T extends string\n        ? EncodingOptions\n        : T extends Buffer\n        ? BufferOptions\n        : SharedOptions)\n}\n\nconst isObjectModeOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.ObjectModeOptions => !!o.objectMode\n\nconst isEncodingOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.EncodingOptions =>\n  !o.objectMode && !!o.encoding && o.encoding !== 'buffer'\n\n/**\n * Main export, the Minipass class\n *\n * `RType` is the type of data emitted, defaults to Buffer\n *\n * `WType` is the type of data to be written, if RType is buffer or string,\n * then any {@link Minipass.ContiguousData} is allowed.\n *\n * `Events` is the set of event handler signatures that this object\n * will emit, see {@link Minipass.Events}\n */\nexport class Minipass<\n    RType extends unknown = Buffer,\n    WType extends unknown = RType extends Minipass.BufferOrString\n      ? Minipass.ContiguousData\n      : RType,\n    Events extends Minipass.Events<RType> = Minipass.Events<RType>\n  >\n  extends EventEmitter\n  implements Minipass.DualIterable<RType>\n{\n  [FLOWING]: boolean = false;\n  [PAUSED]: boolean = false;\n  [PIPES]: Pipe<RType>[] = [];\n  [BUFFER]: RType[] = [];\n  [OBJECTMODE]: boolean;\n  [ENCODING]: BufferEncoding | null;\n  [ASYNC]: boolean;\n  [DECODER]: SD | null;\n  [EOF]: boolean = false;\n  [EMITTED_END]: boolean = false;\n  [EMITTING_END]: boolean = false;\n  [CLOSED]: boolean = false;\n  [EMITTED_ERROR]: unknown = null;\n  [BUFFERLENGTH]: number = 0;\n  [DESTROYED]: boolean = false;\n  [SIGNAL]?: AbortSignal;\n  [ABORTED]: boolean = false;\n  [DATALISTENERS]: number = 0;\n  [DISCARDED]: boolean = false\n\n  /**\n   * true if the stream can be written\n   */\n  writable: boolean = true\n  /**\n   * true if the stream can be read\n   */\n  readable: boolean = true\n\n  /**\n   * If `RType` is Buffer, then options do not need to be provided.\n   * Otherwise, an options object must be provided to specify either\n   * {@link Minipass.SharedOptions.objectMode} or\n   * {@link Minipass.SharedOptions.encoding}, as appropriate.\n   */\n  constructor(\n    ...args:\n      | [Minipass.ObjectModeOptions]\n      | (RType extends Buffer\n          ? [] | [Minipass.Options<RType>]\n          : [Minipass.Options<RType>])\n  ) {\n    const options: Minipass.Options<RType> = (args[0] ||\n      {}) as Minipass.Options<RType>\n    super()\n    if (options.objectMode && typeof options.encoding === 'string') {\n      throw new TypeError(\n        'Encoding and objectMode may not be used together'\n      )\n    }\n    if (isObjectModeOptions(options)) {\n      this[OBJECTMODE] = true\n      this[ENCODING] = null\n    } else if (isEncodingOptions(options)) {\n      this[ENCODING] = options.encoding\n      this[OBJECTMODE] = false\n    } else {\n      this[OBJECTMODE] = false\n      this[ENCODING] = null\n    }\n    this[ASYNC] = !!options.async\n    this[DECODER] = this[ENCODING]\n      ? (new StringDecoder(this[ENCODING]) as SD)\n      : null\n\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposeBuffer === true) {\n      Object.defineProperty(this, 'buffer', { get: () => this[BUFFER] })\n    }\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposePipes === true) {\n      Object.defineProperty(this, 'pipes', { get: () => this[PIPES] })\n    }\n\n    const { signal } = options\n    if (signal) {\n      this[SIGNAL] = signal\n      if (signal.aborted) {\n        this[ABORT]()\n      } else {\n        signal.addEventListener('abort', () => this[ABORT]())\n      }\n    }\n  }\n\n  /**\n   * The amount of data stored in the buffer waiting to be read.\n   *\n   * For Buffer strings, this will be the total byte length.\n   * For string encoding streams, this will be the string character length,\n   * according to JavaScript's `string.length` logic.\n   * For objectMode streams, this is a count of the items waiting to be\n   * emitted.\n   */\n  get bufferLength() {\n    return this[BUFFERLENGTH]\n  }\n\n  /**\n   * The `BufferEncoding` currently in use, or `null`\n   */\n  get encoding() {\n    return this[ENCODING]\n  }\n\n  /**\n   * @deprecated - This is a read only property\n   */\n  set encoding(_enc) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * @deprecated - Encoding may only be set at instantiation time\n   */\n  setEncoding(_enc: Minipass.Encoding) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * True if this is an objectMode stream\n   */\n  get objectMode() {\n    return this[OBJECTMODE]\n  }\n\n  /**\n   * @deprecated - This is a read-only property\n   */\n  set objectMode(_om) {\n    throw new Error('objectMode must be set at instantiation time')\n  }\n\n  /**\n   * true if this is an async stream\n   */\n  get ['async'](): boolean {\n    return this[ASYNC]\n  }\n  /**\n   * Set to true to make this stream async.\n   *\n   * Once set, it cannot be unset, as this would potentially cause incorrect\n   * behavior.  Ie, a sync stream can be made async, but an async stream\n   * cannot be safely made sync.\n   */\n  set ['async'](a: boolean) {\n    this[ASYNC] = this[ASYNC] || !!a\n  }\n\n  // drop everything and get out of the flow completely\n  [ABORT]() {\n    this[ABORTED] = true\n    this.emit('abort', this[SIGNAL]?.reason)\n    this.destroy(this[SIGNAL]?.reason)\n  }\n\n  /**\n   * True if the stream has been aborted.\n   */\n  get aborted() {\n    return this[ABORTED]\n  }\n  /**\n   * No-op setter. Stream aborted status is set via the AbortSignal provided\n   * in the constructor options.\n   */\n  set aborted(_) {}\n\n  /**\n   * Write data into the stream\n   *\n   * If the chunk written is a string, and encoding is not specified, then\n   * `utf8` will be assumed. If the stream encoding matches the encoding of\n   * a written string, and the state of the string decoder allows it, then\n   * the string will be passed through to either the output or the internal\n   * buffer without any processing. Otherwise, it will be turned into a\n   * Buffer object for processing into the desired encoding.\n   *\n   * If provided, `cb` function is called immediately before return for\n   * sync streams, or on next tick for async streams, because for this\n   * base class, a chunk is considered \"processed\" once it is accepted\n   * and either emitted or buffered. That is, the callback does not indicate\n   * that the chunk has been eventually emitted, though of course child\n   * classes can override this function to do whatever processing is required\n   * and call `super.write(...)` only once processing is completed.\n   */\n  write(chunk: WType, cb?: () => void): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding,\n    cb?: () => void\n  ): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ): boolean {\n    if (this[ABORTED]) return false\n    if (this[EOF]) throw new Error('write after end')\n\n    if (this[DESTROYED]) {\n      this.emit(\n        'error',\n        Object.assign(\n          new Error('Cannot call write after a stream was destroyed'),\n          { code: 'ERR_STREAM_DESTROYED' }\n        )\n      )\n      return true\n    }\n\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n\n    if (!encoding) encoding = 'utf8'\n\n    const fn = this[ASYNC] ? defer : nodefer\n\n    // convert array buffers and typed array views into buffers\n    // at some point in the future, we may want to do the opposite!\n    // leave strings and buffers as-is\n    // anything is only allowed if in object mode, so throw\n    if (!this[OBJECTMODE] && !Buffer.isBuffer(chunk)) {\n      if (isArrayBufferView(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(\n          chunk.buffer,\n          chunk.byteOffset,\n          chunk.byteLength\n        )\n      } else if (isArrayBufferLike(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(chunk)\n      } else if (typeof chunk !== 'string') {\n        throw new Error(\n          'Non-contiguous data written to non-objectMode stream'\n        )\n      }\n    }\n\n    // handle object mode up front, since it's simpler\n    // this yields better performance, fewer checks later.\n    if (this[OBJECTMODE]) {\n      // maybe impossible?\n      /* c8 ignore start */\n      if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n      /* c8 ignore stop */\n\n      if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n      else this[BUFFERPUSH](chunk as unknown as RType)\n\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n      if (cb) fn(cb)\n\n      return this[FLOWING]\n    }\n\n    // at this point the chunk is a buffer or string\n    // don't buffer it up or send it to the decoder\n    if (!(chunk as Minipass.BufferOrString).length) {\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n      if (cb) fn(cb)\n      return this[FLOWING]\n    }\n\n    // fast-path writing strings of same encoding to a stream with\n    // an empty buffer, skipping the buffer/decoder dance\n    if (\n      typeof chunk === 'string' &&\n      // unless it is a string already ready for us to use\n      !(encoding === this[ENCODING] && !this[DECODER]?.lastNeed)\n    ) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = Buffer.from(chunk, encoding)\n    }\n\n    if (Buffer.isBuffer(chunk) && this[ENCODING]) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = this[DECODER].write(chunk)\n    }\n\n    // Note: flushing CAN potentially switch us into not-flowing mode\n    if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n\n    if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n    else this[BUFFERPUSH](chunk as unknown as RType)\n\n    if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n    if (cb) fn(cb)\n\n    return this[FLOWING]\n  }\n\n  /**\n   * Low-level explicit read method.\n   *\n   * In objectMode, the argument is ignored, and one item is returned if\n   * available.\n   *\n   * `n` is the number of bytes (or in the case of encoding streams,\n   * characters) to consume. If `n` is not provided, then the entire buffer\n   * is returned, or `null` is returned if no data is available.\n   *\n   * If `n` is greater that the amount of data in the internal buffer,\n   * then `null` is returned.\n   */\n  read(n?: number | null): RType | null {\n    if (this[DESTROYED]) return null\n    this[DISCARDED] = false\n\n    if (\n      this[BUFFERLENGTH] === 0 ||\n      n === 0 ||\n      (n && n > this[BUFFERLENGTH])\n    ) {\n      this[MAYBE_EMIT_END]()\n      return null\n    }\n\n    if (this[OBJECTMODE]) n = null\n\n    if (this[BUFFER].length > 1 && !this[OBJECTMODE]) {\n      // not object mode, so if we have an encoding, then RType is string\n      // otherwise, must be Buffer\n      this[BUFFER] = [\n        (this[ENCODING]\n          ? this[BUFFER].join('')\n          : Buffer.concat(\n              this[BUFFER] as Buffer[],\n              this[BUFFERLENGTH]\n            )) as RType,\n      ]\n    }\n\n    const ret = this[READ](n || null, this[BUFFER][0] as RType)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [READ](n: number | null, chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERSHIFT]()\n    else {\n      const c = chunk as Minipass.BufferOrString\n      if (n === c.length || n === null) this[BUFFERSHIFT]()\n      else if (typeof c === 'string') {\n        this[BUFFER][0] = c.slice(n) as RType\n        chunk = c.slice(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      } else {\n        this[BUFFER][0] = c.subarray(n) as RType\n        chunk = c.subarray(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      }\n    }\n\n    this.emit('data', chunk)\n\n    if (!this[BUFFER].length && !this[EOF]) this.emit('drain')\n\n    return chunk\n  }\n\n  /**\n   * End the stream, optionally providing a final write.\n   *\n   * See {@link Minipass#write} for argument descriptions\n   */\n  end(cb?: () => void): this\n  end(chunk: WType, cb?: () => void): this\n  end(chunk: WType, encoding?: Minipass.Encoding, cb?: () => void): this\n  end(\n    chunk?: WType | (() => void),\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ): this {\n    if (typeof chunk === 'function') {\n      cb = chunk as () => void\n      chunk = undefined\n    }\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n    if (chunk !== undefined) this.write(chunk, encoding)\n    if (cb) this.once('end', cb)\n    this[EOF] = true\n    this.writable = false\n\n    // if we haven't written anything, then go ahead and emit,\n    // even if we're not reading.\n    // we'll re-emit if a new 'end' listener is added anyway.\n    // This makes MP more suitable to write-only use cases.\n    if (this[FLOWING] || !this[PAUSED]) this[MAYBE_EMIT_END]()\n    return this\n  }\n\n  // don't let the internal resume be overwritten\n  [RESUME]() {\n    if (this[DESTROYED]) return\n\n    if (!this[DATALISTENERS] && !this[PIPES].length) {\n      this[DISCARDED] = true\n    }\n    this[PAUSED] = false\n    this[FLOWING] = true\n    this.emit('resume')\n    if (this[BUFFER].length) this[FLUSH]()\n    else if (this[EOF]) this[MAYBE_EMIT_END]()\n    else this.emit('drain')\n  }\n\n  /**\n   * Resume the stream if it is currently in a paused state\n   *\n   * If called when there are no pipe destinations or `data` event listeners,\n   * this will place the stream in a \"discarded\" state, where all data will\n   * be thrown away. The discarded state is removed if a pipe destination or\n   * data handler is added, if pause() is called, or if any synchronous or\n   * asynchronous iteration is started.\n   */\n  resume() {\n    return this[RESUME]()\n  }\n\n  /**\n   * Pause the stream\n   */\n  pause() {\n    this[FLOWING] = false\n    this[PAUSED] = true\n    this[DISCARDED] = false\n  }\n\n  /**\n   * true if the stream has been forcibly destroyed\n   */\n  get destroyed() {\n    return this[DESTROYED]\n  }\n\n  /**\n   * true if the stream is currently in a flowing state, meaning that\n   * any writes will be immediately emitted.\n   */\n  get flowing() {\n    return this[FLOWING]\n  }\n\n  /**\n   * true if the stream is currently in a paused state\n   */\n  get paused() {\n    return this[PAUSED]\n  }\n\n  [BUFFERPUSH](chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] += 1\n    else this[BUFFERLENGTH] += (chunk as Minipass.BufferOrString).length\n    this[BUFFER].push(chunk)\n  }\n\n  [BUFFERSHIFT](): RType {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] -= 1\n    else\n      this[BUFFERLENGTH] -= (\n        this[BUFFER][0] as Minipass.BufferOrString\n      ).length\n    return this[BUFFER].shift() as RType\n  }\n\n  [FLUSH](noDrain: boolean = false) {\n    do {} while (\n      this[FLUSHCHUNK](this[BUFFERSHIFT]()) &&\n      this[BUFFER].length\n    )\n\n    if (!noDrain && !this[BUFFER].length && !this[EOF]) this.emit('drain')\n  }\n\n  [FLUSHCHUNK](chunk: RType) {\n    this.emit('data', chunk)\n    return this[FLOWING]\n  }\n\n  /**\n   * Pipe all data emitted by this stream into the destination provided.\n   *\n   * Triggers the flow of data.\n   */\n  pipe<W extends Minipass.Writable>(dest: W, opts?: PipeOptions): W {\n    if (this[DESTROYED]) return dest\n    this[DISCARDED] = false\n\n    const ended = this[EMITTED_END]\n    opts = opts || {}\n    if (dest === proc.stdout || dest === proc.stderr) opts.end = false\n    else opts.end = opts.end !== false\n    opts.proxyErrors = !!opts.proxyErrors\n\n    // piping an ended stream ends immediately\n    if (ended) {\n      if (opts.end) dest.end()\n    } else {\n      // \"as\" here just ignores the WType, which pipes don't care about,\n      // since they're only consuming from us, and writing to the dest\n      this[PIPES].push(\n        !opts.proxyErrors\n          ? new Pipe<RType>(this as Minipass<RType>, dest, opts)\n          : new PipeProxyErrors<RType>(this as Minipass<RType>, dest, opts)\n      )\n      if (this[ASYNC]) defer(() => this[RESUME]())\n      else this[RESUME]()\n    }\n\n    return dest\n  }\n\n  /**\n   * Fully unhook a piped destination stream.\n   *\n   * If the destination stream was the only consumer of this stream (ie,\n   * there are no other piped destinations or `'data'` event listeners)\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  unpipe<W extends Minipass.Writable>(dest: W) {\n    const p = this[PIPES].find(p => p.dest === dest)\n    if (p) {\n      if (this[PIPES].length === 1) {\n        if (this[FLOWING] && this[DATALISTENERS] === 0) {\n          this[FLOWING] = false\n        }\n        this[PIPES] = []\n      } else this[PIPES].splice(this[PIPES].indexOf(p), 1)\n      p.unpipe()\n    }\n  }\n\n  /**\n   * Alias for {@link Minipass#on}\n   */\n  addListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    return this.on(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.on`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * - Adding a 'data' event handler will trigger the flow of data\n   *\n   * - Adding a 'readable' event handler when there is data waiting to be read\n   *   will cause 'readable' to be emitted immediately.\n   *\n   * - Adding an 'endish' event handler ('end', 'finish', etc.) which has\n   *   already passed will cause the event to be emitted immediately and all\n   *   handlers removed.\n   *\n   * - Adding an 'error' event handler after an error has been emitted will\n   *   cause the event to be re-emitted immediately with the error previously\n   *   raised.\n   */\n  on<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    const ret = super.on(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    if (ev === 'data') {\n      this[DISCARDED] = false\n      this[DATALISTENERS]++\n      if (!this[PIPES].length && !this[FLOWING]) {\n        this[RESUME]()\n      }\n    } else if (ev === 'readable' && this[BUFFERLENGTH] !== 0) {\n      super.emit('readable')\n    } else if (isEndish(ev) && this[EMITTED_END]) {\n      super.emit(ev)\n      this.removeAllListeners(ev)\n    } else if (ev === 'error' && this[EMITTED_ERROR]) {\n      const h = handler as (...a: Events['error']) => any\n      if (this[ASYNC]) defer(() => h.call(this, this[EMITTED_ERROR]))\n      else h.call(this, this[EMITTED_ERROR])\n    }\n    return ret\n  }\n\n  /**\n   * Alias for {@link Minipass#off}\n   */\n  removeListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    return this.off(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.off`\n   *\n   * If a 'data' event handler is removed, and it was the last consumer\n   * (ie, there are no pipe destinations or other 'data' event listeners),\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  off<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    const ret = super.off(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    // if we previously had listeners, and now we don't, and we don't\n    // have any pipes, then stop the flow, unless it's been explicitly\n    // put in a discarded flowing state via stream.resume().\n    if (ev === 'data') {\n      this[DATALISTENERS] = this.listeners('data').length\n      if (\n        this[DATALISTENERS] === 0 &&\n        !this[DISCARDED] &&\n        !this[PIPES].length\n      ) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.removeAllListeners`\n   *\n   * If all 'data' event handlers are removed, and they were the last consumer\n   * (ie, there are no pipe destinations), then the flow of data will stop\n   * until there is another consumer or {@link Minipass#resume} is explicitly\n   * called.\n   */\n  removeAllListeners<Event extends keyof Events>(ev?: Event) {\n    const ret = super.removeAllListeners(ev as string | symbol | undefined)\n    if (ev === 'data' || ev === undefined) {\n      this[DATALISTENERS] = 0\n      if (!this[DISCARDED] && !this[PIPES].length) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * true if the 'end' event has been emitted\n   */\n  get emittedEnd() {\n    return this[EMITTED_END]\n  }\n\n  [MAYBE_EMIT_END]() {\n    if (\n      !this[EMITTING_END] &&\n      !this[EMITTED_END] &&\n      !this[DESTROYED] &&\n      this[BUFFER].length === 0 &&\n      this[EOF]\n    ) {\n      this[EMITTING_END] = true\n      this.emit('end')\n      this.emit('prefinish')\n      this.emit('finish')\n      if (this[CLOSED]) this.emit('close')\n      this[EMITTING_END] = false\n    }\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.emit`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * If the stream has been destroyed, and the event is something other\n   * than 'close' or 'error', then `false` is returned and no handlers\n   * are called.\n   *\n   * If the event is 'end', and has already been emitted, then the event\n   * is ignored. If the stream is in a paused or non-flowing state, then\n   * the event will be deferred until data flow resumes. If the stream is\n   * async, then handlers will be called on the next tick rather than\n   * immediately.\n   *\n   * If the event is 'close', and 'end' has not yet been emitted, then\n   * the event will be deferred until after 'end' is emitted.\n   *\n   * If the event is 'error', and an AbortSignal was provided for the stream,\n   * and there are no listeners, then the event is ignored, matching the\n   * behavior of node core streams in the presense of an AbortSignal.\n   *\n   * If the event is 'finish' or 'prefinish', then all listeners will be\n   * removed after emitting the event, to prevent double-firing.\n   */\n  emit<Event extends keyof Events>(\n    ev: Event,\n    ...args: Events[Event]\n  ): boolean {\n    const data = args[0]\n    // error and close are only events allowed after calling destroy()\n    if (\n      ev !== 'error' &&\n      ev !== 'close' &&\n      ev !== DESTROYED &&\n      this[DESTROYED]\n    ) {\n      return false\n    } else if (ev === 'data') {\n      return !this[OBJECTMODE] && !data\n        ? false\n        : this[ASYNC]\n        ? (defer(() => this[EMITDATA](data as RType)), true)\n        : this[EMITDATA](data as RType)\n    } else if (ev === 'end') {\n      return this[EMITEND]()\n    } else if (ev === 'close') {\n      this[CLOSED] = true\n      // don't emit close before 'end' and 'finish'\n      if (!this[EMITTED_END] && !this[DESTROYED]) return false\n      const ret = super.emit('close')\n      this.removeAllListeners('close')\n      return ret\n    } else if (ev === 'error') {\n      this[EMITTED_ERROR] = data\n      super.emit(ERROR, data)\n      const ret =\n        !this[SIGNAL] || this.listeners('error').length\n          ? super.emit('error', data)\n          : false\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'resume') {\n      const ret = super.emit('resume')\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'finish' || ev === 'prefinish') {\n      const ret = super.emit(ev)\n      this.removeAllListeners(ev)\n      return ret\n    }\n\n    // Some other unknown event\n    const ret = super.emit(ev as string, ...args)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITDATA](data: RType) {\n    for (const p of this[PIPES]) {\n      if (p.dest.write(data as RType) === false) this.pause()\n    }\n    const ret = this[DISCARDED] ? false : super.emit('data', data)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITEND]() {\n    if (this[EMITTED_END]) return false\n\n    this[EMITTED_END] = true\n    this.readable = false\n    return this[ASYNC]\n      ? (defer(() => this[EMITEND2]()), true)\n      : this[EMITEND2]()\n  }\n\n  [EMITEND2]() {\n    if (this[DECODER]) {\n      const data = this[DECODER].end()\n      if (data) {\n        for (const p of this[PIPES]) {\n          p.dest.write(data as RType)\n        }\n        if (!this[DISCARDED]) super.emit('data', data)\n      }\n    }\n\n    for (const p of this[PIPES]) {\n      p.end()\n    }\n    const ret = super.emit('end')\n    this.removeAllListeners('end')\n    return ret\n  }\n\n  /**\n   * Return a Promise that resolves to an array of all emitted data once\n   * the stream ends.\n   */\n  async collect(): Promise<RType[] & { dataLength: number }> {\n    const buf: RType[] & { dataLength: number } = Object.assign([], {\n      dataLength: 0,\n    })\n    if (!this[OBJECTMODE]) buf.dataLength = 0\n    // set the promise first, in case an error is raised\n    // by triggering the flow here.\n    const p = this.promise()\n    this.on('data', c => {\n      buf.push(c)\n      if (!this[OBJECTMODE])\n        buf.dataLength += (c as Minipass.BufferOrString).length\n    })\n    await p\n    return buf\n  }\n\n  /**\n   * Return a Promise that resolves to the concatenation of all emitted data\n   * once the stream ends.\n   *\n   * Not allowed on objectMode streams.\n   */\n  async concat(): Promise<RType> {\n    if (this[OBJECTMODE]) {\n      throw new Error('cannot concat in objectMode')\n    }\n    const buf = await this.collect()\n    return (\n      this[ENCODING]\n        ? buf.join('')\n        : Buffer.concat(buf as Buffer[], buf.dataLength)\n    ) as RType\n  }\n\n  /**\n   * Return a void Promise that resolves once the stream ends.\n   */\n  async promise(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.on(DESTROYED, () => reject(new Error('stream destroyed')))\n      this.on('error', er => reject(er))\n      this.on('end', () => resolve())\n    })\n  }\n\n  /**\n   * Asynchronous `for await of` iteration.\n   *\n   * This will continue emitting all chunks until the stream terminates.\n   */\n  [Symbol.asyncIterator](): AsyncGenerator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = async (): Promise<IteratorReturnResult<void>> => {\n      this.pause()\n      stopped = true\n      return { value: undefined, done: true }\n    }\n    const next = (): Promise<IteratorResult<RType, void>> => {\n      if (stopped) return stop()\n      const res = this.read()\n      if (res !== null) return Promise.resolve({ done: false, value: res })\n\n      if (this[EOF]) return stop()\n\n      let resolve!: (res: IteratorResult<RType>) => void\n      let reject!: (er: unknown) => void\n      const onerr = (er: unknown) => {\n        this.off('data', ondata)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        reject(er)\n      }\n      const ondata = (value: RType) => {\n        this.off('error', onerr)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        this.pause()\n        resolve({ value, done: !!this[EOF] })\n      }\n      const onend = () => {\n        this.off('error', onerr)\n        this.off('data', ondata)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        resolve({ done: true, value: undefined })\n      }\n      const ondestroy = () => onerr(new Error('stream destroyed'))\n      return new Promise<IteratorResult<RType>>((res, rej) => {\n        reject = rej\n        resolve = res\n        this.once(DESTROYED, ondestroy)\n        this.once('error', onerr)\n        this.once('end', onend)\n        this.once('data', ondata)\n      })\n    }\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.asyncIterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Synchronous `for of` iteration.\n   *\n   * The iteration will terminate when the internal buffer runs out, even\n   * if the stream has not yet terminated.\n   */\n  [Symbol.iterator](): Generator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = (): IteratorReturnResult<void> => {\n      this.pause()\n      this.off(ERROR, stop)\n      this.off(DESTROYED, stop)\n      this.off('end', stop)\n      stopped = true\n      return { done: true, value: undefined }\n    }\n\n    const next = (): IteratorResult<RType, void> => {\n      if (stopped) return stop()\n      const value = this.read()\n      return value === null ? stop() : { done: false, value }\n    }\n\n    this.once('end', stop)\n    this.once(ERROR, stop)\n    this.once(DESTROYED, stop)\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.iterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Destroy a stream, preventing it from being used for any further purpose.\n   *\n   * If the stream has a `close()` method, then it will be called on\n   * destruction.\n   *\n   * After destruction, any attempt to write data, read data, or emit most\n   * events will be ignored.\n   *\n   * If an error argument is provided, then it will be emitted in an\n   * 'error' event.\n   */\n  destroy(er?: unknown) {\n    if (this[DESTROYED]) {\n      if (er) this.emit('error', er)\n      else this.emit(DESTROYED)\n      return this\n    }\n\n    this[DESTROYED] = true\n    this[DISCARDED] = true\n\n    // throw away all buffered data, it's never coming out\n    this[BUFFER].length = 0\n    this[BUFFERLENGTH] = 0\n\n    const wc = this as Minipass<RType, WType, Events> & {\n      close?: () => void\n    }\n    if (typeof wc.close === 'function' && !this[CLOSED]) wc.close()\n\n    if (er) this.emit('error', er)\n    // if no error to emit, still reject pending promises\n    else this.emit(DESTROYED)\n\n    return this\n  }\n\n  /**\n   * Alias for {@link isStream}\n   *\n   * Former export location, maintained for backwards compatibility.\n   *\n   * @deprecated\n   */\n  static get isStream() {\n    return isStream\n  }\n}\n", "// this is just a very light wrapper around 2 arrays with an offset index\n\nimport { GLOBSTAR } from 'minimatch'\nexport type MMPattern = string | RegExp | typeof GLOBSTAR\n\n// an array of length >= 1\nexport type PatternList = [p: MMPattern, ...rest: MMPattern[]]\nexport type UNCPatternList = [\n  p0: '',\n  p1: '',\n  p2: string,\n  p3: string,\n  ...rest: MMPattern[],\n]\nexport type DrivePatternList = [p0: string, ...rest: MMPattern[]]\nexport type AbsolutePatternList = [p0: '', ...rest: MMPattern[]]\nexport type GlobList = [p: string, ...rest: string[]]\n\nconst isPatternList = (pl: MMPattern[]): pl is PatternList =>\n  pl.length >= 1\nconst isGlobList = (gl: string[]): gl is GlobList => gl.length >= 1\n\n/**\n * An immutable-ish view on an array of glob parts and their parsed\n * results\n */\nexport class Pattern {\n  readonly #patternList: PatternList\n  readonly #globList: GlobList\n  readonly #index: number\n  readonly length: number\n  readonly #platform: NodeJS.Platform\n  #rest?: Pattern | null\n  #globString?: string\n  #isDrive?: boolean\n  #isUNC?: boolean\n  #isAbsolute?: boolean\n  #followGlobstar: boolean = true\n\n  constructor(\n    patternList: MMPattern[],\n    globList: string[],\n    index: number,\n    platform: NodeJS.Platform,\n  ) {\n    if (!isPatternList(patternList)) {\n      throw new TypeError('empty pattern list')\n    }\n    if (!isGlobList(globList)) {\n      throw new TypeError('empty glob list')\n    }\n    if (globList.length !== patternList.length) {\n      throw new TypeError('mismatched pattern list and glob list lengths')\n    }\n    this.length = patternList.length\n    if (index < 0 || index >= this.length) {\n      throw new TypeError('index out of range')\n    }\n    this.#patternList = patternList\n    this.#globList = globList\n    this.#index = index\n    this.#platform = platform\n\n    // normalize root entries of absolute patterns on initial creation.\n    if (this.#index === 0) {\n      // c: => ['c:/']\n      // C:/ => ['C:/']\n      // C:/x => ['C:/', 'x']\n      // //host/share => ['//host/share/']\n      // //host/share/ => ['//host/share/']\n      // //host/share/x => ['//host/share/', 'x']\n      // /etc => ['/', 'etc']\n      // / => ['/']\n      if (this.isUNC()) {\n        // '' / '' / 'host' / 'share'\n        const [p0, p1, p2, p3, ...prest] = this.#patternList\n        const [g0, g1, g2, g3, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = [p0, p1, p2, p3, ''].join('/')\n        const g = [g0, g1, g2, g3, ''].join('/')\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      } else if (this.isDrive() || this.isAbsolute()) {\n        const [p1, ...prest] = this.#patternList\n        const [g1, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = (p1 as string) + '/'\n        const g = g1 + '/'\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      }\n    }\n  }\n\n  /**\n   * The first entry in the parsed list of patterns\n   */\n  pattern(): MMPattern {\n    return this.#patternList[this.#index] as MMPattern\n  }\n\n  /**\n   * true of if pattern() returns a string\n   */\n  isString(): boolean {\n    return typeof this.#patternList[this.#index] === 'string'\n  }\n  /**\n   * true of if pattern() returns GLOBSTAR\n   */\n  isGlobstar(): boolean {\n    return this.#patternList[this.#index] === GLOBSTAR\n  }\n  /**\n   * true if pattern() returns a regexp\n   */\n  isRegExp(): boolean {\n    return this.#patternList[this.#index] instanceof RegExp\n  }\n\n  /**\n   * The /-joined set of glob parts that make up this pattern\n   */\n  globString(): string {\n    return (this.#globString =\n      this.#globString ||\n      (this.#index === 0 ?\n        this.isAbsolute() ?\n          this.#globList[0] + this.#globList.slice(1).join('/')\n        : this.#globList.join('/')\n      : this.#globList.slice(this.#index).join('/')))\n  }\n\n  /**\n   * true if there are more pattern parts after this one\n   */\n  hasMore(): boolean {\n    return this.length > this.#index + 1\n  }\n\n  /**\n   * The rest of the pattern after this part, or null if this is the end\n   */\n  rest(): Pattern | null {\n    if (this.#rest !== undefined) return this.#rest\n    if (!this.hasMore()) return (this.#rest = null)\n    this.#rest = new Pattern(\n      this.#patternList,\n      this.#globList,\n      this.#index + 1,\n      this.#platform,\n    )\n    this.#rest.#isAbsolute = this.#isAbsolute\n    this.#rest.#isUNC = this.#isUNC\n    this.#rest.#isDrive = this.#isDrive\n    return this.#rest\n  }\n\n  /**\n   * true if the pattern represents a //unc/path/ on windows\n   */\n  isUNC(): boolean {\n    const pl = this.#patternList\n    return this.#isUNC !== undefined ?\n        this.#isUNC\n      : (this.#isUNC =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          pl[0] === '' &&\n          pl[1] === '' &&\n          typeof pl[2] === 'string' &&\n          !!pl[2] &&\n          typeof pl[3] === 'string' &&\n          !!pl[3])\n  }\n\n  // pattern like C:/...\n  // split = ['C:', ...]\n  // XXX: would be nice to handle patterns like `c:*` to test the cwd\n  // in c: for *, but I don't know of a way to even figure out what that\n  // cwd is without actually chdir'ing into it?\n  /**\n   * True if the pattern starts with a drive letter on Windows\n   */\n  isDrive(): boolean {\n    const pl = this.#patternList\n    return this.#isDrive !== undefined ?\n        this.#isDrive\n      : (this.#isDrive =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          this.length > 1 &&\n          typeof pl[0] === 'string' &&\n          /^[a-z]:$/i.test(pl[0]))\n  }\n\n  // pattern = '/' or '/...' or '/x/...'\n  // split = ['', ''] or ['', ...] or ['', 'x', ...]\n  // Drive and UNC both considered absolute on windows\n  /**\n   * True if the pattern is rooted on an absolute path\n   */\n  isAbsolute(): boolean {\n    const pl = this.#patternList\n    return this.#isAbsolute !== undefined ?\n        this.#isAbsolute\n      : (this.#isAbsolute =\n          (pl[0] === '' && pl.length > 1) ||\n          this.isDrive() ||\n          this.isUNC())\n  }\n\n  /**\n   * consume the root of the pattern, and return it\n   */\n  root(): string {\n    const p = this.#patternList[0]\n    return (\n        typeof p === 'string' && this.isAbsolute() && this.#index === 0\n      ) ?\n        p\n      : ''\n  }\n\n  /**\n   * Check to see if the current globstar pattern is allowed to follow\n   * a symbolic link.\n   */\n  checkFollowGlobstar(): boolean {\n    return !(\n      this.#index === 0 ||\n      !this.isGlobstar() ||\n      !this.#followGlobstar\n    )\n  }\n\n  /**\n   * Mark that the current globstar pattern is following a symbolic link\n   */\n  markFollowGlobstar(): boolean {\n    if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)\n      return false\n    this.#followGlobstar = false\n    return true\n  }\n}\n", "// give it a pattern, and it'll be able to tell you if\n// a given path should be ignored.\n// Ignoring a path ignores its children if the pattern ends in /**\n// Ignores are always parsed in dot:true mode\n\nimport { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\nexport interface IgnoreLike {\n  ignored?: (p: Path) => boolean\n  childrenIgnored?: (p: Path) => boolean\n  add?: (ignore: string) => void\n}\n\nconst defaultPlatform: NodeJS.Platform =\n  (\n    typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string'\n  ) ?\n    process.platform\n  : 'linux'\n\n/**\n * Class used to process ignored patterns\n */\nexport class Ignore implements IgnoreLike {\n  relative: Minimatch[]\n  relativeChildren: Minimatch[]\n  absolute: Minimatch[]\n  absoluteChildren: Minimatch[]\n  platform: NodeJS.Platform\n  mmopts: MinimatchOptions\n\n  constructor(\n    ignored: string[],\n    {\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      platform = defaultPlatform,\n    }: GlobWalkerOpts,\n  ) {\n    this.relative = []\n    this.absolute = []\n    this.relativeChildren = []\n    this.absoluteChildren = []\n    this.platform = platform\n    this.mmopts = {\n      dot: true,\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      optimizationLevel: 2,\n      platform,\n      nocomment: true,\n      nonegate: true,\n    }\n    for (const ign of ignored) this.add(ign)\n  }\n\n  add(ign: string) {\n    // this is a little weird, but it gives us a clean set of optimized\n    // minimatch matchers, without getting tripped up if one of them\n    // ends in /** inside a brace section, and it's only inefficient at\n    // the start of the walk, not along it.\n    // It'd be nice if the Pattern class just had a .test() method, but\n    // handling globstars is a bit of a pita, and that code already lives\n    // in minimatch anyway.\n    // Another way would be if maybe Minimatch could take its set/globParts\n    // as an option, and then we could at least just use Pattern to test\n    // for absolute-ness.\n    // Yet another way, Minimatch could take an array of glob strings, and\n    // a cwd option, and do the right thing.\n    const mm = new Minimatch(ign, this.mmopts)\n    for (let i = 0; i < mm.set.length; i++) {\n      const parsed = mm.set[i]\n      const globParts = mm.globParts[i]\n      /* c8 ignore start */\n      if (!parsed || !globParts) {\n        throw new Error('invalid pattern object')\n      }\n      // strip off leading ./ portions\n      // https://github.com/isaacs/node-glob/issues/570\n      while (parsed[0] === '.' && globParts[0] === '.') {\n        parsed.shift()\n        globParts.shift()\n      }\n      /* c8 ignore stop */\n      const p = new Pattern(parsed, globParts, 0, this.platform)\n      const m = new Minimatch(p.globString(), this.mmopts)\n      const children = globParts[globParts.length - 1] === '**'\n      const absolute = p.isAbsolute()\n      if (absolute) this.absolute.push(m)\n      else this.relative.push(m)\n      if (children) {\n        if (absolute) this.absoluteChildren.push(m)\n        else this.relativeChildren.push(m)\n      }\n    }\n  }\n\n  ignored(p: Path): boolean {\n    const fullpath = p.fullpath()\n    const fullpaths = `${fullpath}/`\n    const relative = p.relative() || '.'\n    const relatives = `${relative}/`\n    for (const m of this.relative) {\n      if (m.match(relative) || m.match(relatives)) return true\n    }\n    for (const m of this.absolute) {\n      if (m.match(fullpath) || m.match(fullpaths)) return true\n    }\n    return false\n  }\n\n  childrenIgnored(p: Path): boolean {\n    const fullpath = p.fullpath() + '/'\n    const relative = (p.relative() || '.') + '/'\n    for (const m of this.relativeChildren) {\n      if (m.match(relative)) return true\n    }\n    for (const m of this.absoluteChildren) {\n      if (m.match(fullpath)) return true\n    }\n    return false\n  }\n}\n", "// synchronous utility for filtering entries and calculating subwalks\n\nimport { GLOBSTAR, MMRegExp } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { MMPattern, Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\n/**\n * A cache of which patterns have been processed for a given Path\n */\nexport class HasWalkedCache {\n  store: Map<string, Set<string>>\n  constructor(store: Map<string, Set<string>> = new Map()) {\n    this.store = store\n  }\n  copy() {\n    return new HasWalkedCache(new Map(this.store))\n  }\n  hasWalked(target: Path, pattern: Pattern) {\n    return this.store.get(target.fullpath())?.has(pattern.globString())\n  }\n  storeWalked(target: Path, pattern: Pattern) {\n    const fullpath = target.fullpath()\n    const cached = this.store.get(fullpath)\n    if (cached) cached.add(pattern.globString())\n    else this.store.set(fullpath, new Set([pattern.globString()]))\n  }\n}\n\n/**\n * A record of which paths have been matched in a given walk step,\n * and whether they only are considered a match if they are a directory,\n * and whether their absolute or relative path should be returned.\n */\nexport class MatchRecord {\n  store: Map<Path, number> = new Map()\n  add(target: Path, absolute: boolean, ifDir: boolean) {\n    const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0)\n    const current = this.store.get(target)\n    this.store.set(target, current === undefined ? n : n & current)\n  }\n  // match, absolute, ifdir\n  entries(): [Path, boolean, boolean][] {\n    return [...this.store.entries()].map(([path, n]) => [\n      path,\n      !!(n & 2),\n      !!(n & 1),\n    ])\n  }\n}\n\n/**\n * A collection of patterns that must be processed in a subsequent step\n * for a given path.\n */\nexport class SubWalks {\n  store: Map<Path, Pattern[]> = new Map()\n  add(target: Path, pattern: Pattern) {\n    if (!target.canReaddir()) {\n      return\n    }\n    const subs = this.store.get(target)\n    if (subs) {\n      if (!subs.find(p => p.globString() === pattern.globString())) {\n        subs.push(pattern)\n      }\n    } else this.store.set(target, [pattern])\n  }\n  get(target: Path): Pattern[] {\n    const subs = this.store.get(target)\n    /* c8 ignore start */\n    if (!subs) {\n      throw new Error('attempting to walk unknown path')\n    }\n    /* c8 ignore stop */\n    return subs\n  }\n  entries(): [Path, Pattern[]][] {\n    return this.keys().map(k => [k, this.store.get(k) as Pattern[]])\n  }\n  keys(): Path[] {\n    return [...this.store.keys()].filter(t => t.canReaddir())\n  }\n}\n\n/**\n * The class that processes patterns for a given path.\n *\n * Handles child entry filtering, and determining whether a path's\n * directory contents must be read.\n */\nexport class Processor {\n  hasWalkedCache: HasWalkedCache\n  matches = new MatchRecord()\n  subwalks = new SubWalks()\n  patterns?: Pattern[]\n  follow: boolean\n  dot: boolean\n  opts: GlobWalkerOpts\n\n  constructor(opts: GlobWalkerOpts, hasWalkedCache?: HasWalkedCache) {\n    this.opts = opts\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.hasWalkedCache =\n      hasWalkedCache ? hasWalkedCache.copy() : new HasWalkedCache()\n  }\n\n  processPatterns(target: Path, patterns: Pattern[]) {\n    this.patterns = patterns\n    const processingSet: [Path, Pattern][] = patterns.map(p => [target, p])\n\n    // map of paths to the magic-starting subwalks they need to walk\n    // first item in patterns is the filter\n\n    for (let [t, pattern] of processingSet) {\n      this.hasWalkedCache.storeWalked(t, pattern)\n\n      const root = pattern.root()\n      const absolute = pattern.isAbsolute() && this.opts.absolute !== false\n\n      // start absolute patterns at root\n      if (root) {\n        t = t.resolve(\n          root === '/' && this.opts.root !== undefined ?\n            this.opts.root\n          : root,\n        )\n        const rest = pattern.rest()\n        if (!rest) {\n          this.matches.add(t, true, false)\n          continue\n        } else {\n          pattern = rest\n        }\n      }\n\n      if (t.isENOENT()) continue\n\n      let p: MMPattern\n      let rest: Pattern | null\n      let changed = false\n      while (\n        typeof (p = pattern.pattern()) === 'string' &&\n        (rest = pattern.rest())\n      ) {\n        const c = t.resolve(p)\n        t = c\n        pattern = rest\n        changed = true\n      }\n      p = pattern.pattern()\n      rest = pattern.rest()\n      if (changed) {\n        if (this.hasWalkedCache.hasWalked(t, pattern)) continue\n        this.hasWalkedCache.storeWalked(t, pattern)\n      }\n\n      // now we have either a final string for a known entry,\n      // more strings for an unknown entry,\n      // or a pattern starting with magic, mounted on t.\n      if (typeof p === 'string') {\n        // must not be final entry, otherwise we would have\n        // concatenated it earlier.\n        const ifDir = p === '..' || p === '' || p === '.'\n        this.matches.add(t.resolve(p), absolute, ifDir)\n        continue\n      } else if (p === GLOBSTAR) {\n        // if no rest, match and subwalk pattern\n        // if rest, process rest and subwalk pattern\n        // if it's a symlink, but we didn't get here by way of a\n        // globstar match (meaning it's the first time THIS globstar\n        // has traversed a symlink), then we follow it. Otherwise, stop.\n        if (\n          !t.isSymbolicLink() ||\n          this.follow ||\n          pattern.checkFollowGlobstar()\n        ) {\n          this.subwalks.add(t, pattern)\n        }\n        const rp = rest?.pattern()\n        const rrest = rest?.rest()\n        if (!rest || ((rp === '' || rp === '.') && !rrest)) {\n          // only HAS to be a dir if it ends in **/ or **/.\n          // but ending in ** will match files as well.\n          this.matches.add(t, absolute, rp === '' || rp === '.')\n        } else {\n          if (rp === '..') {\n            // this would mean you're matching **/.. at the fs root,\n            // and no thanks, I'm not gonna test that specific case.\n            /* c8 ignore start */\n            const tp = t.parent || t\n            /* c8 ignore stop */\n            if (!rrest) this.matches.add(tp, absolute, true)\n            else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {\n              this.subwalks.add(tp, rrest)\n            }\n          }\n        }\n      } else if (p instanceof RegExp) {\n        this.subwalks.add(t, pattern)\n      }\n    }\n\n    return this\n  }\n\n  subwalkTargets(): Path[] {\n    return this.subwalks.keys()\n  }\n\n  child() {\n    return new Processor(this.opts, this.hasWalkedCache)\n  }\n\n  // return a new Processor containing the subwalks for each\n  // child entry, and a set of matches, and\n  // a hasWalkedCache that's a copy of this one\n  // then we're going to call\n  filterEntries(parent: Path, entries: Path[]): Processor {\n    const patterns = this.subwalks.get(parent)\n    // put matches and entry walks into the results processor\n    const results = this.child()\n    for (const e of entries) {\n      for (const pattern of patterns) {\n        const absolute = pattern.isAbsolute()\n        const p = pattern.pattern()\n        const rest = pattern.rest()\n        if (p === GLOBSTAR) {\n          results.testGlobstar(e, pattern, rest, absolute)\n        } else if (p instanceof RegExp) {\n          results.testRegExp(e, p, rest, absolute)\n        } else {\n          results.testString(e, p, rest, absolute)\n        }\n      }\n    }\n    return results\n  }\n\n  testGlobstar(\n    e: Path,\n    pattern: Pattern,\n    rest: Pattern | null,\n    absolute: boolean,\n  ) {\n    if (this.dot || !e.name.startsWith('.')) {\n      if (!pattern.hasMore()) {\n        this.matches.add(e, absolute, false)\n      }\n      if (e.canReaddir()) {\n        // if we're in follow mode or it's not a symlink, just keep\n        // testing the same pattern. If there's more after the globstar,\n        // then this symlink consumes the globstar. If not, then we can\n        // follow at most ONE symlink along the way, so we mark it, which\n        // also checks to ensure that it wasn't already marked.\n        if (this.follow || !e.isSymbolicLink()) {\n          this.subwalks.add(e, pattern)\n        } else if (e.isSymbolicLink()) {\n          if (rest && pattern.checkFollowGlobstar()) {\n            this.subwalks.add(e, rest)\n          } else if (pattern.markFollowGlobstar()) {\n            this.subwalks.add(e, pattern)\n          }\n        }\n      }\n    }\n    // if the NEXT thing matches this entry, then also add\n    // the rest.\n    if (rest) {\n      const rp = rest.pattern()\n      if (\n        typeof rp === 'string' &&\n        // dots and empty were handled already\n        rp !== '..' &&\n        rp !== '' &&\n        rp !== '.'\n      ) {\n        this.testString(e, rp, rest.rest(), absolute)\n      } else if (rp === '..') {\n        /* c8 ignore start */\n        const ep = e.parent || e\n        /* c8 ignore stop */\n        this.subwalks.add(ep, rest)\n      } else if (rp instanceof RegExp) {\n        this.testRegExp(e, rp, rest.rest(), absolute)\n      }\n    }\n  }\n\n  testRegExp(\n    e: Path,\n    p: MMRegExp,\n    rest: Pattern | null,\n    absolute: boolean,\n  ) {\n    if (!p.test(e.name)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n\n  testString(e: Path, p: string, rest: Pattern | null, absolute: boolean) {\n    // should never happen?\n    if (!e.isNamed(p)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n}\n", "/**\n * Single-use utility classes to provide functionality to the {@link Glob}\n * methods.\n *\n * @module\n */\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport { Ignore, IgnoreLike } from './ignore.js'\n\n// XXX can we somehow make it so that it NEVER processes a given path more than\n// once, enough that the match set tracking is no longer needed?  that'd speed\n// things up a lot.  Or maybe bring back nounique, and skip it in that case?\n\n// a single minimatch set entry with 1 or more parts\nimport { Pattern } from './pattern.js'\nimport { Processor } from './processor.js'\n\nexport interface GlobWalkerOpts {\n  absolute?: boolean\n  allowWindowsEscape?: boolean\n  cwd?: string | URL\n  dot?: boolean\n  dotRelative?: boolean\n  follow?: boolean\n  ignore?: string | string[] | IgnoreLike\n  mark?: boolean\n  matchBase?: boolean\n  // Note: maxDepth here means \"maximum actual Path.depth()\",\n  // not \"maximum depth beyond cwd\"\n  maxDepth?: number\n  nobrace?: boolean\n  nocase?: boolean\n  nodir?: boolean\n  noext?: boolean\n  noglobstar?: boolean\n  platform?: NodeJS.Platform\n  posix?: boolean\n  realpath?: boolean\n  root?: string\n  stat?: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape?: boolean\n  withFileTypes?: boolean\n  includeChildMatches?: boolean\n}\n\nexport type GWOFileTypesTrue = GlobWalkerOpts & {\n  withFileTypes: true\n}\nexport type GWOFileTypesFalse = GlobWalkerOpts & {\n  withFileTypes: false\n}\nexport type GWOFileTypesUnset = GlobWalkerOpts & {\n  withFileTypes?: undefined\n}\n\nexport type Result<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue ? Path\n  : O extends GWOFileTypesFalse ? string\n  : O extends GWOFileTypesUnset ? string\n  : Path | string\n\nexport type Matches<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue ? Set<Path>\n  : O extends GWOFileTypesFalse ? Set<string>\n  : O extends GWOFileTypesUnset ? Set<string>\n  : Set<Path | string>\n\nexport type MatchStream<O extends GlobWalkerOpts> = Minipass<\n  Result<O>,\n  Result<O>\n>\n\nconst makeIgnore = (\n  ignore: string | string[] | IgnoreLike,\n  opts: GlobWalkerOpts,\n): IgnoreLike =>\n  typeof ignore === 'string' ? new Ignore([ignore], opts)\n  : Array.isArray(ignore) ? new Ignore(ignore, opts)\n  : ignore\n\n/**\n * basic walking utilities that all the glob walker types use\n */\nexport abstract class GlobUtil<O extends GlobWalkerOpts = GlobWalkerOpts> {\n  path: Path\n  patterns: Pattern[]\n  opts: O\n  seen: Set<Path> = new Set<Path>()\n  paused: boolean = false\n  aborted: boolean = false\n  #onResume: (() => any)[] = []\n  #ignore?: IgnoreLike\n  #sep: '\\\\' | '/'\n  signal?: AbortSignal\n  maxDepth: number\n  includeChildMatches: boolean\n\n  constructor(patterns: Pattern[], path: Path, opts: O)\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    this.patterns = patterns\n    this.path = path\n    this.opts = opts\n    this.#sep = !opts.posix && opts.platform === 'win32' ? '\\\\' : '/'\n    this.includeChildMatches = opts.includeChildMatches !== false\n    if (opts.ignore || !this.includeChildMatches) {\n      this.#ignore = makeIgnore(opts.ignore ?? [], opts)\n      if (\n        !this.includeChildMatches &&\n        typeof this.#ignore.add !== 'function'\n      ) {\n        const m = 'cannot ignore child matches, ignore lacks add() method.'\n        throw new Error(m)\n      }\n    }\n    // ignore, always set with maxDepth, but it's optional on the\n    // GlobOptions type\n    /* c8 ignore start */\n    this.maxDepth = opts.maxDepth || Infinity\n    /* c8 ignore stop */\n    if (opts.signal) {\n      this.signal = opts.signal\n      this.signal.addEventListener('abort', () => {\n        this.#onResume.length = 0\n      })\n    }\n  }\n\n  #ignored(path: Path): boolean {\n    return this.seen.has(path) || !!this.#ignore?.ignored?.(path)\n  }\n  #childrenIgnored(path: Path): boolean {\n    return !!this.#ignore?.childrenIgnored?.(path)\n  }\n\n  // backpressure mechanism\n  pause() {\n    this.paused = true\n  }\n  resume() {\n    /* c8 ignore start */\n    if (this.signal?.aborted) return\n    /* c8 ignore stop */\n    this.paused = false\n    let fn: (() => any) | undefined = undefined\n    while (!this.paused && (fn = this.#onResume.shift())) {\n      fn()\n    }\n  }\n  onResume(fn: () => any) {\n    if (this.signal?.aborted) return\n    /* c8 ignore start */\n    if (!this.paused) {\n      fn()\n    } else {\n      /* c8 ignore stop */\n      this.#onResume.push(fn)\n    }\n  }\n\n  // do the requisite realpath/stat checking, and return the path\n  // to add or undefined to filter it out.\n  async matchCheck(e: Path, ifDir: boolean): Promise<Path | undefined> {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || (await e.realpath())\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? await e.lstat() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = await s.realpath()\n      /* c8 ignore start */\n      if (target && (target.isUnknown() || this.opts.stat)) {\n        await target.lstat()\n      }\n      /* c8 ignore stop */\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  matchCheckTest(e: Path | undefined, ifDir: boolean): Path | undefined {\n    return (\n        e &&\n          (this.maxDepth === Infinity || e.depth() <= this.maxDepth) &&\n          (!ifDir || e.canReaddir()) &&\n          (!this.opts.nodir || !e.isDirectory()) &&\n          (!this.opts.nodir ||\n            !this.opts.follow ||\n            !e.isSymbolicLink() ||\n            !e.realpathCached()?.isDirectory()) &&\n          !this.#ignored(e)\n      ) ?\n        e\n      : undefined\n  }\n\n  matchCheckSync(e: Path, ifDir: boolean): Path | undefined {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || e.realpathSync()\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? e.lstatSync() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = s.realpathSync()\n      if (target && (target?.isUnknown() || this.opts.stat)) {\n        target.lstatSync()\n      }\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  abstract matchEmit(p: Result<O>): void\n  abstract matchEmit(p: string | Path): void\n\n  matchFinish(e: Path, absolute: boolean) {\n    if (this.#ignored(e)) return\n    // we know we have an ignore if this is false, but TS doesn't\n    if (!this.includeChildMatches && this.#ignore?.add) {\n      const ign = `${e.relativePosix()}/**`\n      this.#ignore.add(ign)\n    }\n    const abs =\n      this.opts.absolute === undefined ? absolute : this.opts.absolute\n    this.seen.add(e)\n    const mark = this.opts.mark && e.isDirectory() ? this.#sep : ''\n    // ok, we have what we need!\n    if (this.opts.withFileTypes) {\n      this.matchEmit(e)\n    } else if (abs) {\n      const abs = this.opts.posix ? e.fullpathPosix() : e.fullpath()\n      this.matchEmit(abs + mark)\n    } else {\n      const rel = this.opts.posix ? e.relativePosix() : e.relative()\n      const pre =\n        this.opts.dotRelative && !rel.startsWith('..' + this.#sep) ?\n          '.' + this.#sep\n        : ''\n      this.matchEmit(!rel ? '.' + mark : pre + rel + mark)\n    }\n  }\n\n  async match(e: Path, absolute: boolean, ifDir: boolean): Promise<void> {\n    const p = await this.matchCheck(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  matchSync(e: Path, absolute: boolean, ifDir: boolean): void {\n    const p = this.matchCheckSync(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  walkCB(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() => this.walkCB2(target, patterns, processor, cb))\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const childrenCached = t.readdirCached()\n      if (t.calledReaddir())\n        this.walkCB3(t, childrenCached, processor, next)\n      else {\n        t.readdirCB(\n          (_, entries) => this.walkCB3(t, entries, processor, next),\n          true,\n        )\n      }\n    }\n\n    next()\n  }\n\n  walkCB3(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n\n  walkCBSync(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2Sync(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2Sync(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() =>\n        this.walkCB2Sync(target, patterns, processor, cb),\n      )\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const children = t.readdirSync()\n      this.walkCB3Sync(t, children, processor, next)\n    }\n\n    next()\n  }\n\n  walkCB3Sync(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2Sync(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n}\n\nexport class GlobWalker<\n  O extends GlobWalkerOpts = GlobWalkerOpts,\n> extends GlobUtil<O> {\n  matches = new Set<Result<O>>()\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n  }\n\n  matchEmit(e: Result<O>): void {\n    this.matches.add(e)\n  }\n\n  async walk(): Promise<Set<Result<O>>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      await this.path.lstat()\n    }\n    await new Promise((res, rej) => {\n      this.walkCB(this.path, this.patterns, () => {\n        if (this.signal?.aborted) {\n          rej(this.signal.reason)\n        } else {\n          res(this.matches)\n        }\n      })\n    })\n    return this.matches\n  }\n\n  walkSync(): Set<Result<O>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    // nothing for the callback to do, because this never pauses\n    this.walkCBSync(this.path, this.patterns, () => {\n      if (this.signal?.aborted) throw this.signal.reason\n    })\n    return this.matches\n  }\n}\n\nexport class GlobStream<\n  O extends GlobWalkerOpts = GlobWalkerOpts,\n> extends GlobUtil<O> {\n  results: Minipass<Result<O>, Result<O>>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.results = new Minipass<Result<O>, Result<O>>({\n      signal: this.signal,\n      objectMode: true,\n    })\n    this.results.on('drain', () => this.resume())\n    this.results.on('resume', () => this.resume())\n  }\n\n  matchEmit(e: Result<O>): void {\n    this.results.write(e)\n    if (!this.results.flowing) this.pause()\n  }\n\n  stream(): MatchStream<O> {\n    const target = this.path\n    if (target.isUnknown()) {\n      target.lstat().then(() => {\n        this.walkCB(target, this.patterns, () => this.results.end())\n      })\n    } else {\n      this.walkCB(target, this.patterns, () => this.results.end())\n    }\n    return this.results\n  }\n\n  streamSync(): MatchStream<O> {\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    this.walkCBSync(this.path, this.patterns, () => this.results.end())\n    return this.results\n  }\n}\n", "import { Minimatch } from 'minimatch'\nimport { GlobOptions } from './glob.js'\n\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nexport const hasMagic = (\n  pattern: string | string[],\n  options: GlobOptions = {},\n): boolean => {\n  if (!Array.isArray(pattern)) {\n    pattern = [pattern]\n  }\n  for (const p of pattern) {\n    if (new Minimatch(p, options).hasMagic()) return true\n  }\n  return false\n}\n", "import { escape, unescape } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nimport { Glob } from './glob.js'\nimport { hasMagic } from './has-magic.js'\n\nexport { escape, unescape } from 'minimatch'\nexport type {\n  FSOption,\n  Path,\n  WalkOptions,\n  WalkOptionsWithFileTypesTrue,\n  WalkOptionsWithFileTypesUnset,\n} from 'path-scurry'\nexport { Glob } from './glob.js'\nexport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nexport { hasMagic } from './has-magic.js'\nexport { Ignore } from './ignore.js'\nexport type { IgnoreLike } from './ignore.js'\nexport type { MatchStream } from './walker.js'\n\n/**\n * Syncronous form of {@link globStream}. Will read all the matches as fast as\n * you consume them, even all in a single tick if you consume them immediately,\n * but will still respond to backpressure if they're not consumed immediately.\n */\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Minipass<Path, Path>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesUnset,\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).streamSync()\n}\n\n/**\n * Return a stream that emits all the strings or `Path` objects and\n * then emits `end` when completed.\n */\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Minipass<Path, Path>\nexport function globStream(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions,\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).stream()\n}\n\n/**\n * Synchronous form of {@link glob}\n */\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Path[]\nexport function globSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Path[] | string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).walkSync()\n}\n\n/**\n * Perform an asynchronous glob search for the pattern(s) specified. Returns\n * [Path](https://isaacs.github.io/path-scurry/classes/PathBase) objects if the\n * {@link withFileTypes} option is set to `true`. See {@link GlobOptions} for\n * full option descriptions.\n */\nasync function glob_(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Promise<Path[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions,\n): Promise<Path[] | string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).walk()\n}\n\n/**\n * Return a sync iterator for walking glob pattern matches.\n */\nexport function globIterateSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Generator<Path, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Generator<Path, void, void> | Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).iterateSync()\n}\n\n/**\n * Return an async iterator for walking glob pattern matches.\n */\nexport function globIterate(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): AsyncGenerator<Path, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions,\n): AsyncGenerator<Path, void, void> | AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).iterate()\n}\n\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexport const streamSync = globStreamSync\nexport const stream = Object.assign(globStream, { sync: globStreamSync })\nexport const iterateSync = globIterateSync\nexport const iterate = Object.assign(globIterate, {\n  sync: globIterateSync,\n})\nexport const sync = Object.assign(globSync, {\n  stream: globStreamSync,\n  iterate: globIterateSync,\n})\n\nexport const glob = Object.assign(glob_, {\n  glob: glob_,\n  globSync,\n  sync,\n  globStream,\n  stream,\n  globStreamSync,\n  streamSync,\n  globIterate,\n  iterate,\n  globIterateSync,\n  iterateSync,\n  Glob,\n  hasMagic,\n  escape,\n  unescape,\n})\nglob.glob = glob\n", "import { Node } from \"../../context/node\";\nimport { NodeType } from \"../types\";\nimport { getZephyrBindingsLoader } from \"./zephyr/loader\";\n\nexport type BindingType = \"Zephyr\";\n\nexport interface BindingLoader {\n  getNodeTypes(node: Node): NodeType[];\n}\n\nexport const getBindingLoader = (\n  folders: string[],\n  type: BindingType\n): BindingLoader => ({\n  getNodeTypes: (node: Node) => {\n    switch (type) {\n      case \"Zephyr\":\n        return getZephyrBindingsLoader().getNodeTypes(folders, node);\n    }\n  },\n});\n"],
  "mappings": "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",
  "names": ["exports", "require_is", "exports", "exports", "ErrorCodes", "Message", "exports", "Touch", "LRUCache", "exports", "Disposable", "exports", "RAL", "exports", "Event", "exports", "CancellationToken", "exports", "CancellationState", "id", "exports", "resolve", "exports", "MessageReader", "ResolvedMessageReaderOptions", "exports", "MessageWriter", "ResolvedMessageWriterOptions", "exports", "result", "exports", "CancelNotification", "ProgressToken", "ProgressNotification", "StarRequestHandler", "Trace", "TraceValues", "TraceFormat", "SetTraceNotification", "LogTraceNotification", "ConnectionErrors", "ConnectionStrategy", "IdCancellationReceiverStrategy", "RequestCancellationReceiverStrategy", "CancellationReceiverStrategy", "CancellationSenderStrategy", "id", "CancellationStrategy", "MessageStrategy", "ConnectionOptions", "ConnectionState", "startTime", "connection", "resolve", "exports", "exports", "stream", "resolve", "RIL", "exports", "path", "process", "resolve", "exports", "module", "require_main", "exports", "module", "require", "DocumentUri", "URI", "integer", "uinteger", "Position", "Range", "Location", "LocationLink", "Color", "ColorInformation", "ColorPresentation", "TextEdit", "FoldingRangeKind", "FoldingRange", "DiagnosticRelatedInformation", "DiagnosticSeverity", "DiagnosticTag", "CodeDescription", "Diagnostic", "Command", "ChangeAnnotation", "ChangeAnnotationIdentifier", "AnnotatedTextEdit", "TextDocumentEdit", "CreateFile", "RenameFile", "DeleteFile", "WorkspaceEdit", "TextEditChangeImpl", "id", "ChangeAnnotations", "WorkspaceChange", "TextDocumentIdentifier", "VersionedTextDocumentIdentifier", "OptionalVersionedTextDocumentIdentifier", "TextDocumentItem", "MarkupKind", "MarkupContent", "CompletionItemKind", "InsertTextFormat", "CompletionItemTag", "InsertReplaceEdit", "InsertTextMode", "CompletionItemLabelDetails", "CompletionItem", "CompletionList", "MarkedString", "Hover", "ParameterInformation", "SignatureInformation", "DocumentHighlightKind", "DocumentHighlight", "SymbolKind", "SymbolTag", "SymbolInformation", "WorkspaceSymbol", "DocumentSymbol", "CodeActionKind", "CodeActionTriggerKind", "CodeActionContext", "CodeAction", "CodeLens", "FormattingOptions", "DocumentLink", "SelectionRange", "SemanticTokenTypes", "SemanticTokenModifiers", "SemanticTokens", "InlineValueText", "InlineValueVariableLookup", "InlineValueEvaluatableExpression", "InlineValueContext", "InlayHintKind", "InlayHintLabelPart", "InlayHint", "StringValue", "InlineCompletionItem", "InlineCompletionList", "InlineCompletionTriggerKind", "SelectedCompletionInfo", "InlineCompletionContext", "WorkspaceFolder", "TextDocument", "FullTextDocument", "mergeSort", "Is", "undefined", "require_messages", "exports", "MessageDirection", "require_is", "exports", "exports", "ImplementationRequest", "exports", "TypeDefinitionRequest", "exports", "WorkspaceFoldersRequest", "DidChangeWorkspaceFoldersNotification", "exports", "ConfigurationRequest", "exports", "DocumentColorRequest", "ColorPresentationRequest", "exports", "FoldingRangeRequest", "FoldingRangeRefreshRequest", "exports", "DeclarationRequest", "exports", "SelectionRangeRequest", "exports", "WorkDoneProgress", "WorkDoneProgressCreateRequest", "WorkDoneProgressCancelNotification", "exports", "CallHierarchyPrepareRequest", "CallHierarchyIncomingCallsRequest", "CallHierarchyOutgoingCallsRequest", "exports", "TokenFormat", "SemanticTokensRegistrationType", "SemanticTokensRequest", "SemanticTokensDeltaRequest", "SemanticTokensRangeRequest", "SemanticTokensRefreshRequest", "exports", "ShowDocumentRequest", "exports", "LinkedEditingRangeRequest", "exports", "FileOperationPatternKind", "WillCreateFilesRequest", "DidCreateFilesNotification", "WillRenameFilesRequest", "DidRenameFilesNotification", "DidDeleteFilesNotification", "WillDeleteFilesRequest", "exports", "UniquenessLevel", "MonikerKind", "MonikerRequest", "exports", "TypeHierarchyPrepareRequest", "TypeHierarchySupertypesRequest", "TypeHierarchySubtypesRequest", "exports", "InlineValueRequest", "InlineValueRefreshRequest", "exports", "InlayHintRequest", "InlayHintResolveRequest", "InlayHintRefreshRequest", "exports", "DiagnosticServerCancellationData", "DocumentDiagnosticReportKind", "DocumentDiagnosticRequest", "WorkspaceDiagnosticRequest", "DiagnosticRefreshRequest", "exports", "NotebookCellKind", "ExecutionSummary", "NotebookCell", "NotebookDocument", "NotebookDocumentSyncRegistrationType", "DidOpenNotebookDocumentNotification", "NotebookCellArrayChange", "DidChangeNotebookDocumentNotification", "DidSaveNotebookDocumentNotification", "DidCloseNotebookDocumentNotification", "exports", "InlineCompletionRequest", "exports", "TextDocumentFilter", "NotebookDocumentFilter", "NotebookCellTextDocumentFilter", "DocumentSelector", "RegistrationRequest", "UnregistrationRequest", "ResourceOperationKind", "FailureHandlingKind", "PositionEncodingKind", "StaticRegistrationOptions", "TextDocumentRegistrationOptions", "WorkDoneProgressOptions", "InitializeRequest", "InitializeErrorCodes", "InitializedNotification", "ShutdownRequest", "ExitNotification", "DidChangeConfigurationNotification", "MessageType", "ShowMessageNotification", "ShowMessageRequest", "LogMessageNotification", "TelemetryEventNotification", "TextDocumentSyncKind", "DidOpenTextDocumentNotification", "TextDocumentContentChangeEvent", "DidChangeTextDocumentNotification", "DidCloseTextDocumentNotification", "DidSaveTextDocumentNotification", "TextDocumentSaveReason", "WillSaveTextDocumentNotification", "WillSaveTextDocumentWaitUntilRequest", "DidChangeWatchedFilesNotification", "FileChangeType", "RelativePattern", "WatchKind", "PublishDiagnosticsNotification", "CompletionTriggerKind", "CompletionRequest", "CompletionResolveRequest", "HoverRequest", "SignatureHelpTriggerKind", "SignatureHelpRequest", "DefinitionRequest", "ReferencesRequest", "DocumentHighlightRequest", "DocumentSymbolRequest", "CodeActionRequest", "CodeActionResolveRequest", "WorkspaceSymbolRequest", "WorkspaceSymbolResolveRequest", "CodeLensRequest", "CodeLensResolveRequest", "CodeLensRefreshRequest", "DocumentLinkRequest", "DocumentLinkResolveRequest", "DocumentFormattingRequest", "DocumentRangeFormattingRequest", "DocumentRangesFormattingRequest", "DocumentOnTypeFormattingRequest", "PrepareSupportDefaultBehavior", "RenameRequest", "PrepareRenameRequest", "ExecuteCommandRequest", "ApplyWorkspaceEditRequest", "require_connection", "exports", "require_api", "exports", "LSPErrorCodes", "require_main", "exports", "exports", "exports", "connection", "ResultProgress", "exports", "exports", "exports", "exports", "SemanticTokensBuilder", "tokenModifiers", "id", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "TextDocuments", "connection", "exports", "connection", "change", "exports", "exports", "connection", "BulkRegistration", "id", "BulkUnregistration", "one", "two", "createConnection", "resolve", "result", "exports", "path", "resolve", "message", "FileSystem", "require_node", "exports", "module", "exports", "require_api", "exports", "ProposedFeatures", "require_main", "exports", "Files", "createConnection", "require_node", "exports", "module", "exports", "exports", "path", "exports", "yaml", "exports", "exports", "exports", "res", "exports", "res", "exports", "Node", "anchors", "exports", "Node", "exports", "match", "node", "exports", "Node", "path", "exports", "exports", "i", "end", "exports", "exports", "match", "exports", "exports", "exports", "value", "exports", "exports", "exports", "stringify", "comment", "str", "exports", "exports", "map", "exports", "exports", "seq", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "require_schema", "exports", "exports", "exports", "pairs", "exports", "omap", "require_bool", "exports", "require_float", "exports", "require_int", "exports", "n", "exports", "set", "exports", "res", "match", "require_schema", "exports", "exports", "tags", "exports", "exports", "exports", "path", "res", "exports", "exports", "exports", "exports", "exports", "exports", "sep", "exports", "exports", "sep", "exports", "sep", "exports", "exports", "value", "end", "sep", "exports", "match", "sep", "exports", "tag", "exports", "exports", "exports", "exports", "exports", "exports", "sep", "exports", "path", "exports", "exports", "Lexer", "i", "ch", "exports", "exports", "Parser", "sep", "start", "exports", "lineCounter", "exports", "exports", "module", "exports", "module", "expand", "import_node", "TextDocument", "contextAware", "import_vscode_languageserver", "import_vscode_languageserver", "import_vscode_languageserver", "import_vscode_languageserver", "import_vscode_languageserver", "import_vscode_languageserver", "v", "import_vscode_languageserver", "import_vscode_languageserver", "import_vscode_languageserver", "import_vscode_languageserver", "import_vscode_languageserver", "path", "import_vscode_languageserver", "import_vscode_languageserver", "import_vscode_languageserver", "import_vscode_languageserver", "import_vscode_languageserver", "import_vscode_languageserver", "i", "import_vscode_languageserver", "import_vscode_languageserver", "import_vscode_languageserver", "values", "import_vscode_languageserver", "id", "path", "import_vscode_languageserver", "import_vscode_languageserver", "import_vscode_languageserver", "match", "path", "import_vscode_languageserver", "import_vscode_languageserver", "import_vscode_languageserver", "import_vscode_languageserver", "resolve", "tokenModifiers", "node", "import_vscode_languageserver", "resolve", "import_vscode_languageserver", "path", "import_fs", "import_path", "resolve", "process", "node", "values", "i", "path", "import_vscode_languageserver", "import_fs", "path", "p", "import_vscode_languageserver", "n", "import_vscode_languageserver", "import_vscode_languageserver", "getPropertyReferences", "import_vscode_languageserver", "import_vscode_languageserver", "import_vscode_languageserver", "import_vscode_languageserver", "contextAware", "editToMoveToNewLine", "import_vscode_languageserver", "glob", "i", "acc", "ext", "glob", "hasMagic", "start", "final", "ext", "qmark", "star", "expand", "regExpEscape", "import_node_url", "v", "bf", "import_fs", "Stream", "p", "ret", "resolve", "res", "rps", "readdirCB", "path", "p", "resolve", "sep", "filter", "process", "sync", "defaultPlatform", "path", "rest", "path", "abs", "target", "defaultPlatform", "import_path", "import_fs", "import_vscode_languageserver", "yaml", "path", "p", "i", "resolve", "orderedParsers"]
}
